[
    {
        "id": "dc5996c16196eba2",
        "type": "tab",
        "label": "Manual Game Flows",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7ebbc29c647c58ec",
        "type": "tab",
        "label": "Dashboard - Manual Game Flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3d42d3194c2552f8",
        "type": "tab",
        "label": "MQTT Output to Field",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8d38dc412a73d987",
        "type": "tab",
        "label": "MQTT Input From Field Game Flows",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0661e4588e011b72",
        "type": "tab",
        "label": "Game Logic Flows",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f74b301e4f22310f",
        "type": "tab",
        "label": "Game Data Access Flows",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5b48d63e525889af",
        "type": "tab",
        "label": "BallFlow(test)",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e1a756fd8363adc2",
        "type": "tab",
        "label": "LaserFlow(test)",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8b4b6895c0ec29ec",
        "type": "tab",
        "label": "Storage Management",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f3ec5d556e86f8d0",
        "type": "tab",
        "label": "Field Config",
        "disabled": false,
        "info": ""
    },
    {
        "id": "829ad5255d8cf01f",
        "type": "tab",
        "label": "Dashboard - Field Config",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5999f1d09afe1039",
        "type": "mqtt-broker",
        "name": "mqtt-node-main",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "6f6f2d0bf9d4b5e3",
        "type": "sqlitedb",
        "db": "/home/pi/sqlite-storage/sqlite",
        "mode": "RWC"
    },
    {
        "id": "24769b923875c2f1",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ffee29fff6f243e7",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "none",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "df6f4c796677e729",
        "type": "ui_group",
        "name": "Manual Game Controls",
        "tab": "24769b923875c2f1",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "efa02099cf2bc4a1",
        "type": "ui_group",
        "name": "Debug Screen",
        "tab": "24769b923875c2f1",
        "order": 2,
        "disp": false,
        "width": "17",
        "collapse": false
    },
    {
        "id": "8cc3fd17a6d665c5",
        "type": "ui_tab",
        "name": "Field Config",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a5991f3b10b51e7c",
        "type": "ui_group",
        "name": "Default",
        "tab": "8cc3fd17a6d665c5",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "bcef7098b2bcab87",
        "type": "inject",
        "z": "dc5996c16196eba2",
        "name": "New Match",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "4eb277af36ef1fe2"
            ]
        ]
    },
    {
        "id": "4eb277af36ef1fe2",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 7",
        "links": [
            "a5a1bd31c468f86b"
        ],
        "x": 285,
        "y": 160,
        "wires": []
    },
    {
        "id": "c2285509eb863856",
        "type": "inject",
        "z": "dc5996c16196eba2",
        "name": "Current Global.Matchnum",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "matchnum",
        "payloadType": "global",
        "x": 190,
        "y": 720,
        "wires": [
            [
                "e7fdc24bcd360c08"
            ]
        ]
    },
    {
        "id": "e7fdc24bcd360c08",
        "type": "debug",
        "z": "dc5996c16196eba2",
        "name": "Debug Manual Game Flows",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 720,
        "wires": []
    },
    {
        "id": "372c7a6bec7d1005",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Game Control Flows that can be triggered manually",
        "info": "",
        "x": 250,
        "y": 40,
        "wires": []
    },
    {
        "id": "58e0133d504974b2",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Start a new match ",
        "info": "Creates a new match in the Game table\nSets the global matchnum for all flows to use",
        "x": 150,
        "y": 120,
        "wires": []
    },
    {
        "id": "5eef5dc3824c88f6",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Dump to Debug the Current match num",
        "info": "",
        "x": 210,
        "y": 680,
        "wires": []
    },
    {
        "id": "63b6bb6097222b63",
        "type": "inject",
        "z": "dc5996c16196eba2",
        "name": "Dump to Debug Latest Match",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 820,
        "wires": [
            [
                "c30231dee65db09d"
            ]
        ]
    },
    {
        "id": "c30231dee65db09d",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 9",
        "links": [
            "18a554bcaa2360e7",
            "ca18ad730b62784e"
        ],
        "x": 425,
        "y": 820,
        "wires": []
    },
    {
        "id": "1f2c1fa133c6065f",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Dump to Debug the Current match num",
        "info": "",
        "x": 210,
        "y": 780,
        "wires": []
    },
    {
        "id": "baf9c9e56c55af9c",
        "type": "inject",
        "z": "dc5996c16196eba2",
        "name": "Increment Hit (RBO, Side 1)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 240,
        "wires": [
            [
                "803409c672685edb"
            ]
        ]
    },
    {
        "id": "803409c672685edb",
        "type": "function",
        "z": "dc5996c16196eba2",
        "name": "Set Values ",
        "func": "var o = {};\n\no.num_hits = 1;\no.BUILDING_NAME = 'RTO';\no.side_id = 1;\n\nmsg.payload = o;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 240,
        "wires": [
            [
                "02b8a461b8de262a"
            ]
        ]
    },
    {
        "id": "02b8a461b8de262a",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 48",
        "links": [
            "af55cd6eb001ec61"
        ],
        "x": 615,
        "y": 240,
        "wires": []
    },
    {
        "id": "4d99b7cae64f909e",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Increment Hit (Building RBO, Side 1)",
        "info": "Creates a new match in the Game table\nSets the global matchnum for all flows to use",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "37b9350256bf1cc0",
        "type": "inject",
        "z": "dc5996c16196eba2",
        "name": "Drop Ball (Building RBO)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 320,
        "wires": [
            [
                "a079891af81acf69",
                "779d72582a45aa82"
            ]
        ]
    },
    {
        "id": "a079891af81acf69",
        "type": "function",
        "z": "dc5996c16196eba2",
        "name": "Set Values ",
        "func": "var o ={};\n\no.num_drops = 1;\no.num_hits = 1;\no.BUILDING_NAME = 'RBO';\n\nmsg.payload = o;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 320,
        "wires": [
            [
                "c854b1ceacdd7cbd"
            ]
        ]
    },
    {
        "id": "c854b1ceacdd7cbd",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 49",
        "links": [
            "63f807f3f36abd11"
        ],
        "x": 615,
        "y": 320,
        "wires": []
    },
    {
        "id": "3f886858a14bf1f8",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Drop Ball (Building RBO)",
        "info": "",
        "x": 170,
        "y": 280,
        "wires": []
    },
    {
        "id": "eb9f4d74e26f9854",
        "type": "inject",
        "z": "dc5996c16196eba2",
        "name": "Set Trench Bags",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 420,
        "wires": [
            [
                "95d8b751de777e8d"
            ]
        ]
    },
    {
        "id": "95d8b751de777e8d",
        "type": "function",
        "z": "dc5996c16196eba2",
        "name": "Set Values ",
        "func": "var o = {};\n\no.num_bags = 3;\no.BUILDING_NAME = 'RBO';\n\nmsg.payload = o;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 420,
        "wires": [
            [
                "a2c40ebd42a054a9"
            ]
        ]
    },
    {
        "id": "a2c40ebd42a054a9",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 50",
        "links": [
            "0d084e688f622348"
        ],
        "x": 605,
        "y": 420,
        "wires": []
    },
    {
        "id": "8430477f261fe058",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Set Trench Bags (RBO, bags=3)",
        "info": "",
        "x": 190,
        "y": 380,
        "wires": []
    },
    {
        "id": "cfa55283398d5d96",
        "type": "inject",
        "z": "dc5996c16196eba2",
        "name": "Set Fire Score",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 560,
        "wires": [
            [
                "6c96858cd3695db2"
            ]
        ]
    },
    {
        "id": "6c96858cd3695db2",
        "type": "function",
        "z": "dc5996c16196eba2",
        "name": "Set Values ",
        "func": "var o = {};\n\no.FCS = 3;\no.BUILDING_NAME = 'RBO';\n\nmsg.payload = o;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 560,
        "wires": [
            [
                "711e25dc20dbd9af"
            ]
        ]
    },
    {
        "id": "711e25dc20dbd9af",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 51",
        "links": [
            "c5098de218c47d8f"
        ],
        "x": 605,
        "y": 560,
        "wires": []
    },
    {
        "id": "6b33a4946c072763",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Set Fire Score (RBO, FCS=3)",
        "info": "",
        "x": 180,
        "y": 520,
        "wires": []
    },
    {
        "id": "779d72582a45aa82",
        "type": "function",
        "z": "dc5996c16196eba2",
        "name": "(p)Set Values ",
        "func": "var o = {};\n\no.num_hits = 3;\no.BUILDING_NAME = 'RBI';\no.side_id = 1;\n\nmsg.payload = o;\nmsg.test = o.BUILDING_NAME;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 360,
        "wires": [
            [
                "7684f0009e5ef352"
            ]
        ]
    },
    {
        "id": "7684f0009e5ef352",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 48",
        "links": [
            "af55cd6eb001ec61"
        ],
        "x": 615,
        "y": 360,
        "wires": []
    },
    {
        "id": "b199686f052fe77f",
        "type": "comment",
        "z": "7ebbc29c647c58ec",
        "name": "Publish Firescore To Specific Node -- this is on the Dashboard ",
        "info": "",
        "x": 260,
        "y": 400,
        "wires": []
    },
    {
        "id": "f1896d48a659a2cb",
        "type": "ui_form",
        "z": "7ebbc29c647c58ec",
        "name": "UpdateFireScore",
        "label": "Update Firescore to Node (Node ID = RBO, LBO, etc)",
        "group": "df6f4c796677e729",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Building Name",
                "value": "BUILDING_NAME",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Fire Score",
                "value": "FCS",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "BUILDING_NAME": "",
            "FCS": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "payload",
        "topicType": "msg",
        "splitLayout": "",
        "x": 130,
        "y": 520,
        "wires": [
            [
                "a29505e70d7b9ece",
                "84a25c5ebff798fb",
                "cc9c7da6d3ec6e77"
            ]
        ]
    },
    {
        "id": "c870ec8282153101",
        "type": "ui_text",
        "z": "7ebbc29c647c58ec",
        "group": "efa02099cf2bc4a1",
        "order": 1,
        "width": "6",
        "height": "5",
        "name": "FullRecordGame",
        "label": "Debug ",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 950,
        "y": 100,
        "wires": []
    },
    {
        "id": "a29505e70d7b9ece",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 22",
        "links": [
            "c5098de218c47d8f"
        ],
        "x": 665,
        "y": 500,
        "wires": []
    },
    {
        "id": "70c33d06c1d6b167",
        "type": "ui_button",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "group": "df6f4c796677e729",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "View Latest Match",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 200,
        "wires": [
            [
                "277d12403d6f9f63"
            ]
        ]
    },
    {
        "id": "28eb2bc55dcddb70",
        "type": "link in",
        "z": "7ebbc29c647c58ec",
        "name": "Dashboard Full Dump",
        "links": [
            "fa60c2b1c4bd6432",
            "ad3020e3fc7099e8"
        ],
        "x": 775,
        "y": 100,
        "wires": [
            [
                "c870ec8282153101"
            ]
        ]
    },
    {
        "id": "277d12403d6f9f63",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 23",
        "links": [
            "18a554bcaa2360e7"
        ],
        "x": 335,
        "y": 200,
        "wires": []
    },
    {
        "id": "8c392ecc9a35c3eb",
        "type": "ui_form",
        "z": "7ebbc29c647c58ec",
        "name": "Increment Laser Hit",
        "label": "Increment Laser Hit",
        "group": "df6f4c796677e729",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Building Name",
                "value": "BUILDING_NAME",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Building Side",
                "value": "side_id",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "BUILDING_NAME": "",
            "side_id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "payload",
        "topicType": "msg",
        "splitLayout": "",
        "x": 130,
        "y": 660,
        "wires": [
            [
                "628745f67dade8c1"
            ]
        ]
    },
    {
        "id": "a9c50f46b67e9896",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 24",
        "links": [
            "af55cd6eb001ec61"
        ],
        "x": 655,
        "y": 660,
        "wires": []
    },
    {
        "id": "628745f67dade8c1",
        "type": "json",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 660,
        "wires": [
            [
                "a17a899f16b9d084"
            ]
        ]
    },
    {
        "id": "a17a899f16b9d084",
        "type": "function",
        "z": "7ebbc29c647c58ec",
        "name": "add numhits 1",
        "func": "var o = msg.payload;\no['num_hits'] = 1;\nmsg.payload = o;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 660,
        "wires": [
            [
                "a9c50f46b67e9896",
                "84a25c5ebff798fb",
                "280f249d698f4e0c"
            ]
        ]
    },
    {
        "id": "d12eb5d4f1efff54",
        "type": "ui_form",
        "z": "7ebbc29c647c58ec",
        "name": "Increment Ball Drop",
        "label": "Increment Ball Drop Hit",
        "group": "df6f4c796677e729",
        "order": 6,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Building Name",
                "value": "BUILDING_NAME",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "BUILDING_NAME": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "payload",
        "topicType": "msg",
        "splitLayout": "",
        "x": 140,
        "y": 740,
        "wires": [
            [
                "04f926d3d2ee0cd5"
            ]
        ]
    },
    {
        "id": "75c5f224f591b111",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 25",
        "links": [
            "63f807f3f36abd11"
        ],
        "x": 655,
        "y": 740,
        "wires": []
    },
    {
        "id": "04f926d3d2ee0cd5",
        "type": "json",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 740,
        "wires": [
            [
                "ec3ec501f79d3d62"
            ]
        ]
    },
    {
        "id": "ec3ec501f79d3d62",
        "type": "function",
        "z": "7ebbc29c647c58ec",
        "name": "add drops 1",
        "func": "var o = msg.payload;\no['num_drops'] = 1;\nmsg.payload = o;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 740,
        "wires": [
            [
                "75c5f224f591b111",
                "84a25c5ebff798fb"
            ]
        ]
    },
    {
        "id": "11e4b52900aedf18",
        "type": "ui_form",
        "z": "7ebbc29c647c58ec",
        "name": "Increment Fire Score",
        "label": "Increment Fire Score",
        "group": "df6f4c796677e729",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Building Name",
                "value": "BUILDING_NAME",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "BUILDING_NAME": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "payload",
        "topicType": "msg",
        "splitLayout": "",
        "x": 140,
        "y": 580,
        "wires": [
            [
                "e2b1eeb7b8ba3724"
            ]
        ]
    },
    {
        "id": "37c9658f21fde304",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 26",
        "links": [
            "b49a77ff09745d6d"
        ],
        "x": 655,
        "y": 580,
        "wires": []
    },
    {
        "id": "e2b1eeb7b8ba3724",
        "type": "json",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 580,
        "wires": [
            [
                "445fcf6390a71317"
            ]
        ]
    },
    {
        "id": "445fcf6390a71317",
        "type": "function",
        "z": "7ebbc29c647c58ec",
        "name": "add firescore 1",
        "func": "var o = msg.payload;\no['FCS'] = 1;\n//o['BUILDING_NAME'] = o['BUILDING_NAME'];\nmsg.topic = \"nodered/firescore/\" + o['BUILDING_NAME'];\nmsg.payload = o;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 580,
        "wires": [
            [
                "37c9658f21fde304",
                "84a25c5ebff798fb",
                "cc9c7da6d3ec6e77"
            ]
        ]
    },
    {
        "id": "2cf306418f5ec1a7",
        "type": "ui_button",
        "z": "7ebbc29c647c58ec",
        "name": "StartNewMatch",
        "group": "df6f4c796677e729",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Start New Match",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "f10fa9da70498f8c",
                "6243bfa8703f32ca"
            ]
        ]
    },
    {
        "id": "6243bfa8703f32ca",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 27",
        "links": [
            "a5a1bd31c468f86b"
        ],
        "x": 335,
        "y": 140,
        "wires": []
    },
    {
        "id": "8f1d410dda1e4f81",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 32",
        "links": [
            "18a554bcaa2360e7"
        ],
        "x": 1315,
        "y": 580,
        "wires": []
    },
    {
        "id": "84a25c5ebff798fb",
        "type": "delay",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1180,
        "y": 580,
        "wires": [
            [
                "8f1d410dda1e4f81",
                "1fba5de08a2e1d6f"
            ]
        ]
    },
    {
        "id": "71a84d7f0e04039b",
        "type": "ui_ui_control",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "events": "change",
        "x": 1420,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "1fba5de08a2e1d6f",
        "type": "delay",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1180,
        "y": 640,
        "wires": [
            [
                "28b06e0ed349f7f2"
            ]
        ]
    },
    {
        "id": "28b06e0ed349f7f2",
        "type": "change",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 700,
        "wires": [
            [
                "71a84d7f0e04039b"
            ]
        ]
    },
    {
        "id": "cc9c7da6d3ec6e77",
        "type": "delay",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 780,
        "y": 540,
        "wires": [
            [
                "9225979b748b64fa"
            ]
        ]
    },
    {
        "id": "9225979b748b64fa",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 34",
        "links": [
            "5329a59e7e76c7c0"
        ],
        "x": 925,
        "y": 540,
        "wires": []
    },
    {
        "id": "7bfb5dc8f61f8b2e",
        "type": "comment",
        "z": "7ebbc29c647c58ec",
        "name": "Wait then publish to MQTT",
        "info": "",
        "x": 830,
        "y": 500,
        "wires": []
    },
    {
        "id": "3f61a9a29423178a",
        "type": "comment",
        "z": "7ebbc29c647c58ec",
        "name": "Wait then publish to Update and Refresh Game Dump",
        "info": "",
        "x": 1320,
        "y": 520,
        "wires": []
    },
    {
        "id": "7777761941ca1618",
        "type": "comment",
        "z": "7ebbc29c647c58ec",
        "name": "Text Box containing full Game Details",
        "info": "",
        "x": 890,
        "y": 60,
        "wires": []
    },
    {
        "id": "280f249d698f4e0c",
        "type": "debug",
        "z": "7ebbc29c647c58ec",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 780,
        "wires": []
    },
    {
        "id": "12d960ab4b6ae7fc",
        "type": "ui_button",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "group": "df6f4c796677e729",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "View Latest Match Hits, Drops, etc",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 200,
        "y": 260,
        "wires": [
            [
                "b988ed62abb07361"
            ]
        ]
    },
    {
        "id": "b988ed62abb07361",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 42",
        "links": [
            "ca18ad730b62784e"
        ],
        "x": 385,
        "y": 260,
        "wires": []
    },
    {
        "id": "35c2141922736ecd",
        "type": "ui_form",
        "z": "7ebbc29c647c58ec",
        "name": "Set Bag Count",
        "label": "Set Bags",
        "group": "df6f4c796677e729",
        "order": 6,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Building Name",
                "value": "BUILDING_NAME",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Total Bags",
                "value": "num_bags",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "BUILDING_NAME": "",
            "num_bags": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "payload",
        "topicType": "msg",
        "splitLayout": "",
        "x": 120,
        "y": 860,
        "wires": [
            [
                "43f3e3127047706d"
            ]
        ]
    },
    {
        "id": "a0893a9b1c6e7557",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 44",
        "links": [
            "0d084e688f622348"
        ],
        "x": 655,
        "y": 860,
        "wires": []
    },
    {
        "id": "43f3e3127047706d",
        "type": "json",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 860,
        "wires": [
            [
                "cf29e65e98345a3c"
            ]
        ]
    },
    {
        "id": "cf29e65e98345a3c",
        "type": "function",
        "z": "7ebbc29c647c58ec",
        "name": "add bags 1",
        "func": "var o = msg.payload;\nmsg.payload = o;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 860,
        "wires": [
            [
                "a0893a9b1c6e7557"
            ]
        ]
    },
    {
        "id": "c52350773fd926d5",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 45",
        "links": [
            "54f48d7af3ce8a94"
        ],
        "x": 695,
        "y": 80,
        "wires": []
    },
    {
        "id": "f10fa9da70498f8c",
        "type": "delay",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 380,
        "y": 80,
        "wires": [
            [
                "f964e3d3a6ee8191"
            ]
        ]
    },
    {
        "id": "f964e3d3a6ee8191",
        "type": "change",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "activematch",
                "pt": "global",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 80,
        "wires": [
            [
                "c52350773fd926d5"
            ]
        ]
    },
    {
        "id": "e0440fb8e9a44898",
        "type": "ui_button",
        "z": "7ebbc29c647c58ec",
        "name": "StartNewMatch",
        "group": "df6f4c796677e729",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "End Match",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 320,
        "wires": [
            [
                "4d6ebb703ebf233d"
            ]
        ]
    },
    {
        "id": "4d6ebb703ebf233d",
        "type": "change",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "activematch",
                "pt": "global",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "675e506f8cc3e3c6",
        "type": "mqtt out",
        "z": "3d42d3194c2552f8",
        "name": "window-off-mqtt",
        "topic": "windowoff",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 850,
        "y": 580,
        "wires": []
    },
    {
        "id": "c11317ac5ddaf481",
        "type": "switch",
        "z": "3d42d3194c2552f8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 560,
        "wires": [
            [
                "2e5f3a887f317523"
            ],
            [
                "675e506f8cc3e3c6"
            ]
        ]
    },
    {
        "id": "4f1f03d9ace5b214",
        "type": "mqtt out",
        "z": "3d42d3194c2552f8",
        "name": "window-on-mqtt",
        "topic": "windowon",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 850,
        "y": 520,
        "wires": []
    },
    {
        "id": "6a3261bd5d1634ff",
        "type": "inject",
        "z": "3d42d3194c2552f8",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 170,
        "y": 560,
        "wires": [
            [
                "7956c7f15c937519"
            ]
        ]
    },
    {
        "id": "7956c7f15c937519",
        "type": "function",
        "z": "3d42d3194c2552f8",
        "name": "Create flip/flop",
        "func": "var count = context.get(\"counter\") || 0;\ncount = (count + 1) % 2;\ncontext.set(\"counter\", count);\nmsg.payload = count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "if (context.get(\"counter\") === undefined) {\n    context.set(\"counter\", 0)\n}",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 560,
        "wires": [
            [
                "c11317ac5ddaf481"
            ]
        ]
    },
    {
        "id": "2e5f3a887f317523",
        "type": "change",
        "z": "3d42d3194c2552f8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ONMORETIME",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 520,
        "wires": [
            [
                "4f1f03d9ace5b214"
            ]
        ]
    },
    {
        "id": "a983e99d613458db",
        "type": "comment",
        "z": "3d42d3194c2552f8",
        "name": "Heartbeat - sending 1/0 flip flop",
        "info": "",
        "x": 230,
        "y": 480,
        "wires": []
    },
    {
        "id": "1d8b42fd0952e51b",
        "type": "link in",
        "z": "3d42d3194c2552f8",
        "name": "Game Reset Message - MQTT Out",
        "links": [
            "7d1c946cf1d71468"
        ],
        "x": 145,
        "y": 260,
        "wires": [
            [
                "2c24dc53b6049b78",
                "bd516590c06a9cdd"
            ]
        ]
    },
    {
        "id": "2c24dc53b6049b78",
        "type": "mqtt out",
        "z": "3d42d3194c2552f8",
        "name": "nodered/reset/match",
        "topic": "nodered/reset/match",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 880,
        "y": 260,
        "wires": []
    },
    {
        "id": "3a4f65d2f43899bf",
        "type": "link in",
        "z": "3d42d3194c2552f8",
        "name": "MQTT Send Firescore to Node",
        "links": [
            "456155bf98b91e2c",
            "530bf25ea8a65ce6",
            "a4f26d2999f4172e"
        ],
        "x": 145,
        "y": 120,
        "wires": [
            [
                "1e0fd409ba1a6b71",
                "2309213c36dd8fd8"
            ]
        ]
    },
    {
        "id": "1e0fd409ba1a6b71",
        "type": "mqtt out",
        "z": "3d42d3194c2552f8",
        "name": "msg.topic = \"nodered/firescore/\"+nodeid;",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 940,
        "y": 120,
        "wires": []
    },
    {
        "id": "31536652b0e65c1c",
        "type": "comment",
        "z": "3d42d3194c2552f8",
        "name": "Publish Fire score to a Node",
        "info": "",
        "x": 240,
        "y": 60,
        "wires": []
    },
    {
        "id": "3327ecc679f21bed",
        "type": "comment",
        "z": "3d42d3194c2552f8",
        "name": "Publish New Match to All",
        "info": "",
        "x": 230,
        "y": 200,
        "wires": []
    },
    {
        "id": "bd516590c06a9cdd",
        "type": "debug",
        "z": "3d42d3194c2552f8",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 320,
        "wires": []
    },
    {
        "id": "2309213c36dd8fd8",
        "type": "debug",
        "z": "3d42d3194c2552f8",
        "name": "Publish MQTT firescore",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 200,
        "wires": []
    },
    {
        "id": "6cddfd33ec05b6b7",
        "type": "mqtt in",
        "z": "8d38dc412a73d987",
        "name": "edgenode/laserhit/#",
        "topic": "edgenode/laserhit/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "5999f1d09afe1039",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 110,
        "y": 140,
        "wires": [
            [
                "515a805e2750f3bd",
                "372b9594ce982517"
            ]
        ]
    },
    {
        "id": "515a805e2750f3bd",
        "type": "link out",
        "z": "8d38dc412a73d987",
        "name": "link out 12",
        "links": [
            "af55cd6eb001ec61"
        ],
        "x": 415,
        "y": 140,
        "wires": []
    },
    {
        "id": "372b9594ce982517",
        "type": "debug",
        "z": "8d38dc412a73d987",
        "name": "MQTT Input From Field Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 220,
        "wires": []
    },
    {
        "id": "bfe3c6c9b8f1ea94",
        "type": "comment",
        "z": "8d38dc412a73d987",
        "name": "Game Field input messages over mqtt",
        "info": "",
        "x": 170,
        "y": 40,
        "wires": []
    },
    {
        "id": "dc294b3548567c18",
        "type": "comment",
        "z": "8d38dc412a73d987",
        "name": "NOTE: Config input from Field is handled in Field Config flows tab",
        "info": "",
        "x": 260,
        "y": 540,
        "wires": []
    },
    {
        "id": "17d454ff68066317",
        "type": "comment",
        "z": "8d38dc412a73d987",
        "name": "Incoming Laser Hit from Edge Node",
        "info": "",
        "x": 160,
        "y": 100,
        "wires": []
    },
    {
        "id": "c371b220cd83bc24",
        "type": "mqtt in",
        "z": "8d38dc412a73d987",
        "name": "edgenode/balldrop/#",
        "topic": "edgenode/balldrop/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "5999f1d09afe1039",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 120,
        "y": 260,
        "wires": [
            [
                "f1340eb46d54b7e1",
                "372b9594ce982517"
            ]
        ]
    },
    {
        "id": "f1340eb46d54b7e1",
        "type": "link out",
        "z": "8d38dc412a73d987",
        "name": "link out 39",
        "links": [
            "63f807f3f36abd11",
            "6a99a43b23841ade",
            "b46550ea0f878eaf"
        ],
        "x": 415,
        "y": 260,
        "wires": []
    },
    {
        "id": "a24bdb4ce4be3d99",
        "type": "mqtt in",
        "z": "8d38dc412a73d987",
        "name": "edgenode/troughbags/#",
        "topic": "edgenode/troughbags/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "5999f1d09afe1039",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 130,
        "y": 340,
        "wires": [
            [
                "372b9594ce982517",
                "87e764dac83fb351"
            ]
        ]
    },
    {
        "id": "87e764dac83fb351",
        "type": "link out",
        "z": "8d38dc412a73d987",
        "name": "link out 40",
        "links": [
            "0d084e688f622348"
        ],
        "x": 415,
        "y": 340,
        "wires": []
    },
    {
        "id": "5329a59e7e76c7c0",
        "type": "link in",
        "z": "0661e4588e011b72",
        "name": "Publish Latest Fire Score to Node",
        "links": [
            "9225979b748b64fa",
            "6f7cb6f71184bd2b"
        ],
        "x": 125,
        "y": 120,
        "wires": [
            [
                "ed62e9e4477e7eed"
            ]
        ]
    },
    {
        "id": "ddad0b88779e31bf",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "Retrieve Latest Fire Score for NodeId",
        "func": "\nvar o = msg.payload;\nvar matchid = global.get(\"matchnum\");\nvar nodeid = o.BUILDING_NAME;\nvar newMsg = {\n    \"topic\": \"SELECT FCS FROM Buildings WHERE MATCH_NUM = \" + matchid + \" AND BUILDING_NAME='\" + nodeid+\"';\",\n    \"nodeid\":nodeid\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 120,
        "wires": [
            [
                "3bf9e0f865abb5b8"
            ]
        ]
    },
    {
        "id": "3bf9e0f865abb5b8",
        "type": "sqlite",
        "z": "0661e4588e011b72",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 750,
        "y": 120,
        "wires": [
            [
                "e84e140d4b501f18"
            ]
        ]
    },
    {
        "id": "ed62e9e4477e7eed",
        "type": "json",
        "z": "0661e4588e011b72",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 230,
        "y": 120,
        "wires": [
            [
                "ddad0b88779e31bf"
            ]
        ]
    },
    {
        "id": "e84e140d4b501f18",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "Assemble message",
        "func": "var o = msg.payload\nvar firescore = o[0].FCS;\nvar nodeid = msg.nodeid;\nvar t = \"{ \\\"BUILDING_NAME\\\": \\\"\" + nodeid + \"\\\", \\\"FCS\\\": \" + firescore + \", \\\"timestamp\\\": \" + 1000 + \"}\";\nmsg.payload = t;\n//nodered/firescore/[node id]\nmsg.topic = \"nodered/firescore/\" + nodeid;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 120,
        "wires": [
            [
                "530bf25ea8a65ce6"
            ]
        ]
    },
    {
        "id": "530bf25ea8a65ce6",
        "type": "link out",
        "z": "0661e4588e011b72",
        "name": "link out 35",
        "links": [
            "3a4f65d2f43899bf"
        ],
        "x": 1115,
        "y": 120,
        "wires": []
    },
    {
        "id": "cc89dbf72d1f6006",
        "type": "comment",
        "z": "0661e4588e011b72",
        "name": "Retrieve then call to publish Latest Firescore to edge nodes",
        "info": "",
        "x": 310,
        "y": 60,
        "wires": []
    },
    {
        "id": "165f13f0f929f16e",
        "type": "link out",
        "z": "0661e4588e011b72",
        "name": "link out 36",
        "links": [
            "48af91ab4809047a"
        ],
        "x": 575,
        "y": 280,
        "wires": []
    },
    {
        "id": "456155bf98b91e2c",
        "type": "link out",
        "z": "0661e4588e011b72",
        "name": "link out 37",
        "links": [
            "3a4f65d2f43899bf"
        ],
        "x": 575,
        "y": 360,
        "wires": []
    },
    {
        "id": "dd55547c4747b6b1",
        "type": "link in",
        "z": "0661e4588e011b72",
        "name": "Callback Finished New Match DB",
        "links": [
            "7d1c946cf1d71468"
        ],
        "x": 125,
        "y": 280,
        "wires": [
            [
                "e65f24f080169b20"
            ]
        ]
    },
    {
        "id": "e65f24f080169b20",
        "type": "change",
        "z": "0661e4588e011b72",
        "name": "Set Debug Complete New Match",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Call Back Complete for New Match",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 280,
        "wires": [
            [
                "165f13f0f929f16e"
            ]
        ]
    },
    {
        "id": "754ef2450038c273",
        "type": "comment",
        "z": "0661e4588e011b72",
        "name": "New Match Call backs to set global.matchnum and notify field",
        "info": "Creates a new match in the Game table\nSets the global matchnum for all flows to use",
        "x": 320,
        "y": 240,
        "wires": []
    },
    {
        "id": "a67d3036cd8b2a23",
        "type": "link in",
        "z": "0661e4588e011b72",
        "name": "Callback Finished Set global.matchnum",
        "links": [
            "50a7d4620d30956a"
        ],
        "x": 125,
        "y": 360,
        "wires": [
            [
                "821e9e89a9ce075d"
            ]
        ]
    },
    {
        "id": "821e9e89a9ce075d",
        "type": "change",
        "z": "0661e4588e011b72",
        "name": "Set Notify Field",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 360,
        "wires": [
            [
                "456155bf98b91e2c",
                "3719854fdfed232d"
            ]
        ]
    },
    {
        "id": "3719854fdfed232d",
        "type": "link out",
        "z": "0661e4588e011b72",
        "name": "link out 38",
        "links": [
            "4c16c39c21c351b0"
        ],
        "x": 575,
        "y": 400,
        "wires": []
    },
    {
        "id": "58637d97cec1ab0f",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "Retrieve Latest Activity From Current Match",
        "func": "\nvar matchid = global.get(\"matchnum\");\nvar newMsg = {\n    \"topic\": \"SELECT B.MATCH_NUM, B.BUILDING_NAME, BWS.BUILDING_SIDE, B.NUM_BAGS, B.NUM_DROPS, BWS.NUM_HITS FROM Buildings B INNER JOIN BuildingWindowStatus BWS \"\n        + \"on B.MATCH_NUM = BWS.MATCH_NUM AND B.BUILDING_NAME=BWS.BUILDING_NAME \"\n        + \"WHERE B.MATCH_NUM = \" + matchid + \";\"\n}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 580,
        "wires": [
            [
                "17bbf4fea9206322"
            ]
        ]
    },
    {
        "id": "17bbf4fea9206322",
        "type": "sqlite",
        "z": "0661e4588e011b72",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 1210,
        "y": 580,
        "wires": [
            [
                "9aabfa9c28103459",
                "16c9d84b48e02137"
            ]
        ]
    },
    {
        "id": "079efb4aca734ee4",
        "type": "switch",
        "z": "0661e4588e011b72",
        "name": "Check is Active Match",
        "property": "activematch",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 520,
        "y": 580,
        "wires": [
            [
                "58637d97cec1ab0f",
                "4ed8add72706ca62"
            ],
            [
                "d87a3df5ff53208e"
            ]
        ],
        "info": "Active match is set when the match is created and set to 1, there is a stop button to stop the active match"
    },
    {
        "id": "ffb549e9c8fb8991",
        "type": "debug",
        "z": "0661e4588e011b72",
        "name": "Is Game Active",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 700,
        "wires": []
    },
    {
        "id": "54f48d7af3ce8a94",
        "type": "link in",
        "z": "0661e4588e011b72",
        "name": "Start Game Timer",
        "links": [
            "c52350773fd926d5"
        ],
        "x": 125,
        "y": 580,
        "wires": [
            [
                "42e79718ce6113ea"
            ]
        ]
    },
    {
        "id": "42e79718ce6113ea",
        "type": "trigger",
        "z": "0661e4588e011b72",
        "name": "Global Timer",
        "op1": "",
        "op2": "0",
        "op1type": "date",
        "op2type": "str",
        "duration": "-15",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 270,
        "y": 580,
        "wires": [
            [
                "079efb4aca734ee4"
            ]
        ]
    },
    {
        "id": "d87a3df5ff53208e",
        "type": "change",
        "z": "0661e4588e011b72",
        "name": "Match is not active",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Match is not active",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 700,
        "wires": [
            [
                "ffb549e9c8fb8991"
            ]
        ]
    },
    {
        "id": "4ed8add72706ca62",
        "type": "change",
        "z": "0661e4588e011b72",
        "name": "Match is active",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Match is active",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 660,
        "wires": [
            [
                "ffb549e9c8fb8991"
            ]
        ]
    },
    {
        "id": "9aabfa9c28103459",
        "type": "debug",
        "z": "0661e4588e011b72",
        "name": "Game Update Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 660,
        "wires": []
    },
    {
        "id": "e8fcbe1eaf3b0d0b",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "Calculate Scores",
        "func": "var o = msg.payload\n/*Results set inbound ( see what is calling this node - usuall results from a database call) \nwill be a list of buildings for the match, with the following data (all buidlings in the match with their data fields) \n\n\n[{\"MATCH_NUM\":5,\"BUILDING_NAME\":\"LTO\",\"BUILDING_SIDE\":1,\"NUM_BAGS\":0,\"NUM_DROPS\":1,\"NUM_HITS\":0},\n{\"MATCH_NUM\":5,\"BUILDING_NAME\":\"LTO\",\"BUILDING_SIDE\":2,\"NUM_BAGS\":0,\"NUM_DROPS\":1,\"NUM_HITS\":0},\n{\"MATCH_NUM\":5,\"BUILDING_NAME\":\"LTO\",\"BUILDING_SIDE\":3,\"NUM_BAGS\":0,\"NUM_DROPS\":1,\"NUM_HITS\":0},\n... \n*/\n\n//shows how you can iterate and access the data that is sent in\nvar debug1 = \"\";\no.forEach((element, index, array) => {\n    debug1 = debug1 + element.BUILDING_NAME;\n    debug1 = debug1 + \" | \";\n    debug1 = debug1 + \"NUM_HITS:\" +  element.NUM_HITS;\n    debug1 = debug1 + \" | \";\n    debug1 = debug1 + \"\\r \";\n  \n});\n\n\n//just some hacky code to iterate over the results and set some data fields\nvar HitsByBuilding = new Map();\nvar debug = \"\";\no.forEach((element, index, array) => {\n    var name = element.BUILDING_NAME;\n    var side = element.BUILDING_SIDE;\n    var numhits = element.NUM_HITS;\n    if (numhits>1) {\n        debug += debug + \" | \" + name + \":\" + numhits;\n        HitsByBuilding.set(name, numhits);\n    }\n\n});\n\n//BOGUS PLACE HOLDER -- more hacky code to show what you need to set \n//to send to both a database update, and on to the arduinos via mqtt\nvar updates = new Array();\n\nif (HitsByBuilding.has(\"RBI\")) {\n    var fireScoreBuilding1 = new Map();\n    fireScoreBuilding1.set(\"BUILDING_NAME\",\"RBI\");\n    fireScoreBuilding1.set(\"FS\", HitsByBuilding.get(\"RBI\"));    \n    updates.push(fireScoreBuilding1);\n}\n \nvar fireScoreBuilding2 = new Map();\nfireScoreBuilding2.set(\"BUILDING_NAME\", \"LTO\");\nfireScoreBuilding2.set(\"FS\", 3);\nupdates.push(fireScoreBuilding2);\n\nvar fireScoreBuilding3 = new Map();\nfireScoreBuilding3.set(\"BUILDING_NAME\", \"LTI\");\nfireScoreBuilding3.set(\"FS\", 3);\nupdates.push(fireScoreBuilding3);\n\n//This is now sent on to update the DB and also then triggers a send to MQTT for the edge nodes to pick up\nmsg.payload = updates;\n//Hacky way to do some specific debugging -\nmsg.lancedebug = debug;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 920,
        "wires": [
            [
                "0143496e1011b5b9",
                "36cc246e4c6ddac8",
                "a90ba086792e3e58"
            ]
        ]
    },
    {
        "id": "2c6de25e908b1996",
        "type": "link in",
        "z": "0661e4588e011b72",
        "name": "Game Update Calculations",
        "links": [
            "16c9d84b48e02137"
        ],
        "x": 125,
        "y": 920,
        "wires": [
            [
                "e8fcbe1eaf3b0d0b"
            ]
        ]
    },
    {
        "id": "16c9d84b48e02137",
        "type": "link out",
        "z": "0661e4588e011b72",
        "name": "link out 46",
        "links": [
            "2c6de25e908b1996"
        ],
        "x": 1435,
        "y": 580,
        "wires": []
    },
    {
        "id": "36cc246e4c6ddac8",
        "type": "debug",
        "z": "0661e4588e011b72",
        "name": "Game Update Calculations Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1020,
        "wires": []
    },
    {
        "id": "0143496e1011b5b9",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "SQL - Update Fire Score ",
        "func": "var matchnum = global.get(\"matchnum\");\nvar o = msg.payload;\n\n\nvar sql = \"\";\n\no.forEach((element, index, array) => {\n    var name = element.get(\"BUILDING_NAME\");\n    var fs = element.get(\"FS\");\n    var line = \"UPDATE Buildings SET \"\n        + \"FCS = \" + fs\n        + \" WHERE MATCH_NUM=\" + matchnum + \" AND BUILDING_NAME='\" + name + \"'\"\n        + \";\";\n    sql = sql + line;\n});\n\nmsg.topic = sql;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 920,
        "wires": [
            [
                "84a54223a84f044a"
            ]
        ]
    },
    {
        "id": "84a54223a84f044a",
        "type": "sqlite",
        "z": "0661e4588e011b72",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 950,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "23720f7562bead06",
        "type": "debug",
        "z": "0661e4588e011b72",
        "name": "Game Update Calculations SQL Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 1020,
        "wires": []
    },
    {
        "id": "a90ba086792e3e58",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "Update Message per Building",
        "func": "\nvar o = msg.payload;\n\n\n\nvar msgs = \"\";\nvar debug = \"\" + o.length + \" |\";\nvar i = 0;\no.forEach((element, index, array) => {\n    var name = element.get(\"BUILDING_NAME\");\n    var fs = element.get(\"FS\");\n    var payload = \"{\\\"BUILDING_NAME\\\" :\\\"\" + name + \"\\\", \\\"FCS\\\" :\" + fs + \"}\";\n    var topicname = \"nodered/firescore/\" + name;\n    var newmsg = \"{\\\"payload\\\" :\" + payload + \",\\\"topic\\\" : \\\"\" + topicname + \"\\\"}\\n\";\n    msgs = msgs +  newmsg;\n    debug = debug + \"|i:\" + i +\" | \" + name + \":\" + topicname + \" : \"+ fs +\"|\";\n    newmsg.lancedebug = debug;\n\n});\nvar nmsgs = {};\nnmsgs.payload = msgs;\nreturn nmsgs;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 860,
        "wires": [
            [
                "a758f9ceac41ea87"
            ]
        ]
    },
    {
        "id": "a4f26d2999f4172e",
        "type": "link out",
        "z": "0661e4588e011b72",
        "name": "link out 47",
        "links": [
            "3a4f65d2f43899bf"
        ],
        "x": 1345,
        "y": 860,
        "wires": []
    },
    {
        "id": "a26c69d85115ea29",
        "type": "comment",
        "z": "0661e4588e011b72",
        "name": "Global timer every 15 seconds, kicks of scoring updates to DB and MQTT",
        "info": "",
        "x": 360,
        "y": 520,
        "wires": []
    },
    {
        "id": "a758f9ceac41ea87",
        "type": "split",
        "z": "0661e4588e011b72",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": true,
        "addname": "",
        "x": 890,
        "y": 860,
        "wires": [
            [
                "520da49c1ff95703"
            ]
        ]
    },
    {
        "id": "4d4ec8f260d5ebe5",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "Update Message per",
        "func": "\nvar o = msg.payload;\nvar newmsg = {};\nnewmsg.topic = o[\"topic\"];\nnewmsg.payload = o[\"payload\"];\nnewmsg.lancedebug = msg.payload;\nreturn newmsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 860,
        "wires": [
            [
                "a4f26d2999f4172e"
            ]
        ]
    },
    {
        "id": "520da49c1ff95703",
        "type": "json",
        "z": "0661e4588e011b72",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1030,
        "y": 860,
        "wires": [
            [
                "4d4ec8f260d5ebe5"
            ]
        ]
    },
    {
        "id": "720d501722eb94f6",
        "type": "comment",
        "z": "0661e4588e011b72",
        "name": "Preps to send one FCS update per node",
        "info": "",
        "x": 760,
        "y": 820,
        "wires": []
    },
    {
        "id": "5dc6bd11da1ac853",
        "type": "comment",
        "z": "0661e4588e011b72",
        "name": "Calculates Scores  and updated DB and sends to Nodes -- kicked off by the global timer",
        "info": "",
        "x": 400,
        "y": 780,
        "wires": []
    },
    {
        "id": "58040edb208146fe",
        "type": "link in",
        "z": "0661e4588e011b72",
        "name": "Test Game Update - Multiple DB Calls",
        "links": [],
        "x": 35,
        "y": 1260,
        "wires": [
            [
                "d510a7e9d5995265"
            ]
        ]
    },
    {
        "id": "d510a7e9d5995265",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "Get Sensor Type",
        "func": "var o = msg.payload;\nvar matchnum = global.get(\"matchnum\");\n\nlet building_name = o.BUILDING_NAME;\n\nlet sqlsensor = \"SELECT Buildings.SENSOR_TYPE FROM Buildings WHERE ((Buildings.BUILDING_NAME=\\\"\" + building_name + \"\\\") AND  MATCH_NUM=\" + matchnum + \")\";\n\nmsg.topic = sqlsensor;\nmsg.BUILDING_NAME = building_name;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1260,
        "wires": [
            [
                "dd9895acbdbc4504",
                "c2adec50e107a03e"
            ]
        ]
    },
    {
        "id": "bf05d0d8b14ea7f2",
        "type": "inject",
        "z": "0661e4588e011b72",
        "name": "Game Score Example",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1320,
        "wires": [
            [
                "c09cabbfdec37b4d"
            ]
        ]
    },
    {
        "id": "c09cabbfdec37b4d",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "Inject BUILDING_NAME='RBO'",
        "func": "var o = {};\no.BUILDING_NAME=\"RBO\";\nmsg.payload = o;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1320,
        "wires": [
            [
                "d510a7e9d5995265"
            ]
        ]
    },
    {
        "id": "dd9895acbdbc4504",
        "type": "debug",
        "z": "0661e4588e011b72",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 1320,
        "wires": []
    },
    {
        "id": "afa42bbfacb3d333",
        "type": "debug",
        "z": "0661e4588e011b72",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 1240,
        "wires": []
    },
    {
        "id": "c2adec50e107a03e",
        "type": "sqlite",
        "z": "0661e4588e011b72",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 830,
        "y": 1260,
        "wires": [
            [
                "65527e82cde1cc35",
                "afa42bbfacb3d333"
            ]
        ]
    },
    {
        "id": "65527e82cde1cc35",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "On Sensor Type",
        "func": "var o = msg.payload\nvar matchnum = global.get(\"matchnum\");\n\n\n//shows how you can iterate and access the data that is sent in\nvar debug1 = \"\";\nvar building_type = \"none\";\no.forEach((element, index, array) => {\n    building_type = element.SENSOR_TYPE;\n});\n\nmsg.building_type = building_type;\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1680,
        "wires": [
            [
                "b998609c45c1c264",
                "80c91c52e1b02553"
            ]
        ]
    },
    {
        "id": "b998609c45c1c264",
        "type": "switch",
        "z": "0661e4588e011b72",
        "name": "",
        "property": "building_type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Ball",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Laser",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 1680,
        "wires": [
            [
                "f247b7ce4323955f"
            ],
            [
                "6339be531e52eb53"
            ]
        ]
    },
    {
        "id": "f247b7ce4323955f",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "Ball Type Logic - SQL SumOfWindowsActive",
        "func": "var o = msg.payload;\nvar matchnum = global.get(\"matchnum\");\n\nlet building_name = msg.BUILDING_NAME;\n\nvar totalActiveWindows = 0;\n\nlet sqltypeball = \"SELECT Sum(BuildingWindowStatus.WINDOWS_ACTIVE) AS SumOfWindowsActive FROM BuildingWindowStatus WHERE(((BuildingWindowStatus.BUILDING_NAME) =\\\"\" + building_name + \"\\\") AND MATCH_NUM=\" + matchnum + \") GROUP BY BuildingWindowStatus.BUILDING_NAME;\";\nmsg.topic = sqltypeball; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1640,
        "wires": [
            [
                "7b77eb317fb4a183",
                "80c91c52e1b02553"
            ]
        ]
    },
    {
        "id": "6339be531e52eb53",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "Laser Type Logic",
        "func": "//Place holder for now\n\nvar o = msg.payload;\nvar matchnum = global.get(\"matchnum\");\n\nlet building_name = o.BUILDING_NAME;\n\nvar totalActiveWindows = 0;\n\nlet sqltypeball = \"SELECT Sum(BuildingWindowStatus.WINDOWS_ACTIVE) AS SumOfWindowsActive FROM BuildingWindowStatus WHERE(((BuildingWindowStatus.BUILDING_NAME) =\\\"\" + building_name + \"\\\") AND MATCH_NUM=\" + matchnum + \") GROUP BY BuildingWindowStatus.BUILDING_NAME;\";\nmsg.topic = sqltypeball; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "7b77eb317fb4a183",
        "type": "sqlite",
        "z": "0661e4588e011b72",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 1070,
        "y": 1640,
        "wires": [
            [
                "e0bb725878bb46a2"
            ]
        ]
    },
    {
        "id": "8fbcd0d6393e6bbd",
        "type": "comment",
        "z": "0661e4588e011b72",
        "name": "Based on sensor type",
        "info": "",
        "x": 280,
        "y": 1620,
        "wires": []
    },
    {
        "id": "e0bb725878bb46a2",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "Get SumOfWindowsActive",
        "func": "var o = msg.payload\nvar matchnum = global.get(\"matchnum\");\n\n\n//shows how you can iterate and access the data that is sent in\nvar debug1 = \"\";\nvar SumOfWindowsActive = 0;\no.forEach((element, index, array) => {\n    SumOfWindowsActive = element.SumOfWindowsActive;\n});\n\nmsg.SumOfWindowsActive = SumOfWindowsActive;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2020,
        "wires": [
            [
                "3136d9675cee3488"
            ]
        ]
    },
    {
        "id": "3136d9675cee3488",
        "type": "switch",
        "z": "0661e4588e011b72",
        "name": "if SumOfWindowsActive > 0",
        "property": "SumOfWindowsActive",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "gte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 740,
        "y": 2020,
        "wires": [
            [
                "d9675f3673d9fc3e"
            ],
            [
                "1910aa9db215bd80"
            ]
        ]
    },
    {
        "id": "d9675f3673d9fc3e",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "0 Windows Active  - Set Numhits =0",
        "func": "var matchnum = global.get(\"matchnum\");\nvar o = msg.payload;\nvar building_name = msg.BUILDING_NAME;\n\nlet sqlnumhitsupdate = \"UPDATE BuildingWindowStatus SET NUM_HITS = 0 WHERE BUILDING_NAME = \\\"\" + building_name + \"\\\" AND BUILDING_SIDE = 1 AND  MATCH_NUM=\" + matchnum;\nmsg.topic = sqlnumhitsupdate;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1960,
        "wires": [
            [
                "6e9d47557350e0fc",
                "072ee9243b49f717"
            ]
        ]
    },
    {
        "id": "6e9d47557350e0fc",
        "type": "sqlite",
        "z": "0661e4588e011b72",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 1210,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "1910aa9db215bd80",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": " Windows Active  >= 1",
        "func": "var matchnum = global.get(\"matchnum\");\nvar o = msg.payload;\nvar building_name = msg.BUILDING_NAME;\n\nlet sqlnumhits = \"SELECT Sum(BuildingWindowStatus.NUM_HITS) AS SumOfNUM_HITS FROM BuildingWindowStatus GROUP BY BuildingWindowStatus.BUILDING_NAME HAVING(((BuildingWindowStatus.BUILDING_NAME) = \\\"\" + building_name + \"\\\")) AND  MATCH_NUM=\" + matchnum;\n\nmsg.topic = sqlnumhits;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 2080,
        "wires": [
            [
                "54dea4faa1a16ec6"
            ]
        ]
    },
    {
        "id": "54dea4faa1a16ec6",
        "type": "sqlite",
        "z": "0661e4588e011b72",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 1110,
        "y": 2080,
        "wires": [
            [
                "3c3945db08bf0daf",
                "9526f2bbc15c0586"
            ]
        ]
    },
    {
        "id": "6632c8bca51718e3",
        "type": "switch",
        "z": "0661e4588e011b72",
        "name": "If Hits Div 4",
        "property": "hitsdiv4",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 2320,
        "wires": [
            [
                "b229b0ef8d890dbc"
            ],
            [
                "6b1dc76758e0fe17"
            ]
        ]
    },
    {
        "id": "3c3945db08bf0daf",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "Retrieve SumOfNUM_HITS and mod 4",
        "func": "var o = msg.payload\nvar matchnum = global.get(\"matchnum\");\n\n\n//shows how you can iterate and access the data that is sent in\nvar debug1 = \"\";\nvar SumOfNUM_HITS = 0;\no.forEach((element, index, array) => {\n    SumOfNUM_HITS = element.row.SumOfNUM_HITS;\n});\n\nmsg.SumOfNUM_HITS = SumOfNUM_HITS;\nif (SumOfNUM_HITS % 4 == 0) {\n    msg.hitsdiv4 = 1;\n} else\n    msg.hitsdiv4 = 0;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2320,
        "wires": [
            [
                "6632c8bca51718e3"
            ]
        ]
    },
    {
        "id": "b229b0ef8d890dbc",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "On Mod 4 Num Hits - sql MaxOfSideSequence",
        "func": "var matchnum = global.get(\"matchnum\");\nvar o = msg.payload;\nvar building_name = msg.BUILDING_NAME;\nlet sqlmaxofsideseq = \"SELECT Max(BuildingWindowStatus.WINDOW_SEQUENCE) AS MaxOfSideSequence FROM BuildingWindowStatus WHERE(((BuildingWindowStatus.BUILDING_NAME) = \\\"\" + building_name + \"\\\") AND((BuildingWindowStatus.WINDOWS_ACTIVE) > 0)) AND MATCH_NUM=\" + matchnum ;\nmsg.topic = sqlmaxofsideseq;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 2280,
        "wires": [
            [
                "e878374a4de9bc51"
            ]
        ]
    },
    {
        "id": "e878374a4de9bc51",
        "type": "sqlite",
        "z": "0661e4588e011b72",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 1170,
        "y": 2320,
        "wires": [
            [
                "ea0e0c8b5ecfba73"
            ]
        ]
    },
    {
        "id": "6b1dc76758e0fe17",
        "type": "debug",
        "z": "0661e4588e011b72",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 2340,
        "wires": []
    },
    {
        "id": "ea0e0c8b5ecfba73",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "Get MaxOfSideSequence - SQL Building Side and Name",
        "func": "var o = msg.payload\nvar matchnum = global.get(\"matchnum\");\nvar building_name = msg.BUILDING_NAME;\n\n\n\n//shows how you can iterate and access the data that is sent in\nvar debug1 = \"\";\nvar MaxOfSideSequence = 0;\no.forEach((element, index, array) => {\n    MaxOfSideSequence = element.row.MaxOfSideSequence;\n});\n\nmsg.MaxOfSideSequence = MaxOfSideSequence;\n\nvar sqlNameAndSide = \"SELECT BuildingWindowStatus.BUILDING_NAME, BuildingWindowStatus.BUILDING_SIDE FROM BuildingWindowStatus WHERE(((BuildingWindowStatus.BUILDING_NAME) = \\\"\"  +building_name + \"\\\") AND((BuildingWindowStatus.WINDOW_SEQUENCE) = \" + MaxOfSideSequence + \"))\";\nmsg.topic = sqlNameAndSide;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2420,
        "wires": [
            [
                "69f5981daf5427f6"
            ]
        ]
    },
    {
        "id": "69f5981daf5427f6",
        "type": "sqlite",
        "z": "0661e4588e011b72",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 1010,
        "y": 2420,
        "wires": [
            [
                "e95b9ac0106a15af"
            ]
        ]
    },
    {
        "id": "e95b9ac0106a15af",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "Reduce Windows Active",
        "func": "var o = msg.payload\nvar matchnum = global.get(\"matchnum\");\n\n\n//shows how you can iterate and access the data that is sent in\nvar debug1 = \"\";\nvar building_name = \"\";\nvar building_side = 0;\no.forEach((element, index, array) => {\n    building_name = element.row.BuildingWindowStatus.BUILDING_NAME;\n    building_side = element.row.BuildingWindowStatus.BUILDING_SIDE;\n});\n\nvar sqludateactive = \"UPDATE BuildingWindowStatus SET BuildingWindowStatus.WINDOWS_ACTIVE = 1 WHERE(((BuildingWindowStatus.BUILDING_NAME) = \\\"\" + building_name + \"\\\") AND((BuildingWindowStatus.BUILDING_SIDE) = \" + building_side + \")) AND MATCH_NUM=\" + matchnum;\n\nmsg.topic = sqludateactive;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2500,
        "wires": [
            [
                "d140de1bce07b674"
            ]
        ]
    },
    {
        "id": "d140de1bce07b674",
        "type": "sqlite",
        "z": "0661e4588e011b72",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 870,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "80c91c52e1b02553",
        "type": "debug",
        "z": "0661e4588e011b72",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 1560,
        "wires": []
    },
    {
        "id": "072ee9243b49f717",
        "type": "debug",
        "z": "0661e4588e011b72",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 2020,
        "wires": []
    },
    {
        "id": "9526f2bbc15c0586",
        "type": "debug",
        "z": "0661e4588e011b72",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 2060,
        "wires": []
    },
    {
        "id": "457aa09d3654575d",
        "type": "comment",
        "z": "0661e4588e011b72",
        "name": "Get SumOfWindowsActive",
        "info": "",
        "x": 430,
        "y": 1980,
        "wires": []
    },
    {
        "id": "f444b4901d9df4f4",
        "type": "comment",
        "z": "0661e4588e011b72",
        "name": "SumOfNumHits Logic",
        "info": "",
        "x": 420,
        "y": 2260,
        "wires": []
    },
    {
        "id": "846972f25d2812f0",
        "type": "comment",
        "z": "0661e4588e011b72",
        "name": "Ball Sensor Logic",
        "info": "",
        "x": 300,
        "y": 1920,
        "wires": []
    },
    {
        "id": "7767c67d6fb6833f",
        "type": "comment",
        "z": "0661e4588e011b72",
        "name": "Laser Sensor Logic",
        "info": "",
        "x": 290,
        "y": 2620,
        "wires": []
    },
    {
        "id": "3933515f9be6b47a",
        "type": "comment",
        "z": "0661e4588e011b72",
        "name": "Example Below of Accessing Data, making decisions,  switching flows, and writing data",
        "info": "",
        "x": 300,
        "y": 1200,
        "wires": []
    },
    {
        "id": "3a4b12e5b9609b0d",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "link out 5",
        "links": [
            "43ddc5a441c4fd3f"
        ],
        "x": 915,
        "y": 160,
        "wires": []
    },
    {
        "id": "07b0e9426f57711a",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Increment/Set Fire Score for latest match",
        "info": "",
        "x": 200,
        "y": 120,
        "wires": []
    },
    {
        "id": "a4fbec13a30337cd",
        "type": "json",
        "z": "f74b301e4f22310f",
        "name": "Parse Incoming",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 420,
        "y": 160,
        "wires": [
            [
                "d88db86de710b8e9"
            ]
        ]
    },
    {
        "id": "b49a77ff09745d6d",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Increment Firescore",
        "links": [
            "5eca71e17e525b35",
            "6c398839cd14285d",
            "37c9658f21fde304"
        ],
        "x": 205,
        "y": 160,
        "wires": [
            [
                "a4fbec13a30337cd"
            ]
        ]
    },
    {
        "id": "be446f7474a7a970",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - New Match",
        "func": "\nvar timestamp = msg.payload;\n//Choose a random side to start match -\n\nvar matchnum = global.get(\"matchnum\");\n\n\n//Choose a random side\nvar active = \"LEFT\";\n;\nif (Math.floor(Math.random() * 2)==0) {\n    active = \"RIGHT\"\n}\nglobal.set(\"startside\", active);\n\nvar newMsg = {\n    \"topic\": \"INSERT INTO MATCH_STATE (TIMEOFMATCH, ACTIVE_COMMUNITY) VALUES (  \"+ timestamp + \", '\" + active + \"');\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 900,
        "wires": [
            [
                "54b2cad8c9c66ea5",
                "2df386bd76ec52e3"
            ]
        ]
    },
    {
        "id": "54b2cad8c9c66ea5",
        "type": "debug",
        "z": "f74b301e4f22310f",
        "name": "Game Storage Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 360,
        "wires": []
    },
    {
        "id": "a5a1bd31c468f86b",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "New Match Creation",
        "links": [
            "4eb277af36ef1fe2",
            "6243bfa8703f32ca"
        ],
        "x": 185,
        "y": 900,
        "wires": [
            [
                "72bcba239803d115"
            ]
        ]
    },
    {
        "id": "2a673ebfd70ddc64",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Create a new empty match (set global.matchnum to new matchnum)",
        "info": "",
        "x": 280,
        "y": 840,
        "wires": []
    },
    {
        "id": "540954cda7540f43",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "Select All Game Table",
        "func": "var newMsg = {\n    \"topic\": \"select * from MATCH_STATE ORDER BY TIMEOFMATCH DESC;\"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1060,
        "wires": [
            [
                "27094e97daa3234a"
            ]
        ]
    },
    {
        "id": "27094e97daa3234a",
        "type": "sqlite",
        "z": "f74b301e4f22310f",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 530,
        "y": 1060,
        "wires": [
            [
                "786da311f9d1e2af"
            ]
        ]
    },
    {
        "id": "786da311f9d1e2af",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "Result match_num",
        "func": "var matchid = msg.payload[0].MATCH_NUM;\nmsg.payload = matchid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1060,
        "wires": [
            [
                "a4cca78582b0aa97"
            ]
        ]
    },
    {
        "id": "a4cca78582b0aa97",
        "type": "change",
        "z": "f74b301e4f22310f",
        "name": "set global",
        "rules": [
            {
                "t": "set",
                "p": "matchnum",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 1060,
        "wires": [
            [
                "50a7d4620d30956a"
            ]
        ]
    },
    {
        "id": "48af91ab4809047a",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Set Latest Matchnum to Global",
        "links": [
            "e68d02821b10c9fd",
            "165f13f0f929f16e"
        ],
        "x": 105,
        "y": 1060,
        "wires": [
            [
                "540954cda7540f43"
            ]
        ]
    },
    {
        "id": "553a13c0223b7873",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Sets Global.matchnum to latest match in DB",
        "info": "",
        "x": 210,
        "y": 1000,
        "wires": []
    },
    {
        "id": "4bfad19cc46d0966",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "Latest Match Table Dump",
        "func": "\n\nvar matchid = global.get(\"matchnum\");\nvar newMsg = {\n    \"topic\": \"SELECT * FROM Buildings B INNER JOIN BuildingWindowStatus BWS \" \n        + \"on B.MATCH_NUM = BWS.MATCH_NUM AND B.BUILDING_NAME=BWS.BUILDING_NAME \"\n         +  \"WHERE B.MATCH_NUM = \" + matchid + \";\" \n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1740,
        "wires": [
            [
                "397f10dd3ab3a997",
                "18fb71a97e22a4a8"
            ]
        ]
    },
    {
        "id": "5954b430a79f7b3e",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "Result Dump",
        "func": "//CREATE TABLE GAMETEST(MATCH_NUM INTEGER PRIMARY KEY AUTOINCREMENT, BUILDING_ID VARCHAR(32), FIRE_SCORE INT NOT NULL, NUM_TREES INT NOT NULL, TIMEOFMATCH INT NOT NULL);  \n\n\n//var str = \"match: \" + msg.payload[0].MATCH_NUM + \" trees:\" + msg.payload[0].NUM_TREES + \" FIRE:\" + msg.payload[0].FIRE_SCORE + \" LASER HITS:\" + msg.payload[0].NUM_HITS;\n//msg.payload = str;\nlet newrow = []\nlet title = [\"MATCH_NUM\",\"NODE_ID\",\t\"SIDE_ID\",\"FIRE_SCORE\",\"NUM_TREES\",\"NUM_HITS\",\"NUM_DROPS\",\"NUM_BAGS\",\"TIMEOFMATCH\"]\ntitle.push()\nfor (var i=0;i<msg.payload.length;i++) {\n    var row = msg.payload[i];\n    if ( \n        row.NUM_HITS != 0 ||\n        row.NUM_DROPS != 0 || \n        row.NUM_BAGS != 0) {\n        newrow.push(row);\n        } \n}\nmsg.payload = newrow;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1740,
        "wires": [
            [
                "fa60c2b1c4bd6432",
                "18fb71a97e22a4a8"
            ]
        ]
    },
    {
        "id": "397f10dd3ab3a997",
        "type": "sqlite",
        "z": "f74b301e4f22310f",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 550,
        "y": 1740,
        "wires": [
            [
                "5954b430a79f7b3e",
                "18fb71a97e22a4a8"
            ]
        ]
    },
    {
        "id": "953a1664303952cf",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Data Access Flows for the Game Storage",
        "info": "Flows that access the DB and upddate and or read various game states\nThese can be accessed via Manual Game Flows and/or nodered flows which are triggered via mqtt",
        "x": 200,
        "y": 40,
        "wires": []
    },
    {
        "id": "18a554bcaa2360e7",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Dump to Debug Latest Match",
        "links": [
            "c30231dee65db09d",
            "d9bb129180d8b9cf",
            "277d12403d6f9f63",
            "8f1d410dda1e4f81"
        ],
        "x": 85,
        "y": 1740,
        "wires": [
            [
                "4bfad19cc46d0966"
            ]
        ]
    },
    {
        "id": "761720674f178020",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Dump to Debug the latest match data",
        "info": "",
        "x": 170,
        "y": 1680,
        "wires": []
    },
    {
        "id": "ee723854cfa1c6f1",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Update Laser Hit (ADD)",
        "func": "var matchid = global.get(\"matchnum\");\nvar o = msg.payload;\nvar hits = o.num_hits;\nvar nodeid = o.BUILDING_NAME;\nvar sideid = o.side_id;\n\nvar newMsg = {\n    \"topic\": \"UPDATE BuildingWindowStatus SET NUM_HITS = NUM_HITS + \" \n    + hits + \" WHERE MATCH_NUM = \" \n    + matchid + \" AND BUILDING_NAME='\" + nodeid \n        + \"' AND BUILDING_SIDE=\" + sideid \n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 300,
        "wires": [
            [
                "d527904ed8723b40",
                "54b2cad8c9c66ea5"
            ]
        ]
    },
    {
        "id": "ad8d8a3973c7761a",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Increment/Set Laser Hit for latest match",
        "info": "",
        "x": 270,
        "y": 240,
        "wires": []
    },
    {
        "id": "473384a40d04fd99",
        "type": "json",
        "z": "f74b301e4f22310f",
        "name": "Parse Incoming",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 420,
        "y": 300,
        "wires": [
            [
                "ee723854cfa1c6f1"
            ]
        ]
    },
    {
        "id": "af55cd6eb001ec61",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Increment Laser Hit",
        "links": [
            "515a805e2750f3bd",
            "5eca71e17e525b35",
            "64800c16d9ae1ca4",
            "dd142b5915f31846",
            "a9c50f46b67e9896",
            "02b8a461b8de262a",
            "7684f0009e5ef352",
            "1030fd2ad1224f40",
            "a3d3789242cf5cfe"
        ],
        "x": 205,
        "y": 300,
        "wires": [
            [
                "473384a40d04fd99"
            ]
        ]
    },
    {
        "id": "d527904ed8723b40",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "link out 10",
        "links": [
            "f6566f17a1e9b78e"
        ],
        "x": 915,
        "y": 300,
        "wires": []
    },
    {
        "id": "7d1c946cf1d71468",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "New Match DB Entry Complete",
        "links": [
            "1d8b42fd0952e51b",
            "dd55547c4747b6b1"
        ],
        "x": 945,
        "y": 900,
        "wires": []
    },
    {
        "id": "50a7d4620d30956a",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "New Match DB Entry Complete",
        "links": [
            "a67d3036cd8b2a23"
        ],
        "x": 1025,
        "y": 1060,
        "wires": []
    },
    {
        "id": "594538fb122fa8a1",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Update Laser Hit (SET)",
        "func": "var matchid = global.get(\"matchnum\");\nvar o = msg.payload;\nvar hits = o.num_hits;\nvar nodeid = o.BUILDING_NAME;\nvar sideid = o.side_id;\n\nvar newMsg = {\n    \"topic\": \"UPDATE BuildingWindowStatus SET NUM_HITS = \" + hits \n    + \" WHERE MATCH_NUM = \" + matchid \n    + \" AND BUILDING_NAME='\" + nodeid \n    + \"' AND BUILDING_SIDE=\" + sideid + \";\"\n}\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 340,
        "wires": [
            [
                "d527904ed8723b40",
                "54b2cad8c9c66ea5"
            ]
        ]
    },
    {
        "id": "2e8cd63f45daf40d",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Set Laser Hit",
        "links": [],
        "x": 205,
        "y": 340,
        "wires": [
            [
                "221e289248744137"
            ]
        ]
    },
    {
        "id": "221e289248744137",
        "type": "json",
        "z": "f74b301e4f22310f",
        "name": "Parse Incoming",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 420,
        "y": 340,
        "wires": [
            [
                "594538fb122fa8a1"
            ]
        ]
    },
    {
        "id": "9a98401250929d20",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Update Fire Score (SET)",
        "func": "var matchid = global.get(\"matchnum\");\nvar o = msg.payload;\nvar fs = o['FCS'];\nvar nodeid = o['BUILDING_NAME'];\nvar newMsg = {\n    \"topic\": \"UPDATE Buildings SET FCS = \" + fs + \" WHERE MATCH_NUM = \" + matchid + \" AND BUILDING_NAME='\" + nodeid + \"';\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 200,
        "wires": [
            [
                "3a4b12e5b9609b0d",
                "54b2cad8c9c66ea5"
            ]
        ]
    },
    {
        "id": "7046ccf0cab73df5",
        "type": "json",
        "z": "f74b301e4f22310f",
        "name": "Parse Incoming",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 420,
        "y": 200,
        "wires": [
            [
                "9a98401250929d20"
            ]
        ]
    },
    {
        "id": "c5098de218c47d8f",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Set Firescore",
        "links": [
            "a2bcb79fedaca272",
            "a29505e70d7b9ece",
            "711e25dc20dbd9af"
        ],
        "x": 205,
        "y": 200,
        "wires": [
            [
                "7046ccf0cab73df5"
            ]
        ]
    },
    {
        "id": "fa60c2b1c4bd6432",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "link out 15",
        "links": [
            "c5b51aa2f4863b48",
            "28eb2bc55dcddb70"
        ],
        "x": 925,
        "y": 1740,
        "wires": []
    },
    {
        "id": "2df386bd76ec52e3",
        "type": "sqlite",
        "z": "f74b301e4f22310f",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Match Create",
        "x": 740,
        "y": 900,
        "wires": [
            [
                "7d1c946cf1d71468"
            ]
        ]
    },
    {
        "id": "4c16c39c21c351b0",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Create Empty Game Records",
        "links": [
            "3719854fdfed232d"
        ],
        "x": 105,
        "y": 1200,
        "wires": [
            [
                "fc55610d6c9105b3"
            ]
        ]
    },
    {
        "id": "fc55610d6c9105b3",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Initialize Match - TABLE Buildings ",
        "func": "var d = new Date();\nvar timestamp = d.getTime();\nvar matchnum = global.get(\"matchnum\");\nvar startside = global.get(\"startside\");\n\n\n//Declare all of the constants \n\n//Node Names\n\n\n//Declare all of the building sizes\nconst TallBuildingsLeft = ['LTO', 'LBO'];\nconst ShortBuildingsLeft = ['LTM', 'LTI', 'LBM', 'LBI'];\n\nconst TallBuildingsRight = ['RTO', 'RBO'];\nconst ShortBuildingsRight = ['RTM', 'RTI', 'RBM', 'RBI'];\n\nconst NodesForLeft = TallBuildingsLeft.concat(ShortBuildingsLeft);\nconst NodesForRight = TallBuildingsRight.concat(ShortBuildingsRight);\nconst AllNodes = NodesForLeft.concat(NodesForRight);\nconst NonBurningNodes = new Set(AllNodes);\nconst BurningNodes = new Set();\n\n\n// Adding to a map to make it easier to lookup when gen sql\nvar BuildingSizeForLeftMap =  new Map();\nfor (const tall of TallBuildingsLeft) {\n  BuildingSizeForLeftMap[tall] = 'Tall';\n}\nfor (const short of ShortBuildingsLeft) {\n  BuildingSizeForLeftMap[short] = 'Short';\n}\n\nvar BuildingSizeForRightMap = new Map();\nfor (const tall of TallBuildingsRight) {\n  BuildingSizeForRightMap[tall] = 'Tall';\n}\nfor (const short of ShortBuildingsRight) {\n  BuildingSizeForRightMap[short] = 'Short';\n}\n\n\n//Constants - building sensors\n\nvar BuildingSensorsForLeftMap = {\n  'LTO': 'Ball',\n  'LTM': 'Laser',\n  'LTI': 'Ball',\n  'LBO': 'Laser',\n  'LBM': 'Laser',\n  'LBI': 'Ball',\n};\n\nconst BuildingSensorsForRightMap = {\n  'RTO': 'Laser',\n  'RTM': 'Laser',\n  'RTI': 'Ball',\n  'RBO': 'Ball',\n  'RBM': 'Laser',\n  'RBI': 'Ball',\n};\n\n\n\n\n/*\nCREATE TABLE Buildings (\nMATCH_NUM INT NOT NULL,\nBUILDING_NAME VARCHAR[32],\nBUILDING_SIZE VARCHAR[12],\nSENSOR_TYPE VARCHAR[12],\nCOMMUNITY INT NOT NULL,\nFIRE_ELIGIBLE INT NOT NULL,\nHOTSPOT INT NOT NULL, \nBURNING_STATUS INT NOT NULL,\nBLOCKED INT NOT NULL, \nFCS INT NOT NULL, \nDPS INT NOT NULL, \nNUM_BAGS INT NOT NULL,\nNUM_DROPS INT NOT NULL, \nTIMEOFMATCH INT NOT NULL,\nPRIMARY KEY (MATCH_NUM, BUILDING_NAME));\n  */\n\nvar sql = \"\";\n\n//initialize left\nconst COMMUNITYLEFT = \"LEFT\";\nfor (const leftNodeName of NodesForLeft) {\n    var line = \"INSERT INTO Buildings(MATCH_NUM, BUILDING_NAME, COMMUNITY,BUILDING_SIZE,SENSOR_TYPE, FIRE_ELIGIBLE, HOTSPOT, BURNING_STATUS, BLOCKED, FCS, DPS, NUM_BAGS, NUM_DROPS, TIMEOFMATCH) \" +\n      \"VALUES(\" + matchnum + \", '\" \n      + leftNodeName + \"','\" \n      + COMMUNITYLEFT + \"','\" \n      + BuildingSizeForLeftMap[leftNodeName] \n      + \"','\" + BuildingSensorsForLeftMap[leftNodeName] \n      + \"',1,0, 0,0, 0, 0, 0, 0,\" \n      + timestamp + \");\\n \";\n  sql = sql + line;\n  \n}\n\n//initialize left\nconst COMMUNITYRIGHT = \"RIGHT\";\nfor (const rightNodeName of NodesForRight) {\n\n    var line = \"INSERT INTO Buildings(MATCH_NUM, BUILDING_NAME, COMMUNITY,BUILDING_SIZE,SENSOR_TYPE, FIRE_ELIGIBLE, HOTSPOT, BURNING_STATUS, BLOCKED, FCS, DPS, NUM_BAGS, NUM_DROPS, TIMEOFMATCH) \" +\n      \"VALUES(\" + matchnum + \", '\"\n      + rightNodeName + \"','\"\n      + COMMUNITYRIGHT + \"','\"\n      + BuildingSizeForRightMap[rightNodeName]\n      + \"','\" + BuildingSensorsForRightMap[rightNodeName]\n      + \"',1,0, 0,0,0, 0,0,0,\"\n      + timestamp + \"); \\n\";\n    sql = sql + line;\n\n}\n\nmsg.topic = sql;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1200,
        "wires": [
            [
                "12b7849527a8f3d3",
                "cd1bf88c1e97229e"
            ]
        ]
    },
    {
        "id": "12b7849527a8f3d3",
        "type": "sqlite",
        "z": "f74b301e4f22310f",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "batch",
        "sql": "",
        "name": "InitializeBuildings For Match",
        "x": 680,
        "y": 1200,
        "wires": [
            [
                "5aaea6a334032def"
            ]
        ]
    },
    {
        "id": "2ce44170d41d852c",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Update Ball Drop (ADD)",
        "func": "var matchid = global.get(\"matchnum\");\nvar o = msg.payload;\nvar num_drops = o.num_drops;\nvar nodeid = o.BUILDING_NAME;\n\nvar newMsg = {\n    \"topic\": \"UPDATE Buildings SET NUM_DROPS = NUM_DROPS + \"\n        + num_drops + \" WHERE MATCH_NUM = \"\n        + matchid + \" AND BUILDING_NAME='\" + nodeid + \"'\" \n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 420,
        "wires": [
            [
                "91eeec4cfa6d85ca"
            ]
        ]
    },
    {
        "id": "9e904570325a5f04",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Increment/Set Ball Drop for latest match",
        "info": "",
        "x": 200,
        "y": 380,
        "wires": []
    },
    {
        "id": "0cb41cd8c25bd380",
        "type": "json",
        "z": "f74b301e4f22310f",
        "name": "Parse Incoming",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 420,
        "y": 420,
        "wires": [
            [
                "2ce44170d41d852c"
            ]
        ]
    },
    {
        "id": "63f807f3f36abd11",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Increment Ball Drop",
        "links": [
            "75c5f224f591b111",
            "f1340eb46d54b7e1",
            "c854b1ceacdd7cbd",
            "502f096a67482bb5",
            "38e34dadb04371c8"
        ],
        "x": 205,
        "y": 420,
        "wires": [
            [
                "0cb41cd8c25bd380"
            ]
        ]
    },
    {
        "id": "91eeec4cfa6d85ca",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "link out 20",
        "links": [
            "43ddc5a441c4fd3f"
        ],
        "x": 915,
        "y": 420,
        "wires": []
    },
    {
        "id": "4d52cd46f08add7f",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Update Ball Drop (SET)",
        "func": "var matchid = global.get(\"matchnum\");\nvar o = msg.payload;\nvar num_drops = o.num_drops;\nvar nodeid = o.BUILDING_NAME;\nvar sideid = 0;\nvar newMsg = {\n    \"topic\": \"UPDATE Building SET NUM_DROPS = \" + num_drops + \" WHERE MATCH_NUM = \" + matchid + \" AND BUILDING_NAME='\" + nodeid + \"' ;\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 460,
        "wires": [
            [
                "91eeec4cfa6d85ca"
            ]
        ]
    },
    {
        "id": "1fe8b5ccb6bce22f",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Set Ball Drop Count",
        "links": [],
        "x": 205,
        "y": 460,
        "wires": [
            [
                "2f1658364fc5719b"
            ]
        ]
    },
    {
        "id": "2f1658364fc5719b",
        "type": "json",
        "z": "f74b301e4f22310f",
        "name": "Parse Incoming",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 420,
        "y": 460,
        "wires": [
            [
                "4d52cd46f08add7f"
            ]
        ]
    },
    {
        "id": "72bcba239803d115",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "Add Match Start",
        "func": "var d = new Date();\nvar time1 = d.getTime();\nmsg.payload = time1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 900,
        "wires": [
            [
                "be446f7474a7a970"
            ]
        ]
    },
    {
        "id": "b91304bb2e2395c8",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Set Num Bags in trough for latest match",
        "info": "",
        "x": 200,
        "y": 540,
        "wires": []
    },
    {
        "id": "a37728c272928fcb",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "link out 41",
        "links": [
            "43ddc5a441c4fd3f"
        ],
        "x": 915,
        "y": 580,
        "wires": []
    },
    {
        "id": "23c2335c118ef4be",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Update Trough Bags (SET)",
        "func": "var matchid = global.get(\"matchnum\");\nvar o = msg.payload;\nvar num_bags = o.num_bags;\nvar nodeid = o.BUILDING_NAME;\nvar sideid = 0;\nvar newMsg = {\n    \"topic\": \"UPDATE Buildings SET NUM_BAGS = \" + num_bags + \" WHERE MATCH_NUM = \" + matchid + \" AND BUILDING_NAME='\" + nodeid + \"' ;\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 600,
        "wires": [
            [
                "a37728c272928fcb"
            ]
        ]
    },
    {
        "id": "0d084e688f622348",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Set Bag Count",
        "links": [
            "87e764dac83fb351",
            "a0893a9b1c6e7557",
            "a2c40ebd42a054a9"
        ],
        "x": 205,
        "y": 600,
        "wires": [
            [
                "4244695d7f15d3fd"
            ]
        ]
    },
    {
        "id": "4244695d7f15d3fd",
        "type": "json",
        "z": "f74b301e4f22310f",
        "name": "Parse Incoming",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 420,
        "y": 600,
        "wires": [
            [
                "23c2335c118ef4be"
            ]
        ]
    },
    {
        "id": "cd1bf88c1e97229e",
        "type": "debug",
        "z": "f74b301e4f22310f",
        "name": "Current Game Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 1180,
        "wires": []
    },
    {
        "id": "e1a5ecaa10ad1d0c",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Initialize to Game State",
        "info": "",
        "x": 140,
        "y": 1140,
        "wires": []
    },
    {
        "id": "e354ec1a31284c79",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL -  - Initialize Match - TABLE BuildingWindowStatus",
        "func": "  \nvar d = new Date();\nvar timestamp = d.getTime();\nvar matchnum = global.get(\"matchnum\");\nconst NodesForLeft = ['LTO', 'LTM', 'LTI', 'LBO', 'LBM', 'LBI'];\nconst NodesForRight = ['RTO', 'RTM', 'RTI', 'RBO', 'RBM', 'RBI'];\nconst AllNodes = NodesForLeft.concat(NodesForRight);\nconst numSides = 4;\n\nvar burningNode1 = global.get(\"burning1\");\nvar burningNode2 = global.get(\"burning2\");\n\n\n\n/*\nCREATE TABLE BuildingWindowStatus(\n  MATCH_NUM INT NOT NULL,\n  BUILDING_NAME VARCHAR[32],\n  COMMUNITY INT NOT NULL,\n  BUILDING_SIDE INT NOT NULL,\n  WINDOWS_ACTIVE INT,\n  NUM_HITS INT NOT NULL,\n  TIMEOFMATCH INT NOT NULL,\n  PRIMARY KEY(MATCH_NUM, BUILDING_NAME, BUILDING_SIDE));\n  */\n\nvar sql = \"\";\n\n//initialize left\nconst COMMUNITYLEFT = \"LEFT\";\nfor (const leftNodeName of NodesForLeft) {\n  for (var i = 1; i <= 4; i++) {\n    var line = \"INSERT INTO BuildingWindowStatus(MATCH_NUM, BUILDING_NAME, COMMUNITY, BUILDING_SIDE, WINDOWS_ACTIVE, DAMAGE_PREVENTION_SCORE, NUM_HITS, TIMEOFMATCH) \" + \n      \"VALUES(\" + matchnum + \", '\" + leftNodeName + \"','\" + COMMUNITYLEFT +\"', \"+i+\", 0, 2, 0, \" + timestamp + \"); \";\n    sql = sql + line;\n  }\n}\n\n//initialize left\nconst COMMUNITYRIGHT = \"RIGHT\";\nfor (const rightNodeName of NodesForRight) {\n  for (var i = 1; i <= 4; i++) {\n    var line = \"INSERT INTO BuildingWindowStatus(MATCH_NUM, BUILDING_NAME, COMMUNITY, BUILDING_SIDE, WINDOWS_ACTIVE, DAMAGE_PREVENTION_SCORE, NUM_HITS, TIMEOFMATCH) \" +\n      \"VALUES(\" + matchnum + \", '\" + rightNodeName + \"','\" + COMMUNITYRIGHT + \"', \" + i + \", 0, 2, 0, \" + timestamp + \"); \";\n    sql = sql + line;\n  }\n}\n\n\n\nmsg.topic = sql; \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1400,
        "wires": [
            [
                "c1f1b1372fb990e6",
                "cd1bf88c1e97229e"
            ]
        ]
    },
    {
        "id": "c1f1b1372fb990e6",
        "type": "sqlite",
        "z": "f74b301e4f22310f",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "batch",
        "sql": "",
        "name": "InitializeBuildingsWindows For Match",
        "x": 790,
        "y": 1400,
        "wires": [
            [
                "6b1897b0ddc816e3"
            ]
        ]
    },
    {
        "id": "5aaea6a334032def",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Calculate and UPDATE TABLE Buildings ",
        "func": "var d = new Date();\nvar timestamp = d.getTime();\nvar matchnum = global.get(\"matchnum\");\nvar startside = global.get(\"startside\");\n\n\n//Declare all of the constants \n\n//Node Names\n\n\n//Declare all of the building sizes\nconst TallBuildingsLeft = ['LTO', 'LBO'];\nconst ShortBuildingsLeft = ['LTM', 'LTI', 'LBM', 'LBI'];\n\nconst TallBuildingsRight = ['RTO', 'RBO'];\nconst ShortBuildingsRight = ['RTM', 'RTI', 'RBM', 'RBI'];\n\nconst NodesForLeft = TallBuildingsLeft.concat(ShortBuildingsLeft);\nconst NodesForRight = TallBuildingsRight.concat(ShortBuildingsRight);\nconst AllNodes = NodesForLeft.concat(NodesForRight);\nconst NonBurningNodes = new Set(AllNodes);\nconst BurningNodes = new Set();\n\n\n// Adding to a map to make it easier to lookup when gen sql\nvar BuildingSizeForLeftMap =  new Map();\nfor (const tall of TallBuildingsLeft) {\n  BuildingSizeForLeftMap[tall] = 'Tall';\n}\nfor (const short of ShortBuildingsLeft) {\n  BuildingSizeForLeftMap[short] = 'Short';\n}\n\nvar BuildingSizeForRightMap = new Map();\nfor (const tall of TallBuildingsRight) {\n  BuildingSizeForRightMap[tall] = 'Tall';\n}\nfor (const short of ShortBuildingsRight) {\n  BuildingSizeForRightMap[short] = 'Short';\n}\n\n\n//Constants - building sensors\n\nvar BuildingSensorsForLeftMap = {\n  'LTO': 'Ball',\n  'LTM': 'Laser',\n  'LTI': 'Ball',\n  'LBO': 'Laser',\n  'LBM': 'Laser',\n  'LBI': 'Ball',\n};\n\nvar BuildingSensorsForRightMap = {\n  'RTO': 'Laser',\n  'RTM': 'Laser',\n  'RTI': 'Ball',\n  'RBO': 'Ball',\n  'RBM': 'Laser',\n  'RBI': 'Ball',\n};\n\nconst BuildingBlockedForLeftMap = {\n  'LTO': 0,\n  'LTM': 0,\n  'LTI': 0,\n  'LBO': 0,\n  'LBM': 0,\n  'LBI': 0,\n};\n\nconst BuildingBlockedForRightMap = {\n  'RTO': 0,\n  'RTM': 0,\n  'RTI': 0,\n  'RBO': 0,\n  'RBM': 0,\n  'RBI': 0,\n};\n\nvar strdebug = \"\";\n//Start picking random things\n//First set all buildings to not burning\nvar BurningBuildings = {};\nfor (const node of AllNodes) {\n  BurningBuildings[node] = 0;\n}\n\n//set a tall building burning, set sensor type\nvar tallSensor = \"\";\nvar tallBuildingBurning = Math.floor(Math.random() * 2);\nvar shortBuildingBurning = Math.floor(Math.random() * 2);\nif (startside=='LEFT') {\n  BurningBuildings[TallBuildingsLeft[tallBuildingBurning]] = 1;\n  //Remove burning node so we know what is left\n  NonBurningNodes.delete(TallBuildingsLeft[tallBuildingBurning]);\n  BurningNodes.add(TallBuildingsLeft[tallBuildingBurning]);\n  //what sensor is the burning building?\n  tallSensor = BuildingSensorsForLeftMap[TallBuildingsLeft[tallBuildingBurning]];\n  var i = 0;\n  //Find the short building to burn\n  for (const node of ShortBuildingsLeft) {\n    strdebug += i + \":\" + BuildingSensorsForLeftMap[node] + \":\" + tallSensor + \"    | \";\n    if (BuildingSensorsForLeftMap[node] == tallSensor) {\n      continue;\n    } else {\n      i++;\n    }\n    if (i == shortBuildingBurning + 1) {\n      strdebug += \" -- \" + i;\n\n      BurningBuildings[ShortBuildingsLeft[node]] = 1;\n      NonBurningNodes.delete(ShortBuildingsLeft[node]);\n      BurningNodes.add(node);\n      break;\n    }\n  }\n} else {\n  BurningBuildings[TallBuildingsRight[tallBuildingBurning]] = 1;\n  //Remove burning node so we know what is left\n  NonBurningNodes.delete(TallBuildingsRight[tallBuildingBurning]);\n  BurningNodes.add(TallBuildingsRight[tallBuildingBurning]);\n\n  //what sensor is the burning building?\n  tallSensor = BuildingSensorsForRightMap[TallBuildingsRight[tallBuildingBurning]];\n  var i = 0;\n  //Find the short building to burn. -- this takes a scal\n  // shortBuildingBurning is the one out of the right sensored shorts\n  for (const node of ShortBuildingsRight) {\n    strdebug += i + \":\" + BuildingSensorsForRightMap[node] + \":\" + tallSensor + \"    | \";\n    if (BuildingSensorsForRightMap[node] == tallSensor) {\n     continue;\n    } else {\n      i++;\n    }\n    if (i == shortBuildingBurning + 1) {\n      \n      BurningBuildings[ShortBuildingsRight[node]] = 1;\n      NonBurningNodes.delete(ShortBuildingsRight[node]);\n      BurningNodes.add(node);\n      break;\n    }\n  }\n}\n\n//Of the 4 that are left -- choose a random node\nvar lastOneHotspot = Math.floor(Math.random() * 4);\nvar lastOneHospotName = NonBurningNodes[lastOneHotspot];\n//Start picking random things\n//First set all buildings to not burning\nvar Hotspots =  new Map();\nfor (const node of AllNodes) {\n  Hotspots[node] = 0;\n}\nHotspots[lastOneHospotName] = 1;\n\n// Of the 2 that are burning -- \n\n//first setr all to 0\nvar FCS = new Map();\nfor (const node of AllNodes) {\n  FCS[node] = 0;\n}\n\nvar DPS = new Map();\nfor (const node of AllNodes) {\n  DPS[node] = 0;\n}\n\nvar Burn = new Map();\nfor (const node of AllNodes) {\n  Burn[node] = 0;\n}\n\n//Set Burning node values\nfor (const node of BurningNodes) {\n    DPS[node] = 4;\n    FCS[node] = 4;\n    Burn[node] = 1;\n}\n\n//Set these for the Initialize Match - TABLE BuildingWindowStatus to pick the sequence windows\nvar it = BurningNodes.values();\nglobal.set(\"burning1\",it.next().value);\nglobal.set(\"burning2\", it.next().value);\nglobal.set(\"lancedebug\", strdebug);\n\n\n\n/*\nCREATE TABLE Buildings (\nMATCH_NUM INT NOT NULL,\nBUILDING_NAME VARCHAR[32],\nBUILDING_SIZE VARCHAR[12],\nSENSOR_TYPE VARCHAR[12],\nCOMMUNITY INT NOT NULL,\nFIRE_ELIGIBLE INT NOT NULL,\nHOTSPOT INT NOT NULL, \nBURNING_STATUS INT NOT NULL,\nBLOCKED INT NOT NULL, \nFCS INT NOT NULL, \nDPS INT NOT NULL, \nNUM_BAGS INT NOT NULL,\nNUM_DROPS INT NOT NULL, \nTIMEOFMATCH INT NOT NULL,\nPRIMARY KEY (MATCH_NUM, BUILDING_NAME));\n  */\n\nvar sql = \"\";\n\n//initialize left\nconst COMMUNITYLEFT = \"LEFT\";\n\nfor (const leftNodeName of NodesForLeft) {\n    var line = \"UPDATE Buildings SET\" \n      + \" COMMUNITY = '\" + COMMUNITYLEFT + \"'\"     \n      + \", BUILDING_SIZE = '\" + BuildingSizeForLeftMap[leftNodeName] + \"'\"     \n      + \", SENSOR_TYPE = '\" + BuildingSensorsForLeftMap[leftNodeName] + \"'\"     \n      + \", FIRE_ELIGIBLE = 1\"   \n      + \", HOTSPOT = \" + Hotspots[leftNodeName] \n      + \", BURNING_STATUS = \" + Burn[leftNodeName]  \n      + \", BLOCKED = \" + BuildingBlockedForLeftMap[leftNodeName] \n      + \", FCS = \" + FCS[leftNodeName]\n      + \", DPS = \" + DPS[leftNodeName]\n      + \", NUM_BAGS = 0\"   \n      + \", NUM_DROPS = 0 \"   \n      + \", TIMEOFMATCH = \" + timestamp  \n      +\" WHERE BUILDING_NAME='\"+ leftNodeName +\"' AND MATCH_NUM=\" +matchnum\n      +\";\\n\";\n  sql = sql + line;\n  \n}\n\n//initialize \nconst COMMUNITYRIGHT = \"RIGHT\";\nfor (const rightNodeName of NodesForRight) {\n\n  var line = \"UPDATE Buildings SET\"\n    + \" COMMUNITY = '\" + COMMUNITYRIGHT + \"'\"\n    + \", BUILDING_SIZE = '\" + BuildingSizeForRightMap[rightNodeName] + \"'\"\n    + \", SENSOR_TYPE = '\" + BuildingSensorsForRightMap[rightNodeName] + \"'\"\n    + \", FIRE_ELIGIBLE = 1\" \n    + \", HOTSPOT = \" + Hotspots[rightNodeName]\n    + \", BURNING_STATUS = \" + Burn[rightNodeName]  \n    + \", BLOCKED = \" + BuildingBlockedForRightMap[rightNodeName]\n    + \", FCS = \" + FCS[rightNodeName]\n    + \", DPS = \" + DPS[rightNodeName]\n    + \", NUM_BAGS = 0\"\n    + \", NUM_DROPS = 0 \"\n    + \", TIMEOFMATCH = \" + timestamp\n    + \" WHERE BUILDING_NAME='\" + rightNodeName + \"' AND MATCH_NUM=\" + matchnum\n    + \";\\n\";\n  sql = sql + line;\n\n}\n\nmsg.topic = sql;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1300,
        "wires": [
            [
                "0aa61745968b6ee5",
                "cd1bf88c1e97229e"
            ]
        ]
    },
    {
        "id": "9bd9bd9e2fa74b8a",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "ORIGINAL SQL - Initialize Match - TABLE Buildings ",
        "func": "var d = new Date();\nvar timestamp = d.getTime();\nvar matchnum = global.get(\"matchnum\");\nvar startside = global.get(\"startside\");\n\n\n//Declare all of the constants \n\n//Node Names\n\n\n//Declare all of the building sizes\nconst TallBuildingsLeft = ['LTO', 'LBO'];\nconst ShortBuildingsLeft = ['LTM', 'LTI', 'LBM', 'LBI'];\n\nconst TallBuildingsRight = ['RTO', 'RBO'];\nconst ShortBuildingsRight = ['RTM', 'RTI', 'RBM', 'RBI'];\n\nconst NodesForLeft = TallBuildingsLeft.concat(ShortBuildingsLeft);\nconst NodesForRight = TallBuildingsRight.concat(ShortBuildingsRight);\nconst AllNodes = NodesForLeft.concat(NodesForRight);\nconst NonBurningNodes = new Set(AllNodes);\nconst BurningNodes = new Set();\n\n\n// Adding to a map to make it easier to lookup when gen sql\nvar BuildingSizeForLeftMap =  new Map();\nfor (const tall of TallBuildingsLeft) {\n  BuildingSizeForLeftMap[tall] = 'Tall';\n}\nfor (const short of ShortBuildingsLeft) {\n  BuildingSizeForLeftMap[short] = 'Short';\n}\n\nvar BuildingSizeForRightMap = new Map();\nfor (const tall of TallBuildingsRight) {\n  BuildingSizeForRightMap[tall] = 'Tall';\n}\nfor (const short of ShortBuildingsRight) {\n  BuildingSizeForRightMap[short] = 'Short';\n}\n\n\n//Constants - building sensors\n\nvar BuildingSensorsForLeftMap = {\n  'LTO': 'Ball',\n  'LTM': 'Laser',\n  'LTI': 'Ball',\n  'LBO': 'Laser',\n  'LBM': 'Laser',\n  'LBI': 'Ball',\n};\n\nconst BuildingSensorsForRightMap = {\n  'RTO': 'Laser',\n  'RTM': 'Laser',\n  'RTI': 'Ball',\n  'RBO': 'Ball',\n  'RBM': 'Laser',\n  'RBI': 'Ball',\n};\n\nconst BuildingBlockedForLeftMap = {\n  'LTO': 0,\n  'LTM': 0,\n  'LTI': 0,\n  'LBO': 0,\n  'LBM': 0,\n  'LBI': 0,\n};\n\nconst BuildingBlockedForRightMap = {\n  'RTO': 0,\n  'RTM': 0,\n  'RTI': 0,\n  'RBO': 0,\n  'RBM': 0,\n  'RBI': 0,\n};\n\n\n//Start picking random things\n//First set all buildings to not burning\nvar BurningBuildings = {};\nfor (const node of AllNodes) {\n  BurningBuildings[node] = 0;\n}\n\n//set a tall building burning, set sensor type\nvar tallSensor = \"\";\nvar tallBuildingBurning = Math.floor(Math.random() * 2);\nvar shortBuildingBurning = Math.floor(Math.random() * 2);\nif (startside=='LEFT') {\n  BurningBuildings[TallBuildingsLeft[tallBuildingBurning]] = 1;\n  //Remove burning node so we know what is left\n  NonBurningNodes.delete(TallBuildingsLeft[tallBuildingBurning]);\n  BurningNodes.add(TallBuildingsLeft[tallBuildingBurning]);\n  //what sensor is the burning building?\n  tallSensor = BuildingSensorsForLeftMap[TallBuildingsLeft[tallBuildingBurning]];\n  var i = 0;\n  //Find the short building to burn\n  for (const node of ShortBuildingsLeft) {\n    if (BuildingSensorsForLeftMap[node] != tallSensor) {\n      i++;\n    }\n    if ((i - 1) == shortBuildingBurning) {\n      BurningBuildings[ShortBuildingsLeft[node]] = 1;\n      NonBurningNodes.delete(ShortBuildingsLeft[node]);\n      BurningNodes.add(node);\n\n    }\n  }\n} else {\n  BurningBuildings[TallBuildingsRight[tallBuildingBurning]] = 1;\n  //Remove burning node so we know what is left\n  NonBurningNodes.delete(TallBuildingsRight[tallBuildingBurning]);\n  BurningNodes.add(TallBuildingsRight[tallBuildingBurning]);\n\n  //what sensor is the burning building?\n  tallSensor = BuildingSensorsForRightMap[TallBuildingsRight[tallBuildingBurning]];\n  var i = 0;\n  //Find the short building to burn\n  for (const node of ShortBuildingsRight) {\n    if (BuildingSensorsForRightMap[node] != tallSensor) {\n      i++;\n    }\n    if ((i - 1) == shortBuildingBurning) {\n      BurningBuildings[ShortBuildingsRight[node]] = 1;\n      NonBurningNodes.delete(ShortBuildingsRight[node]);\n      BurningNodes.add(node);\n    }\n  }\n}\n\n//Of the 4 that are left -- choose a random node\nvar lastOneHotspot = Math.floor(Math.random() * 4);\nvar lastOneHospotName = NonBurningNodes[lastOneHotspot];\n//Start picking random things\n//First set all buildings to not burning\nvar Hotspots =  new Map();\nfor (const node of AllNodes) {\n  Hotspots[node] = 0;\n}\nHotspots[lastOneHospotName] = 1;\n\n// Of the 2 that are burning -- \n\nvar FCS = new Map();\nfor (const node of AllNodes) {\n  FCS[node] = 0;\n}\n\nvar DPS = new Map();\nfor (const node of AllNodes) {\n  DPS[node] = 0;\n}\n\nvar i = 0;\nfor (const node of BurningNodes) {\n    DPS[node] = 1;\n    FCS[node] = 1;\n}\n\n//Set these for the Initialize Match - TABLE BuildingWindowStatus to pick the sequence windows\nglobal.set(\"burning1\",BurningNodes[0]);\nglobal.set(\"burning2\", BurningNodes[1]);\n\n\n/*\nCREATE TABLE Buildings (\nMATCH_NUM INT NOT NULL,\nBUILDING_NAME VARCHAR[32],\nBUILDING_SIZE VARCHAR[12],\nSENSOR_TYPE VARCHAR[12],\nCOMMUNITY INT NOT NULL,\nFIRE_ELIGIBLE INT NOT NULL,\nHOTSPOT INT NOT NULL, \nBURNING_STATUS INT NOT NULL,\nBLOCKED INT NOT NULL, \nFCS INT NOT NULL, \nDPS INT NOT NULL, \nNUM_BAGS INT NOT NULL,\nNUM_DROPS INT NOT NULL, \nTIMEOFMATCH INT NOT NULL,\nPRIMARY KEY (MATCH_NUM, BUILDING_NAME));\n  */\n\nvar sql = \"\";\n\n//initialize left\nconst COMMUNITYLEFT = \"LEFT\";\nfor (const leftNodeName of NodesForLeft) {\n    var line = \"INSERT INTO Buildings(MATCH_NUM, BUILDING_NAME, COMMUNITY,BUILDING_SIZE,SENSOR_TYPE, FIRE_ELIGIBLE, HOTSPOT, BURNING_STATUS, BLOCKED, FCS, DPS, NUM_BAGS, NUM_DROPS, TIMEOFMATCH) \" +\n      \"VALUES(\" + matchnum + \", '\" \n      + leftNodeName + \"','\" \n      + COMMUNITYLEFT + \"','\" \n      + BuildingSizeForLeftMap[leftNodeName] \n      + \"','\" + BuildingSensorsForLeftMap[leftNodeName] \n      + \"',1,\" +\n      Hotspots[leftNodeName] +\n      \", 0,\" \n      + BuildingBlockedForLeftMap[leftNodeName]\n      + \", \" + FCS[leftNodeName] \n      + \", \" + DPS[leftNodeName] \n      +\", 0, 0,\" \n      + timestamp + \");\\n \";\n  sql = sql + line;\n  \n}\n\n//initialize left\nconst COMMUNITYRIGHT = \"RIGHT\";\nfor (const rightNodeName of NodesForRight) {\n\n    var line = \"INSERT INTO Buildings(MATCH_NUM, BUILDING_NAME, COMMUNITY,BUILDING_SIZE,SENSOR_TYPE, FIRE_ELIGIBLE, HOTSPOT, BURNING_STATUS, BLOCKED, FCS, DPS, NUM_BAGS, NUM_DROPS, TIMEOFMATCH) \" +\n      \"VALUES(\" + matchnum + \", '\"\n      + rightNodeName + \"','\"\n      + COMMUNITYRIGHT + \"','\"\n      + BuildingSizeForRightMap[rightNodeName]\n      + \"','\" + BuildingSensorsForRightMap[rightNodeName]\n      + \"',1,\" \n      +Hotspots[rightNodeName] \n      +\", 0,\" \n      + BuildingBlockedForRightMap[rightNodeName]\n      + \", \" + FCS[rightNodeName] \n      + \", \" + DPS[rightNodeName] \n      + \",0, 0,\"\n      + timestamp + \"); \\n\";\n    sql = sql + line;\n\n}\n\nmsg.topic = sql;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "0aa61745968b6ee5",
        "type": "sqlite",
        "z": "f74b301e4f22310f",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "batch",
        "sql": "",
        "name": "InitializeBuildings For Match",
        "x": 720,
        "y": 1300,
        "wires": [
            [
                "e354ec1a31284c79"
            ]
        ]
    },
    {
        "id": "18fb71a97e22a4a8",
        "type": "debug",
        "z": "f74b301e4f22310f",
        "name": "Current Game Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 1900,
        "wires": []
    },
    {
        "id": "6b1897b0ddc816e3",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Calculate and Update - Initialize Match - TABLE BuildingWindowStatus",
        "func": "\nvar d = new Date();\nvar timestamp = d.getTime();\nvar matchnum = global.get(\"matchnum\");\nconst NodesForLeft = ['LTO', 'LTM', 'LTI', 'LBO', 'LBM', 'LBI'];\nconst NodesForRight = ['RTO', 'RTM', 'RTI', 'RBO', 'RBM', 'RBI'];\nconst AllNodes = NodesForLeft.concat(NodesForRight);\nconst numSides = 4;\n\n\n//This is how we pass in the burning buildings from the intialation of the building\nvar burningNode1 = global.get(\"burning1\");\nvar burningNode2 = global.get(\"burning2\");\n\n\nvar WindowsActive = new Map();\nvar WindowSequence = new Map();//Dom added\nvar DamagePreventionScore = new Map();//Dom added\n\nfor (const node of AllNodes) {\n  var whichSet = 10;\n  if (node == burningNode1 || node == burningNode2) {\n    whichSet=Math.floor(Math.random() * 2);\n  }\n  if (whichSet ==10) {\n    for (var i = 1; i <= 4; i++) {\n      var nodepluswin = node + i + '';\n      WindowsActive[nodepluswin] = 0;\n      WindowSequence[nodepluswin] = 0;//Dom added\n      DamagePreventionScore[nodepluswin] = 2;\n    }\n  } else if (whichSet == 0) {\n    WindowsActive[node + \"1\"] = 2;\n    WindowSequence[node + \"1\"] = 2;//Dom added\n    DamagePreventionScore[node + \"1\"] = 0;//Dom added\n    WindowsActive[node + \"2\"] = 0;\n    WindowSequence[node + \"2\"] = 3;//Dom added\n    DamagePreventionScore[node + \"2\"] = 2;//Dom added\n    WindowsActive[node + \"3\"] = 2;\n    WindowSequence[node + \"3\"] = 1;//Dom added\n    DamagePreventionScore[node + \"3\"] = 0;//Dom added\n    WindowsActive[node + \"4\"] = 0;\n    WindowSequence[node + \"4\"] = 4;//Dom added\n    DamagePreventionScore[node + \"4\"] = 2;//Dom added\n  } else if (whichSet == 1) {\n    WindowsActive[node + \"1\"] = 2;\n    WindowSequence[node + \"1\"] = 2;//Dom added\n    DamagePreventionScore[node + \"1\"] = 0;//Dom added\n    WindowsActive[node + \"2\"] = 2;\n    WindowSequence[node + \"2\"] = 1;//Dom added\n    DamagePreventionScore[node + \"2\"] = 0;//Dom added\n    WindowsActive[node + \"3\"] = 0;\n    WindowSequence[node + \"3\"] = 3;//Dom added\n    DamagePreventionScore[node + \"3\"] = 2;//Dom added\n    WindowsActive[node + \"4\"] = 0;\n    WindowSequence[node + \"4\"] = 4;//Dom added\n    DamagePreventionScore[node + \"4\"] = 2;//Dom added\n  }\n}\n\n\n\n/*\nCREATE TABLE BuildingWindowStatus(\n  MATCH_NUM INT NOT NULL,\n  BUILDING_NAME VARCHAR[32],\n  COMMUNITY INT NOT NULL,\n  BUILDING_SIDE INT NOT NULL,\n  WINDOWS_ACTIVE INT,\n  NUM_HITS INT NOT NULL,\n  TIMEOFMATCH INT NOT NULL,\n  PRIMARY KEY(MATCH_NUM, BUILDING_NAME, BUILDING_SIDE));\n  */\n\nvar sql = \"\";\n\n//initialize left\nconst COMMUNITYLEFT = \"LEFT\";\nfor (const leftNodeName of NodesForLeft) {\n  for (var i = 1; i <= 4; i++) {\n    var nodepluswin = leftNodeName + i + '';\n    //Dom updated\n    var line = \"UPDATE BuildingWindowStatus SET \"\n      + \" COMMUNITY = '\" + COMMUNITYLEFT + \"'\"   \n      + \", WINDOWS_ACTIVE = \" + WindowsActive[nodepluswin]\n      + \", WINDOW_SEQUENCE = \" + WindowSequence[nodepluswin]\n      + \", DAMAGE_PREVENTION_SCORE = \" + DamagePreventionScore[nodepluswin]\n      + \", NUM_HITS = 0 \"\n      + \", TIMEOFMATCH = \" + timestamp\n      + \" WHERE MATCH_NUM=\" + matchnum + \" AND BUILDING_NAME='\" + leftNodeName + \"' AND BUILDING_SIDE=\" + i\n      +\";\";\n    sql = sql + line;\n  }\n}\n\n//initialize left\nconst COMMUNITYRIGHT = \"RIGHT\";\nfor (const rightNodeName of NodesForRight) {\n  for (var i = 1; i <= 4; i++) {\n    var nodepluswin = rightNodeName + i;\n    //Dom updated\n    var line = \"UPDATE BuildingWindowStatus SET \"\n      + \" COMMUNITY = '\" + COMMUNITYRIGHT + \"'\" \n      + \", WINDOWS_ACTIVE = \" + WindowsActive[nodepluswin]\n      + \", WINDOW_SEQUENCE = \" + WindowSequence[nodepluswin]\n      + \", DAMAGE_PREVENTION_SCORE = \" + DamagePreventionScore[nodepluswin]\n      + \", NUM_HITS = 0 \"\n      + \", TIMEOFMATCH = \" + timestamp\n      + \" WHERE MATCH_NUM=\" + matchnum + \" AND BUILDING_NAME='\" + rightNodeName + \"' AND BUILDING_SIDE=\" + i\n      + \";\";\n    sql = sql + line;\n  }\n}\n\n\n\nmsg.topic = sql; \nmsg.lance = burningNode1;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1480,
        "wires": [
            [
                "806da0dcb41029ca",
                "cd1bf88c1e97229e",
                "d486c6a039176206"
            ]
        ]
    },
    {
        "id": "806da0dcb41029ca",
        "type": "sqlite",
        "z": "f74b301e4f22310f",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "batch",
        "sql": "",
        "name": "InitializeBuildingsWindows For Match",
        "x": 970,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "d486c6a039176206",
        "type": "debug",
        "z": "f74b301e4f22310f",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "lance",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1580,
        "wires": []
    },
    {
        "id": "dd2bda159bd6865c",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "Latest Match Hits Table Dump",
        "func": "\n\nvar matchid = global.get(\"matchnum\");\nvar newMsg = {\n    \"topic\": \"SELECT B.MATCH_NUM, B.BUILDING_NAME, BWS.BUILDING_SIDE, B.NUM_BAGS, B.NUM_DROPS, BWS.NUM_HITS FROM Buildings B INNER JOIN BuildingWindowStatus BWS \" \n        + \"on B.MATCH_NUM = BWS.MATCH_NUM AND B.BUILDING_NAME=BWS.BUILDING_NAME \"\n         +  \"WHERE B.MATCH_NUM = \" + matchid + \";\" \n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1980,
        "wires": [
            [
                "9ba69fd69ae011c7",
                "abf14147cd05c8bd"
            ]
        ]
    },
    {
        "id": "8d86d9b8f1326f1b",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "Result Dump",
        "func": "//CREATE TABLE GAMETEST(MATCH_NUM INTEGER PRIMARY KEY AUTOINCREMENT, BUILDING_ID VARCHAR(32), FIRE_SCORE INT NOT NULL, NUM_TREES INT NOT NULL, TIMEOFMATCH INT NOT NULL);  \n\n\n//var str = \"match: \" + msg.payload[0].MATCH_NUM + \" trees:\" + msg.payload[0].NUM_TREES + \" FIRE:\" + msg.payload[0].FIRE_SCORE + \" LASER HITS:\" + msg.payload[0].NUM_HITS;\n//msg.payload = str;\nlet newrow = []\nlet title = [\"MATCH_NUM\",\"NODE_ID\",\t\"SIDE_ID\",\"FIRE_SCORE\",\"NUM_TREES\",\"NUM_HITS\",\"NUM_DROPS\",\"NUM_BAGS\",\"TIMEOFMATCH\"]\ntitle.push()\nfor (var i=0;i<msg.payload.length;i++) {\n    var row = msg.payload[i];\n    if (\n        row.NUM_HITS != 0 ||\n        row.NUM_DROPS != 0 || \n        row.NUM_BAGS != 0) {\n        newrow.push(row);\n        } \n}\nmsg.payload = newrow;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1980,
        "wires": [
            [
                "ad3020e3fc7099e8",
                "abf14147cd05c8bd"
            ]
        ]
    },
    {
        "id": "9ba69fd69ae011c7",
        "type": "sqlite",
        "z": "f74b301e4f22310f",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 570,
        "y": 1980,
        "wires": [
            [
                "8d86d9b8f1326f1b",
                "abf14147cd05c8bd"
            ]
        ]
    },
    {
        "id": "ca18ad730b62784e",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Dump to Debug Latest Hits Match",
        "links": [
            "b988ed62abb07361"
        ],
        "x": 85,
        "y": 1980,
        "wires": [
            [
                "dd2bda159bd6865c"
            ]
        ]
    },
    {
        "id": "ad3020e3fc7099e8",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "link out 43",
        "links": [
            "c5b51aa2f4863b48",
            "28eb2bc55dcddb70"
        ],
        "x": 925,
        "y": 1980,
        "wires": []
    },
    {
        "id": "abf14147cd05c8bd",
        "type": "debug",
        "z": "f74b301e4f22310f",
        "name": "Current Game Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 2140,
        "wires": []
    },
    {
        "id": "d88db86de710b8e9",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Update FSHit (ADD)",
        "func": "var matchid = global.get(\"matchnum\");\nvar o = msg.payload;\nvar fs = o['FCS'];\nvar nodeid = o['BUILDING_NAME'];\n\n/*\no['FS'] = 1;\no['BUILDING_NAME'] = o['node_id'];\nmsg.topic = \"nodered/firescore/\" + o['node_id'];\n*/\n\nvar newMsg = {\n    \"topic\": \"UPDATE Buildings SET FCS = FCS + \" \n    + fs + \" WHERE MATCH_NUM = \" \n    + matchid + \" AND BUILDING_NAME='\" + nodeid +\"'\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 160,
        "wires": [
            [
                "3a4b12e5b9609b0d"
            ]
        ]
    },
    {
        "id": "890050b7a3592bf1",
        "type": "inject",
        "z": "8b4b6895c0ec29ec",
        "name": "Create Game Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "6b73945a30a3b156"
            ]
        ]
    },
    {
        "id": "6b73945a30a3b156",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE MATCH_STATE(\nMATCH_NUM INTEGER PRIMARY KEY AUTOINCREMENT,\nACTIVE_COMMUNITY VARCHAR(8),\nTIMEOFMATCH INT NOT NULL);  \n",
        "name": "Create Match Table",
        "x": 550,
        "y": 140,
        "wires": [
            [
                "544ae34808a17523",
                "1c0c1219794c876a",
                "9ab5c8b230048e8b"
            ]
        ]
    },
    {
        "id": "323e92765149313d",
        "type": "inject",
        "z": "8b4b6895c0ec29ec",
        "name": "INSERT New Match  with Random Game Event",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 380,
        "wires": [
            [
                "deb6a8cb5bd78b0e"
            ]
        ]
    },
    {
        "id": "d7e91528f5c8f1d6",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 330,
        "y": 540,
        "wires": [
            [
                "f406a76e56b92d05"
            ]
        ]
    },
    {
        "id": "deb6a8cb5bd78b0e",
        "type": "function",
        "z": "8b4b6895c0ec29ec",
        "name": "Create Sql Random Game Event",
        "func": "//CREATE TABLE GAMETEST(TIMESTAMP INT PRIMARY KEY NOT NULL, MATCH_NUM INT NOT NULL, BUILDING_ID VARCHAR(32), FIRE_SCORE INT NOT NULL, NUM_TREES INT NOT NULL);  )\n\nvar fireScore = Math.round(Math.random() * 10);\nvar numTrees = Math.round(Math.random() * 10);\nvar numHits = Math.round(Math.random() * 10);\n\nvar buildingId = \"LM1\";\n//could read last match num and send to this? or enter\nvar timestamp = msg.payload;\nvar newMsg = {\n    \"topic\": \"INSERT INTO GAMETEST (FIRE_SCORE,NUM_TREES, NUM_HITS, TIMEOFMATCH) VALUES ( \" + fireScore + \", \" + numTrees + \", \" + numHits + \", \"+ timestamp + \")\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 380,
        "wires": [
            [
                "f17cfb3701f218bb"
            ]
        ]
    },
    {
        "id": "f406a76e56b92d05",
        "type": "debug",
        "z": "8b4b6895c0ec29ec",
        "name": "SQL Write Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 540,
        "wires": []
    },
    {
        "id": "43ddc5a441c4fd3f",
        "type": "link in",
        "z": "8b4b6895c0ec29ec",
        "name": "genericSql",
        "links": [
            "cdb9035ee521bb85",
            "3e88982af6e3f40a",
            "b495418c6c4b995b",
            "3a4b12e5b9609b0d",
            "36875745f8a09dcd",
            "91eeec4cfa6d85ca",
            "a37728c272928fcb"
        ],
        "x": 175,
        "y": 540,
        "wires": [
            [
                "d7e91528f5c8f1d6"
            ]
        ]
    },
    {
        "id": "205cfd1b6882a75f",
        "type": "inject",
        "z": "8b4b6895c0ec29ec",
        "name": "Drop Game Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "3472ec7018175754",
                "82f12a1e14f33b59",
                "85525cb2f906b575"
            ]
        ]
    },
    {
        "id": "3472ec7018175754",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "DROP TABLE IF EXISTS MATCH_STATE;",
        "name": "Drop MATCH table",
        "x": 550,
        "y": 60,
        "wires": [
            [
                "82f12a1e14f33b59"
            ]
        ]
    },
    {
        "id": "544ae34808a17523",
        "type": "debug",
        "z": "8b4b6895c0ec29ec",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 40,
        "wires": []
    },
    {
        "id": "d68e0db08f5b39fe",
        "type": "comment",
        "z": "8b4b6895c0ec29ec",
        "name": "SQL-Lite Management and installation notes",
        "info": "We could distribute an image with the sqlite node alreaduy installed -- but this is the instructions to install it:\n\nTo install:\n cd ~/.node-red/\n npm i --unsafe-perm node-red-node-sqlite\n\nCreate this directory (to store the database):\nmkdir /home/pi/sqlite-storage\n\nThe database is configured in node red with the file:\n/home/pi/sqlite-storage/sqlite\n\nNote that the first time you create a table, it will automatically create the file in the directory and start writing to it.\n\n Then just run the following injections to create the table:\n \"Create Game Table\"\n\n if you want to drop the table and start over:\n \"Drop Game Table\"\n\n There are several other injections that allow to test everything out.\n",
        "x": 230,
        "y": 20,
        "wires": []
    },
    {
        "id": "f17cfb3701f218bb",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 890,
        "y": 380,
        "wires": [
            [
                "d8a5d35c8d38a3d3",
                "bb20e976f6f77ed1"
            ]
        ]
    },
    {
        "id": "d8a5d35c8d38a3d3",
        "type": "debug",
        "z": "8b4b6895c0ec29ec",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 380,
        "wires": []
    },
    {
        "id": "bb20e976f6f77ed1",
        "type": "link out",
        "z": "8b4b6895c0ec29ec",
        "name": "link out 3",
        "links": [
            "6864183a6d7d2b25"
        ],
        "x": 1105,
        "y": 260,
        "wires": []
    },
    {
        "id": "c940c00eb130609a",
        "type": "comment",
        "z": "8b4b6895c0ec29ec",
        "name": "BROKEN Insert New Match - TEST MATCH (For Testing only)",
        "info": "",
        "x": 280,
        "y": 320,
        "wires": []
    },
    {
        "id": "92a4b7e1ddc01aaf",
        "type": "comment",
        "z": "8b4b6895c0ec29ec",
        "name": "Generic SQL Access for Writes",
        "info": "",
        "x": 190,
        "y": 480,
        "wires": []
    },
    {
        "id": "1c0c1219794c876a",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE BuildingWindowStatus (\nMATCH_NUM INT NOT NULL,\nBUILDING_NAME VARCHAR[32],\nCOMMUNITY VARCHAR[12] NOT NULL,\nBUILDING_SIDE INT NOT NULL,\nWINDOW_SEQUENCE INT,\nWINDOWS_ACTIVE INT,\nDAMAGE_PREVENTION_SCORE INT,\nNUM_HITS INT NOT NULL,\nTIMEOFMATCH INT NOT NULL,\nPRIMARY KEY (MATCH_NUM, BUILDING_NAME, BUILDING_SIDE));",
        "name": "Create BuildingWindowStatus",
        "x": 970,
        "y": 140,
        "wires": [
            [
                "544ae34808a17523"
            ]
        ]
    },
    {
        "id": "82f12a1e14f33b59",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "DROP TABLE IF EXISTS Buildings;\n",
        "name": "Drop BuildingsTable",
        "x": 780,
        "y": 40,
        "wires": [
            [
                "544ae34808a17523"
            ]
        ]
    },
    {
        "id": "cbc94139020ca0b7",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 450,
        "y": 640,
        "wires": [
            [
                "27c12a21983f359e"
            ]
        ]
    },
    {
        "id": "27c12a21983f359e",
        "type": "debug",
        "z": "8b4b6895c0ec29ec",
        "name": "SQL Write Debug - Special",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 600,
        "wires": []
    },
    {
        "id": "f6566f17a1e9b78e",
        "type": "link in",
        "z": "8b4b6895c0ec29ec",
        "name": "genericSql-special",
        "links": [
            "d527904ed8723b40",
            "a87aaf575c427de3"
        ],
        "x": 175,
        "y": 620,
        "wires": [
            [
                "cbc94139020ca0b7",
                "27c12a21983f359e"
            ]
        ]
    },
    {
        "id": "9ab5c8b230048e8b",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE Buildings (\nMATCH_NUM INT NOT NULL,\nBUILDING_NAME VARCHAR[32],\nBUILDING_SIZE VARCHAR[12],\nSENSOR_TYPE VARCHAR[12],\nCOMMUNITY VARCHAR[12] NOT NULL,\nFIRE_ELIGIBLE INT NOT NULL,\nHOTSPOT INT NOT NULL, \nBURNING_STATUS INT NOT NULL,\nBLOCKED INT NOT NULL, \nFCS INT NOT NULL, \nDPS INT NOT NULL, \nNUM_BAGS INT NOT NULL,\nNUM_DROPS INT NOT NULL, \nTIMEOFMATCH INT NOT NULL,\nPRIMARY KEY (MATCH_NUM, BUILDING_NAME));",
        "name": "Create Buildings table",
        "x": 940,
        "y": 200,
        "wires": [
            [
                "544ae34808a17523"
            ]
        ]
    },
    {
        "id": "85525cb2f906b575",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "DROP TABLE IF EXISTS BuildingWindowStatus ;",
        "name": "Drop BuildingWindowStatusTable",
        "x": 1040,
        "y": 60,
        "wires": [
            [
                "544ae34808a17523"
            ]
        ]
    },
    {
        "id": "f4b7c4c243db620d",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Read Config Node ID",
        "x": 360,
        "y": 700,
        "wires": [
            [
                "2bcc56e6d241c3d9"
            ]
        ]
    },
    {
        "id": "837b88b53ec5549a",
        "type": "mqtt in",
        "z": "f3ec5d556e86f8d0",
        "name": "edgenode/initialization",
        "topic": "edgenode/initialization",
        "qos": "2",
        "datatype": "utf8",
        "broker": "5999f1d09afe1039",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 200,
        "y": 620,
        "wires": [
            [
                "0faf666bf00276e9"
            ]
        ]
    },
    {
        "id": "5bdc6b89364fd15a",
        "type": "comment",
        "z": "f3ec5d556e86f8d0",
        "name": "Config Setup Instructions",
        "info": "Config for the field contains the mapping of UUID (as written to each arduino board) and the node id as defined in the field diagram (containing LBO, RBO, etc)\n\n1. Write a text file in the following format:\nEDGE_UUID,EDGE_NODE_ID\n7452C441,LBO\n7452C442,LBM\n...\n\n2. Place on the raspberry pi in this location:\n/home/pi/field-config.csv\n    2.a -- emergency option, you can force a config down in the \"Write config to file\"  flow below -- see instructions there\n\n3. Create and/or drop then create the \"Create Config Table\"\n4. Run \"Load Config File into Config Table\"\n\n",
        "x": 210,
        "y": 40,
        "wires": []
    },
    {
        "id": "9bca7655eb1d89cf",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE FIELD_CONFIG (\n  EDGE_UUID TEXT PRIMARY KEY,\n  EDGE_NODE_ID TEXT\n)",
        "name": "Create Config Table",
        "x": 570,
        "y": 140,
        "wires": [
            [
                "cf58eb77138066b2"
            ]
        ]
    },
    {
        "id": "c7fe99b0e0506601",
        "type": "inject",
        "z": "f3ec5d556e86f8d0",
        "name": "Load Config File into Config Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 220,
        "wires": [
            [
                "8c0e6a2a0a04fcd7"
            ]
        ],
        "info": "See instructions on top -- but file is:\n/home/pi/field-config.csv"
    },
    {
        "id": "8c0e6a2a0a04fcd7",
        "type": "file in",
        "z": "f3ec5d556e86f8d0",
        "name": "Read Field Config",
        "filename": "/home/pi/field-config.csv",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 350,
        "y": 260,
        "wires": [
            [
                "340a8ade18808c45"
            ]
        ]
    },
    {
        "id": "340a8ade18808c45",
        "type": "csv",
        "z": "f3ec5d556e86f8d0",
        "name": "CSV Parse Field Config",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 570,
        "y": 260,
        "wires": [
            [
                "c58252a4cb097661"
            ]
        ]
    },
    {
        "id": "cf58eb77138066b2",
        "type": "debug",
        "z": "f3ec5d556e86f8d0",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 160,
        "wires": []
    },
    {
        "id": "9dd0a2d0ffb6a743",
        "type": "inject",
        "z": "f3ec5d556e86f8d0",
        "name": "Create Config Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "9bca7655eb1d89cf"
            ]
        ]
    },
    {
        "id": "4215a3196c228639",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SqlLite Commands",
        "x": 970,
        "y": 260,
        "wires": [
            [
                "cf58eb77138066b2"
            ]
        ]
    },
    {
        "id": "c58252a4cb097661",
        "type": "function",
        "z": "f3ec5d556e86f8d0",
        "name": "Construct SQL",
        "func": "var o = msg.payload;\nvar sql = \"INSERT INTO \\\"FIELD_CONFIG\\\"(EDGE_UUID, EDGE_NODE_ID) VALUES(\\\"\"+o.EDGE_UUID+\"\\\", \\\"\"+o.EDGE_NODE_ID+\"\\\") ON CONFLICT(EDGE_UUID) DO UPDATE SET EDGE_NODE_ID = excluded.EDGE_NODE_ID;\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 260,
        "wires": [
            [
                "4215a3196c228639"
            ]
        ]
    },
    {
        "id": "579c8c19ccab0937",
        "type": "inject",
        "z": "f3ec5d556e86f8d0",
        "name": "Drop Config Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "a74d42b7ae961652"
            ]
        ]
    },
    {
        "id": "a74d42b7ae961652",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "DROP TABLE IF EXISTS FIELD_CONFIG;",
        "name": "Drop Field Config Table",
        "x": 590,
        "y": 100,
        "wires": [
            [
                "cf58eb77138066b2"
            ]
        ]
    },
    {
        "id": "ac6ab4bb77d73dc4",
        "type": "function",
        "z": "f3ec5d556e86f8d0",
        "name": "Construct SQL",
        "func": "var o = msg.payload;\nvar sql = \"SELECT EDGE_NODE_ID, EDGE_UUID FROM FIELD_CONFIG WHERE EDGE_UUID='\" + o.uuid+ \"'\" ;\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 620,
        "wires": [
            [
                "f4b7c4c243db620d"
            ]
        ]
    },
    {
        "id": "0faf666bf00276e9",
        "type": "json",
        "z": "f3ec5d556e86f8d0",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 620,
        "wires": [
            [
                "ac6ab4bb77d73dc4"
            ]
        ]
    },
    {
        "id": "2bcc56e6d241c3d9",
        "type": "function",
        "z": "f3ec5d556e86f8d0",
        "name": "extract nodeid",
        "func": "\nvar nodeid = msg.payload[0].EDGE_NODE_ID;\nvar nodeuuid = msg.payload[0].EDGE_UUID;\nmsg.payload = nodeid;\nmsg.topic = \"nodered/initialization/\" + nodeuuid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 700,
        "wires": [
            [
                "feddd1768611c551"
            ]
        ]
    },
    {
        "id": "feddd1768611c551",
        "type": "mqtt out",
        "z": "f3ec5d556e86f8d0",
        "name": "Publish Node ID to edge Node",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 850,
        "y": 700,
        "wires": []
    },
    {
        "id": "b111193564f5a7a0",
        "type": "comment",
        "z": "f3ec5d556e86f8d0",
        "name": "Initialize Edge Nodes ",
        "info": "Edge nodes report in when they come online with a UUID\nUUID is accessed from the DB, and returned as a Node ID (as defined by our field layout/diagram)\n\nSee Load Config File into Config Table flow for how to edit this\n\nEach Arduino needs a unique id written into eeprom using -> https://github.com/lanceriedel/burn-uuid-eeprom\n",
        "x": 200,
        "y": 560,
        "wires": []
    },
    {
        "id": "97e2f252303bfcf3",
        "type": "inject",
        "z": "f3ec5d556e86f8d0",
        "name": "Write config to file",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[69,68,71,69,95,85,85,73,68,44,69,68,71,69,95,78,79,68,69,95,73,68,10,55,52,53,50,67,52,52,49,44,76,66,79,10,55,52,53,50,67,52,52,50,44,76,66,77,10,55,66,68,56,51,65,49,51,44,82,66,77,10,55,48,57,67,68,66,70,70,44,82,66,79]",
        "payloadType": "bin",
        "x": 150,
        "y": 840,
        "wires": [
            [
                "a1e6f1282aa6e63a"
            ]
        ],
        "info": "If you can't access the raspberry pi file system -- you can put the config here and force write it\nBUT -- you have to send as binary so that it retains the newlines\n\nFor example:\nEDGE_UUID,EDGE_NODE_ID\n7452C441,LBO\n7452C442,LBM\n7BD83A13,RBM\n709CDBFF,RBO\n\n\nBe sure to hit the elipses ...  so that you can see what you are typing.  \nAlso note that it will change to binary as soon as you send -- but it will work fine"
    },
    {
        "id": "a1e6f1282aa6e63a",
        "type": "file",
        "z": "f3ec5d556e86f8d0",
        "name": "",
        "filename": "/home/pi/field-config.csv",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 410,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "b70ae83c222fa7da",
        "type": "comment",
        "z": "f3ec5d556e86f8d0",
        "name": "Emergency Use! Write config -  (you need to load it after)",
        "info": "If you can't access the raspberry pi file system -- you can put the config here and force write it\nBUT -- you have to send as binary so that it retains the newlines\nFor example:\nEDGE_UUID,EDGE_NODE_ID\n7452C441,LBO\n7452C442,LBM\n7BD83A13,RBM\n709CDBFF,RBO\n\n\n\n\nBe sure to hit the elipses ...  so that you can see what you are typing.  \nAlso note that it will change to binary as soon as you send -- but it will work fine",
        "x": 240,
        "y": 800,
        "wires": []
    },
    {
        "id": "3dd25f169354ef22",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "Select * from FIELD_CONFIG;",
        "name": "Read Config",
        "x": 270,
        "y": 380,
        "wires": [
            [
                "ad34ea44766153db"
            ]
        ]
    },
    {
        "id": "6f32fc52a4d53df8",
        "type": "link in",
        "z": "f3ec5d556e86f8d0",
        "name": "Read Config",
        "links": [
            "5870cb8ac8846724",
            "f03d05829f9254f9"
        ],
        "x": 85,
        "y": 380,
        "wires": [
            [
                "3dd25f169354ef22"
            ]
        ]
    },
    {
        "id": "ad34ea44766153db",
        "type": "link out",
        "z": "f3ec5d556e86f8d0",
        "name": "link out 29",
        "links": [
            "4369b98b6d58fe86"
        ],
        "x": 435,
        "y": 380,
        "wires": []
    },
    {
        "id": "161f3cee4bd60724",
        "type": "link in",
        "z": "f3ec5d556e86f8d0",
        "name": "Insert UUI Entry",
        "links": [
            "99f3e6c97f2c0d2b"
        ],
        "x": 95,
        "y": 480,
        "wires": [
            [
                "b1e8ab6feba986c9"
            ]
        ]
    },
    {
        "id": "b1e8ab6feba986c9",
        "type": "function",
        "z": "f3ec5d556e86f8d0",
        "name": "Construct SQL",
        "func": "var o = msg.payload;\nvar sql = \"INSERT INTO \\\"FIELD_CONFIG\\\"(EDGE_UUID, EDGE_NODE_ID) VALUES(\\\"\"+o.EDGE_UUID+\"\\\", \\\"\"+o.EDGE_NODE_ID+\"\\\") ON CONFLICT(EDGE_UUID) DO UPDATE SET EDGE_NODE_ID = excluded.EDGE_NODE_ID;\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 480,
        "wires": [
            [
                "4b72a159e1e82517"
            ]
        ]
    },
    {
        "id": "4b72a159e1e82517",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SqlLite Commands",
        "x": 430,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "c79cb601a8c0ab17",
        "type": "comment",
        "z": "f3ec5d556e86f8d0",
        "name": "Add Single Edge Node",
        "info": "Update single node entry",
        "x": 180,
        "y": 440,
        "wires": []
    },
    {
        "id": "9f34def0af02efeb",
        "type": "function",
        "z": "f3ec5d556e86f8d0",
        "name": "Construct SQL",
        "func": "var o = msg.payload;\nvar sql = \"DELETE FROM \\\"FIELD_CONFIG\\\" WHERE EDGE_UUID=\\\"\"+o.EDGE_UUID+\"\\\";\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 480,
        "wires": [
            [
                "80e1d2d095f19693"
            ]
        ]
    },
    {
        "id": "80e1d2d095f19693",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SqlLite Commands",
        "x": 990,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "ac5d35d999fc40b9",
        "type": "comment",
        "z": "f3ec5d556e86f8d0",
        "name": "Remove Single Edge Node",
        "info": "Update single node entry",
        "x": 730,
        "y": 440,
        "wires": []
    },
    {
        "id": "cd811a5da6dea1c9",
        "type": "link in",
        "z": "f3ec5d556e86f8d0",
        "name": "Delete UUI Entry",
        "links": [
            "9e93acca6dde891c"
        ],
        "x": 635,
        "y": 480,
        "wires": [
            [
                "9f34def0af02efeb"
            ]
        ]
    },
    {
        "id": "f86871afbc03993e",
        "type": "mqtt out",
        "z": "f3ec5d556e86f8d0",
        "name": "Broadcast Laser Diff",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 680,
        "y": 1020,
        "wires": []
    },
    {
        "id": "91b03956f65107e7",
        "type": "function",
        "z": "f3ec5d556e86f8d0",
        "name": "assemble mqtt message",
        "func": "var o = msg.payload;\n\nvar t = \"{ \\\"DETECTOR_DIFF\\\": \\\"\" + o.diff + \"\\\"}\";\nmsg.payload = t;\n//nodered/firescore/[node id]\nmsg.topic = \"nodered/laserdiff\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1020,
        "wires": [
            [
                "f86871afbc03993e"
            ]
        ]
    },
    {
        "id": "7a6d7007d9d5ec67",
        "type": "link in",
        "z": "f3ec5d556e86f8d0",
        "name": "Broadcast Laser Diff Change",
        "links": [
            "c1f7e764f490f914"
        ],
        "x": 105,
        "y": 1020,
        "wires": [
            [
                "91b03956f65107e7"
            ]
        ]
    },
    {
        "id": "ccf03d13258bb4e3",
        "type": "comment",
        "z": "f3ec5d556e86f8d0",
        "name": "Broadcast Laser Diff Change",
        "info": "",
        "x": 160,
        "y": 960,
        "wires": []
    },
    {
        "id": "f8aa15da571b3aae",
        "type": "ui_text",
        "z": "829ad5255d8cf01f",
        "group": "a5991f3b10b51e7c",
        "order": 3,
        "width": "6",
        "height": "4",
        "name": "Loaded Values",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 580,
        "y": 160,
        "wires": []
    },
    {
        "id": "dfeaa41a75adbf51",
        "type": "ui_button",
        "z": "829ad5255d8cf01f",
        "name": "Submit",
        "group": "a5991f3b10b51e7c",
        "order": 4,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Current Config Dump",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 160,
        "wires": [
            [
                "5870cb8ac8846724",
                "a11c3ee5796d07f2"
            ]
        ]
    },
    {
        "id": "f4c6348e4bde4c20",
        "type": "ui_form",
        "z": "829ad5255d8cf01f",
        "name": "",
        "label": "Add UUID Mapping",
        "group": "a5991f3b10b51e7c",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Arduino UUID",
                "value": "EDGE_UUID",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Node ID",
                "value": "EDGE_NODE_ID",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "EDGE_UUID": "",
            "EDGE_NODE_ID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "99f3e6c97f2c0d2b",
                "a11c3ee5796d07f2"
            ]
        ]
    },
    {
        "id": "5870cb8ac8846724",
        "type": "link out",
        "z": "829ad5255d8cf01f",
        "name": "link out 28",
        "links": [
            "6f32fc52a4d53df8"
        ],
        "x": 305,
        "y": 160,
        "wires": []
    },
    {
        "id": "4369b98b6d58fe86",
        "type": "link in",
        "z": "829ad5255d8cf01f",
        "name": "Config Display",
        "links": [
            "ad34ea44766153db"
        ],
        "x": 435,
        "y": 160,
        "wires": [
            [
                "f8aa15da571b3aae"
            ]
        ]
    },
    {
        "id": "99f3e6c97f2c0d2b",
        "type": "link out",
        "z": "829ad5255d8cf01f",
        "name": "link out 30",
        "links": [
            "161f3cee4bd60724"
        ],
        "x": 385,
        "y": 260,
        "wires": []
    },
    {
        "id": "02673478ac90323a",
        "type": "comment",
        "z": "829ad5255d8cf01f",
        "name": "Dump Current Config",
        "info": "",
        "x": 200,
        "y": 100,
        "wires": []
    },
    {
        "id": "1dfa349788a1a948",
        "type": "ui_form",
        "z": "829ad5255d8cf01f",
        "name": "",
        "label": "Remove UUID Mapping",
        "group": "a5991f3b10b51e7c",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Arduino UUID",
                "value": "EDGE_UUID",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "EDGE_UUID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 210,
        "y": 340,
        "wires": [
            [
                "9e93acca6dde891c",
                "a11c3ee5796d07f2"
            ]
        ]
    },
    {
        "id": "9e93acca6dde891c",
        "type": "link out",
        "z": "829ad5255d8cf01f",
        "name": "link out 31",
        "links": [
            "cd811a5da6dea1c9"
        ],
        "x": 415,
        "y": 340,
        "wires": []
    },
    {
        "id": "a11c3ee5796d07f2",
        "type": "delay",
        "z": "829ad5255d8cf01f",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 480,
        "y": 220,
        "wires": [
            [
                "f03d05829f9254f9"
            ]
        ]
    },
    {
        "id": "f03d05829f9254f9",
        "type": "link out",
        "z": "829ad5255d8cf01f",
        "name": "link out 33",
        "links": [
            "6f32fc52a4d53df8"
        ],
        "x": 635,
        "y": 220,
        "wires": []
    },
    {
        "id": "a3534a12592a4f1e",
        "type": "ui_form",
        "z": "829ad5255d8cf01f",
        "name": "Set Laser Detector Diff",
        "label": "Set Laser Detector Differential (default 500)",
        "group": "a5991f3b10b51e7c",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Diff",
                "value": "diff",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "diff": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 220,
        "y": 480,
        "wires": [
            [
                "c1f7e764f490f914"
            ]
        ]
    },
    {
        "id": "c1f7e764f490f914",
        "type": "link out",
        "z": "829ad5255d8cf01f",
        "name": "link out 52",
        "links": [
            "7a6d7007d9d5ec67",
            "bc8a6edecc1a9a5c"
        ],
        "x": 445,
        "y": 480,
        "wires": []
    },
    {
        "id": "67088a3f2dedd67b",
        "type": "mqtt in",
        "z": "8d38dc412a73d987",
        "name": "edgenode/latesttare/#",
        "topic": "edgenode/latesttare/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "5999f1d09afe1039",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 140,
        "y": 440,
        "wires": [
            [
                "b057c4c81f9a5137"
            ]
        ]
    },
    {
        "id": "b057c4c81f9a5137",
        "type": "debug",
        "z": "8d38dc412a73d987",
        "name": "Dump Latest Tares From Field",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 440,
        "wires": []
    },
    {
        "id": "e2b27e9faf37bd1e",
        "type": "mqtt out",
        "z": "f3ec5d556e86f8d0",
        "name": "Broadcast Query Latest Tare",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 700,
        "y": 1140,
        "wires": []
    },
    {
        "id": "6331f7057ebfd37c",
        "type": "function",
        "z": "f3ec5d556e86f8d0",
        "name": "assemble mqtt message",
        "func": "var o = msg.payload;\n\nvar t = \"{ }\";\nmsg.payload = t;\n//nodered/firescore/[node id]\nmsg.topic = \"nodered/weighttare\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1140,
        "wires": [
            [
                "e2b27e9faf37bd1e"
            ]
        ]
    },
    {
        "id": "bc8a6edecc1a9a5c",
        "type": "link in",
        "z": "f3ec5d556e86f8d0",
        "name": "Broadcast TareQuery",
        "links": [
            "c1f7e764f490f914",
            "4bdef8d87b5da823"
        ],
        "x": 105,
        "y": 1140,
        "wires": [
            [
                "6331f7057ebfd37c"
            ]
        ]
    },
    {
        "id": "c74fb766b19e2bf1",
        "type": "comment",
        "z": "f3ec5d556e86f8d0",
        "name": "Broadcast Query for Weight Tare",
        "info": "Reported back through a separate message\nedgenode/latesttare/",
        "x": 170,
        "y": 1080,
        "wires": []
    },
    {
        "id": "4bdef8d87b5da823",
        "type": "link out",
        "z": "829ad5255d8cf01f",
        "name": "link out 53",
        "links": [
            "bc8a6edecc1a9a5c"
        ],
        "x": 495,
        "y": 540,
        "wires": []
    },
    {
        "id": "b15078312d3e61f5",
        "type": "ui_button",
        "z": "829ad5255d8cf01f",
        "name": "Query Latest Tare Value from all Field",
        "group": "a5991f3b10b51e7c",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Query Field For Latest Tares",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 540,
        "wires": [
            [
                "4bdef8d87b5da823"
            ]
        ]
    },
    {
        "id": "c2193eec083eacdb",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "SQL - Building Sensor Type",
        "func": "//SQL to select building sensor type (ball or laser)\n\nvar matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\n\nmsg.topic = \"SELECT BUILDINGS.SENSOR_TYPE FROM BUILDINGS WHERE ((BUILDINGS.BUILDING_NAME)='\" + nodeid + \"') AND ((Buildings.MATCH_NUM)=\" + matchid + \")\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 100,
        "wires": [
            [
                "a67694159f710341"
            ]
        ]
    },
    {
        "id": "a67694159f710341",
        "type": "sqlite",
        "z": "5b48d63e525889af",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL",
        "x": 590,
        "y": 100,
        "wires": [
            [
                "c2f038296e76b682"
            ]
        ]
    },
    {
        "id": "6eac2fe7281c11f2",
        "type": "switch",
        "z": "5b48d63e525889af",
        "name": "Sensor Type",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Laser",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ball",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 180,
        "wires": [
            [
                "11588512fe70d6b0"
            ],
            [
                "ea7d0061413f925f"
            ]
        ]
    },
    {
        "id": "ea7d0061413f925f",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "SQL - Ball - Active Windows Total",
        "func": "//Building is of type Ball\n//SQL statement to determine number of currently active windows\n//in this building\n\nvar matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\n\nmsg.topic = \"SELECT Sum(BuildingWindowStatus.WINDOWS_ACTIVE) AS SumOfWindowsActive FROM BuildingWindowStatus WHERE (((BuildingWindowStatus.MATCH_NUM)=\" + matchid + \") AND ((BuildingWindowStatus.BUILDING_NAME)='\" + nodeid + \"'))\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 220,
        "wires": [
            [
                "a4553dd306cedcd0"
            ]
        ]
    },
    {
        "id": "11588512fe70d6b0",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "SQL - Laser - Active Windows Total (tbd)",
        "func": "//Building is of type Laser\n//SQL tbd\n\nvar num_hits = msg.savedvalues.num_hits\nvar nodeid = msg.savedvalues.BUILDING_NAME;\nvar sideid = msg.savedvalues.side_id;\nmsg.payload = nodeid + \" is Laser\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c2f038296e76b682",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "Retreive Sensor Type",
        "func": "//SQLite results; building sensor type\n\nvar sensortype = msg.payload[0].SENSOR_TYPE; //this is the data needed via the SQL\nmsg.payload = sensortype\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 140,
        "wires": [
            [
                "6eac2fe7281c11f2"
            ]
        ]
    },
    {
        "id": "a4553dd306cedcd0",
        "type": "sqlite",
        "z": "5b48d63e525889af",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "18d0398ffa53edda"
            ]
        ]
    },
    {
        "id": "18d0398ffa53edda",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "Ball - Retrieve Active Windows Total",
        "func": "//SQLite results; number of active windows in this building\n\nvar totalActiveWindows = msg.payload[0].SumOfWindowsActive;\n\nmsg.payload = totalActiveWindows\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 300,
        "wires": [
            [
                "44a0094fdc96d8c2"
            ]
        ]
    },
    {
        "id": "1641bb288999c860",
        "type": "inject",
        "z": "5b48d63e525889af",
        "name": "Drop Ball",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 340,
        "y": 60,
        "wires": [
            [
                "7f0e8c768e7bd333"
            ]
        ]
    },
    {
        "id": "7f0e8c768e7bd333",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "Set Values (edit me to test)",
        "func": "//edit this as needed for testing\n\nmsg.building_name = 'RBI';\nmsg.inc_hits = 31;\nmsg.side_id = 1;// MQTT wise, for Ball this will be received as 1 by default. For Laser this will received as a specific value\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 60,
        "wires": [
            [
                "c2193eec083eacdb"
            ]
        ]
    },
    {
        "id": "5045da469492c582",
        "type": "comment",
        "z": "5b48d63e525889af",
        "name": "Inject for testing",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "44a0094fdc96d8c2",
        "type": "switch",
        "z": "5b48d63e525889af",
        "name": "Active Windows",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 140,
        "y": 340,
        "wires": [
            [
                "e485da60de8ffdd0"
            ],
            [
                "dbd3c6e1c947ba36"
            ]
        ]
    },
    {
        "id": "e485da60de8ffdd0",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "SQL - Ball - activeWindows = 0",
        "func": "//Number of active windows was already zero. Thus, for completeness,\n//we updated the number of hits to zero.\n//Since this is a ball building, we use side 1 as the default for hits\n//SQL statement to do the above\n\nvar matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\n\nmsg.topic = \"UPDATE BuildingWindowStatus SET NUM_HITS = 0 WHERE (((BUILDING_NAME)='\" + nodeid + \"') AND ((BUILDING_SIDE)=1) AND ((MATCH_NUM)=\" + matchid + \"))\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 340,
        "wires": [
            [
                "5907f4cea55aae19"
            ]
        ]
    },
    {
        "id": "5907f4cea55aae19",
        "type": "sqlite",
        "z": "5b48d63e525889af",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL act 0",
        "x": 580,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "dbd3c6e1c947ba36",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "SQL - Ball - activeWindows > 0",
        "func": "//building has at least one active window.\n//Time to keep track of the hits\n//This SQL will retrieve the current number of hits from the database\n//This value will be used with the additional incoming hit value\n//to determine a totaly number of hits for later evaluation\n\nvar matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\nmsg.activewindows = msg.payload\n\nmsg.topic = \"SELECT Sum(BuildingWindowStatus.NUM_HITS) AS SumOfNUM_HITS FROM BuildingWindowStatus WHERE (((BuildingWindowStatus.BUILDING_NAME)='\" + nodeid + \"') AND ((BuildingWindowStatus.MATCH_NUM)=\" + matchid + \"))\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 380,
        "wires": [
            [
                "1f8bdb18d82341c7"
            ]
        ]
    },
    {
        "id": "1f8bdb18d82341c7",
        "type": "sqlite",
        "z": "5b48d63e525889af",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL",
        "x": 570,
        "y": 380,
        "wires": [
            [
                "9fef1bf51bd82d93"
            ]
        ]
    },
    {
        "id": "9fef1bf51bd82d93",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "Ball - Retrieve updatedActiveWindows",
        "func": "//Ball code\n//SQLite results; We now have the current number of hits from the database\n//We take that value and add the additional incoming hits\n//This new total of hits is now used to determine how many windows\n//can be deactivated.\n//Since this is a Ball building, then four (4) hits will deactivate one\n//window. Any leftover hits will be stored back into the database\n//for later use if needed\n\nvar building_name = msg.building_name;\nvar SumOfWindowsActive = msg.activewindows; //from database. Current active windows this building\nvar carryover_hits = msg.payload[0].SumOfNUM_HITS; //from database. Hits that were extra beyond four\nvar inc_hits = msg.inc_hits; //from mqtt. Hit total that just came in\n\n\nvar SumTheTwo = carryover_hits + inc_hits; // incoming hits added to carryover hits\nvar DivideByFour = SumTheTwo/4; // window require four balls to register\nvar WindowsToExtinguish = Math.floor(DivideByFour) // rounding down to nearest whole integer. this is the window total to extinguish\nvar ActiveWindowsNow = SumOfWindowsActive - WindowsToExtinguish // subtract the windows to extinguish from the current active window count\nif (ActiveWindowsNow <= 0) {\n    ActiveWindowsNow = 0;\n}\n\nvar MultByFour = WindowsToExtinguish * 4 // totaling the sum of whole \"every four\" hits\nvar UpdCarryoverHits = SumTheTwo - MultByFour // this is carryover to be saved in database\n\nmsg.payload = \"BALL PreviousActiveWindows:\" + SumOfWindowsActive + \"  WindowsActiveNow:\" + ActiveWindowsNow + \" with leftover hits:\" + UpdCarryoverHits;\nmsg.active_windows_now = ActiveWindowsNow;\nmsg.updated_num_hits = UpdCarryoverHits;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 420,
        "wires": [
            [
                "2e2ff89264a068bf",
                "fa4c981d240556ce"
            ]
        ]
    },
    {
        "id": "2e2ff89264a068bf",
        "type": "debug",
        "z": "5b48d63e525889af",
        "name": "What Is Happeining",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 420,
        "wires": []
    },
    {
        "id": "362cdf8487a4ec20",
        "type": "switch",
        "z": "5b48d63e525889af",
        "name": "ActiveWindowsNow",
        "property": "active_windows_now",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "8",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 370,
        "y": 680,
        "wires": [
            [
                "9507789b22d5f388"
            ],
            [
                "786b14782f58c90a"
            ],
            [
                "786b14782f58c90a"
            ],
            [
                "9af18f782d123d35"
            ],
            [
                "9af18f782d123d35"
            ],
            [
                "aa1720d10ff6a6ff"
            ],
            [
                "aa1720d10ff6a6ff"
            ],
            [
                "f5d0aa28e6f0422e"
            ],
            [
                "f5d0aa28e6f0422e"
            ]
        ]
    },
    {
        "id": "786b14782f58c90a",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "SQL - Ball - update side 4",
        "func": "// update side 4\nvar matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\nvar UpdatedActiveWindows = msg.active_windows_now\nvar ActiveWindowsThisSide = UpdatedActiveWindows - 6\n\nmsg.topic = \"UPDATE BuildingWindowStatus SET WINDOWS_ACTIVE = \" + ActiveWindowsThisSide + \" WHERE (((MATCH_NUM)=\" + matchid + \") AND ((BUILDING_NAME)='\" + nodeid + \"') AND ((BUILDING_SIDE)=4))\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 600,
        "wires": [
            [
                "96915771e6e35ba5",
                "d659c7c1a1ee4638"
            ]
        ]
    },
    {
        "id": "96915771e6e35ba5",
        "type": "sqlite",
        "z": "5b48d63e525889af",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL1",
        "x": 1030,
        "y": 580,
        "wires": [
            [
                "9507789b22d5f388"
            ]
        ]
    },
    {
        "id": "d659c7c1a1ee4638",
        "type": "mqtt out",
        "z": "5b48d63e525889af",
        "d": true,
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 1030,
        "y": 620,
        "wires": []
    },
    {
        "id": "9507789b22d5f388",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "SQL - Ball - update num hits",
        "func": "//SQL to write updated carryover hits to database\n\nvar matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\nvar updnumhits = msg.updated_num_hits\n\nmsg.topic = \"UPDATE BuildingWindowStatus SET NUM_HITS = \" + updnumhits + \" WHERE (((BUILDING_NAME)='\" + nodeid + \"') AND ((BUILDING_SIDE)=1) AND ((MATCH_NUM)=\" + matchid + \"));\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2020,
        "y": 220,
        "wires": [
            [
                "a1208ec4660409f3"
            ]
        ]
    },
    {
        "id": "a1208ec4660409f3",
        "type": "sqlite",
        "z": "5b48d63e525889af",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL11",
        "x": 2210,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "9af18f782d123d35",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "SQL - Ball - update sequence 3 side",
        "func": "// updated side corresponding to sequence 3\nvar matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\nvar UpdatedActiveWindows = msg.active_windows_now\nvar ActiveWindowsThisSide = UpdatedActiveWindows - 4\nvar SeqThreeSide = msg.seqthreeside; //this is the data needed via the SQL\n\nmsg.topic = \"UPDATE BuildingWindowStatus SET WINDOWS_ACTIVE = \" + ActiveWindowsThisSide + \" WHERE (((MATCH_NUM)=\" + matchid + \") AND ((BUILDING_NAME)= '\" + nodeid + \"') AND ((BUILDING_SIDE)=\" + SeqThreeSide + \"))\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 700,
        "wires": [
            [
                "4a532ab323f31897",
                "eefd448726fdf3ee"
            ]
        ]
    },
    {
        "id": "e9fb10454fdcd876",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "SQL - Ball - side 4 to zero",
        "func": "// set side 4 activewindows = 0\nvar matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\n\nmsg.topic = \"UPDATE BuildingWindowStatus SET WINDOWS_ACTIVE = 0 WHERE (((MATCH_NUM)=\" + matchid + \") AND ((BUILDING_NAME)='\" + nodeid + \"') AND ((BUILDING_SIDE)=4));\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 540,
        "wires": [
            [
                "926978629096483a",
                "b23693337d0bf525"
            ]
        ]
    },
    {
        "id": "926978629096483a",
        "type": "mqtt out",
        "z": "5b48d63e525889af",
        "d": true,
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 2030,
        "y": 580,
        "wires": []
    },
    {
        "id": "4a532ab323f31897",
        "type": "sqlite",
        "z": "5b48d63e525889af",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL3",
        "x": 1090,
        "y": 680,
        "wires": [
            [
                "e9fb10454fdcd876"
            ]
        ]
    },
    {
        "id": "b23693337d0bf525",
        "type": "sqlite",
        "z": "5b48d63e525889af",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL10",
        "x": 2020,
        "y": 540,
        "wires": [
            [
                "9507789b22d5f388"
            ]
        ]
    },
    {
        "id": "eefd448726fdf3ee",
        "type": "mqtt out",
        "z": "5b48d63e525889af",
        "d": true,
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 1090,
        "y": 720,
        "wires": []
    },
    {
        "id": "fa4c981d240556ce",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "SQL - Ball - find sequence side 3",
        "func": "var matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\n\nmsg.topic = \"SELECT BuildingWindowStatus.BUILDING_SIDE AS SeqThreeSide FROM BuildingWindowStatus WHERE (((BuildingWindowStatus.MATCH_NUM)=\" + matchid + \") AND ((BuildingWindowStatus.BUILDING_NAME)='\" + nodeid + \"') AND ((BuildingWindowStatus.WINDOW_SEQUENCE)=3));\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 460,
        "wires": [
            [
                "367d82828fd6ff70"
            ]
        ]
    },
    {
        "id": "367d82828fd6ff70",
        "type": "sqlite",
        "z": "5b48d63e525889af",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL2",
        "x": 390,
        "y": 460,
        "wires": [
            [
                "5b7196606532f662"
            ]
        ]
    },
    {
        "id": "f5c4d853da6c42c4",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "SQL - Ball - find sequence side 1",
        "func": "var matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\n\nmsg.topic = \"SELECT BuildingWindowStatus.BUILDING_SIDE AS SeqOneSide FROM BuildingWindowStatus WHERE (((BuildingWindowStatus.MATCH_NUM)=\" + matchid + \") AND ((BuildingWindowStatus.BUILDING_NAME)='\" + nodeid + \"') AND ((BuildingWindowStatus.WINDOW_SEQUENCE)=1))\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 500,
        "wires": [
            [
                "6e6a4b5ac69db804"
            ]
        ]
    },
    {
        "id": "6e6a4b5ac69db804",
        "type": "sqlite",
        "z": "5b48d63e525889af",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL4",
        "x": 390,
        "y": 500,
        "wires": [
            [
                "feed706833b18dcb"
            ]
        ]
    },
    {
        "id": "5b7196606532f662",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "Sequence Side 3",
        "func": "msg.seqthreeside = msg.payload[0].SeqThreeSide;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 460,
        "wires": [
            [
                "f5c4d853da6c42c4"
            ]
        ]
    },
    {
        "id": "feed706833b18dcb",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "Sequence Side 1",
        "func": "msg.seqoneside = msg.payload[0].SeqOneSide;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 500,
        "wires": [
            [
                "362cdf8487a4ec20"
            ]
        ]
    },
    {
        "id": "aa1720d10ff6a6ff",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "SQL - Ball - update side 1",
        "func": "// update side 1\nvar matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\nvar UpdatedActiveWindows = msg.active_windows_now\nvar ActiveWindowsThisSide = UpdatedActiveWindows - 2\n\nmsg.topic = \"UPDATE BuildingWindowStatus SET WINDOWS_ACTIVE = \" + ActiveWindowsThisSide + \" WHERE (((MATCH_NUM)=\" + matchid + \") AND ((BUILDING_NAME)='\" + nodeid + \"') AND ((BUILDING_SIDE)=1));\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 780,
        "wires": [
            [
                "5e1bedb2aeceb7e9",
                "d0c72785beeaf77f"
            ]
        ]
    },
    {
        "id": "5e1bedb2aeceb7e9",
        "type": "sqlite",
        "z": "5b48d63e525889af",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL6",
        "x": 1010,
        "y": 780,
        "wires": [
            [
                "0f411cc6b38c0078"
            ]
        ]
    },
    {
        "id": "d0c72785beeaf77f",
        "type": "mqtt out",
        "z": "5b48d63e525889af",
        "d": true,
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 1010,
        "y": 820,
        "wires": []
    },
    {
        "id": "0f411cc6b38c0078",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "SQL - Ball - sequence side 3 to zero",
        "func": "// updated side corresponding to sequence 3\nvar matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\nvar SeqThreeSide = msg.seqthreeside; //this is the data needed via the SQL\n\nmsg.topic = \"UPDATE BuildingWindowStatus SET WINDOWS_ACTIVE = 0 WHERE (((MATCH_NUM)=\" + matchid + \") AND ((BUILDING_NAME)= '\" + nodeid + \"') AND ((BUILDING_SIDE)=\" + SeqThreeSide + \"))\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 780,
        "wires": [
            [
                "9f435b2414157ed3",
                "aff8404fddd1fe2e"
            ]
        ]
    },
    {
        "id": "9f435b2414157ed3",
        "type": "sqlite",
        "z": "5b48d63e525889af",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL6",
        "x": 1770,
        "y": 780,
        "wires": [
            [
                "e9fb10454fdcd876"
            ]
        ]
    },
    {
        "id": "aff8404fddd1fe2e",
        "type": "mqtt out",
        "z": "5b48d63e525889af",
        "d": true,
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 1770,
        "y": 820,
        "wires": []
    },
    {
        "id": "f5d0aa28e6f0422e",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "SQL - Ball - update sequence 1 side",
        "func": "// updated side corresponding to sequence 2\nvar matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\nvar UpdatedActiveWindows = msg.active_windows_now\nvar ActiveWindowsThisSide = UpdatedActiveWindows\nvar SeqOneSide = msg.seqoneside; //this is the data needed via the SQL\n\nmsg.topic = \"UPDATE BuildingWindowStatus SET WINDOWS_ACTIVE = \" + ActiveWindowsThisSide + \" WHERE (((MATCH_NUM)=\" + matchid + \") AND ((BUILDING_NAME)= '\" + nodeid + \"') AND ((BUILDING_SIDE)=\" + SeqOneSide + \"))\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 880,
        "wires": [
            [
                "efb06d29e5adbe9f",
                "3ba3088e67cb12eb"
            ]
        ]
    },
    {
        "id": "efb06d29e5adbe9f",
        "type": "sqlite",
        "z": "5b48d63e525889af",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL6",
        "x": 1090,
        "y": 880,
        "wires": [
            [
                "db22302541b3901f"
            ]
        ]
    },
    {
        "id": "3ba3088e67cb12eb",
        "type": "mqtt out",
        "z": "5b48d63e525889af",
        "d": true,
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 1090,
        "y": 920,
        "wires": []
    },
    {
        "id": "db22302541b3901f",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "SQL - Ball - side 1 to zero",
        "func": "// update side 1\nvar matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\n\nmsg.topic = \"UPDATE BuildingWindowStatus SET WINDOWS_ACTIVE = 0 WHERE (((MATCH_NUM)=\" + matchid + \") AND ((BUILDING_NAME)='\" + nodeid + \"') AND ((BUILDING_SIDE)=1));\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 880,
        "wires": [
            [
                "d506f148496ad4c0",
                "27578e827405ddbe"
            ]
        ]
    },
    {
        "id": "d506f148496ad4c0",
        "type": "sqlite",
        "z": "5b48d63e525889af",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL6",
        "x": 1450,
        "y": 880,
        "wires": [
            [
                "0f411cc6b38c0078"
            ]
        ]
    },
    {
        "id": "27578e827405ddbe",
        "type": "mqtt out",
        "z": "5b48d63e525889af",
        "d": true,
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 1450,
        "y": 920,
        "wires": []
    },
    {
        "id": "3bb438dae9469e89",
        "type": "function",
        "z": "5b48d63e525889af",
        "name": "Increase ActiveWindows (edit me)",
        "func": "//edit this as needed for testing\n\nvar matchid = 1\nvar nodeid = \"RBI\"\nvar sideid = 1\nvar ActiveWindowsThisSide = 2\n\nmsg.topic = \"UPDATE BuildingWindowStatus SET WINDOWS_ACTIVE = \" + ActiveWindowsThisSide + \" WHERE (((MATCH_NUM)=\" + matchid + \") AND ((BUILDING_NAME)= '\" + nodeid + \"') AND ((BUILDING_SIDE)=\" + sideid + \"))\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 60,
        "wires": [
            [
                "03e21eec806df10a"
            ]
        ]
    },
    {
        "id": "0e03d8d915539d0d",
        "type": "inject",
        "z": "5b48d63e525889af",
        "name": "Increase Windows",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 910,
        "y": 60,
        "wires": [
            [
                "3bb438dae9469e89"
            ]
        ]
    },
    {
        "id": "03e21eec806df10a",
        "type": "sqlite",
        "z": "5b48d63e525889af",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL",
        "x": 1370,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "e6d30826475b7b92",
        "type": "function",
        "z": "e1a756fd8363adc2",
        "name": "SQL - Building Sensor Type",
        "func": "//SQL to select building sensor type (ball or laser)\n\nvar matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\n\nmsg.topic = \"SELECT BUILDINGS.SENSOR_TYPE FROM BUILDINGS WHERE ((BUILDINGS.BUILDING_NAME)='\" + nodeid + \"') AND ((Buildings.MATCH_NUM)=\" + matchid + \")\";\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 80,
        "wires": [
            [
                "8e77061f625fb34c"
            ]
        ]
    },
    {
        "id": "8e77061f625fb34c",
        "type": "sqlite",
        "z": "e1a756fd8363adc2",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL",
        "x": 590,
        "y": 80,
        "wires": [
            [
                "c5083e4288d2992d"
            ]
        ]
    },
    {
        "id": "acefc24e1ecdaa15",
        "type": "switch",
        "z": "e1a756fd8363adc2",
        "name": "Sensor Type",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Laser",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ball",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 160,
        "wires": [
            [
                "b4883cec7d727b82"
            ],
            [
                "cb924bba051807a0"
            ]
        ]
    },
    {
        "id": "cb924bba051807a0",
        "type": "function",
        "z": "e1a756fd8363adc2",
        "name": "SQL - Ball - Active Windows Total",
        "func": "//Building is of type Ball\n//SQL statement to determine number of currently active windows\n//in this building\n\nvar matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\n\nmsg.topic = \"SELECT Sum(BuildingWindowStatus.WINDOWS_ACTIVE) AS SumOfWindowsActive FROM BuildingWindowStatus WHERE (((BuildingWindowStatus.MATCH_NUM)=\" + matchid + \") AND ((BuildingWindowStatus.BUILDING_NAME)='\" + nodeid + \"'))\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "b4883cec7d727b82",
        "type": "function",
        "z": "e1a756fd8363adc2",
        "name": "SQL - Laser - Active Windows Total",
        "func": "//Building is of type Laser\n//SQL statement to determine number of currently active windows\n//in this building, on this side\n\nvar matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\nvar sideid = msg.side_id;\n\nmsg.topic = \"SELECT BuildingWindowStatus.WINDOWS_ACTIVE AS WindowsActiveThisSide FROM BuildingWindowStatus WHERE (((BuildingWindowStatus.MATCH_NUM)=\" + matchid + \") AND ((BuildingWindowStatus.BUILDING_NAME)='\" + nodeid + \"') AND ((BuildingWindowStatus.BUILDING_SIDE)=\" + sideid + \"))\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 160,
        "wires": [
            [
                "4f5b0d4b352ef051"
            ]
        ]
    },
    {
        "id": "c5083e4288d2992d",
        "type": "function",
        "z": "e1a756fd8363adc2",
        "name": "Retreive Sensor Type",
        "func": "//SQLite results; building sensor type\n\nvar sensortype = msg.payload[0].SENSOR_TYPE; //this is the data needed via the SQL\nmsg.payload = sensortype\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 120,
        "wires": [
            [
                "acefc24e1ecdaa15"
            ]
        ]
    },
    {
        "id": "bc378d088b33a398",
        "type": "inject",
        "z": "e1a756fd8363adc2",
        "name": "Laser Hit",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 340,
        "y": 40,
        "wires": [
            [
                "2c7e6e3885c23b37"
            ]
        ]
    },
    {
        "id": "2c7e6e3885c23b37",
        "type": "function",
        "z": "e1a756fd8363adc2",
        "name": "Set Values (edit me to test)",
        "func": "//edit this as needed for testing\n\nmsg.building_name = 'RTO';\nmsg.inc_hits = 6;\nmsg.side_id = 2;// MQTT wise, for Ball this will be received as 1 by default. For Laser this will received as a specific value\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 40,
        "wires": [
            [
                "e6d30826475b7b92"
            ]
        ]
    },
    {
        "id": "39443efa26cd3081",
        "type": "comment",
        "z": "e1a756fd8363adc2",
        "name": "Inject for testing",
        "info": "",
        "x": 160,
        "y": 40,
        "wires": []
    },
    {
        "id": "dbcef8b513540730",
        "type": "function",
        "z": "e1a756fd8363adc2",
        "name": "Increase ActiveWindows (edit me)",
        "func": "//edit this as needed for testing\n\nvar matchid = 1\nvar nodeid = \"RBI\"\nvar sideid = 1\nvar ActiveWindowsThisSide = 2\n\nmsg.topic = \"UPDATE BuildingWindowStatus SET WINDOWS_ACTIVE = \" + ActiveWindowsThisSide + \" WHERE (((MATCH_NUM)=\" + matchid + \") AND ((BUILDING_NAME)= '\" + nodeid + \"') AND ((BUILDING_SIDE)=\" + sideid + \"))\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 40,
        "wires": [
            [
                "0c0af96644ec8933"
            ]
        ]
    },
    {
        "id": "0f1441b8c6c2b276",
        "type": "inject",
        "z": "e1a756fd8363adc2",
        "name": "Increase Windows",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 910,
        "y": 40,
        "wires": [
            [
                "dbcef8b513540730"
            ]
        ]
    },
    {
        "id": "0c0af96644ec8933",
        "type": "sqlite",
        "z": "e1a756fd8363adc2",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL",
        "x": 1370,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "4f5b0d4b352ef051",
        "type": "sqlite",
        "z": "e1a756fd8363adc2",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL",
        "x": 630,
        "y": 160,
        "wires": [
            [
                "15a2c8dd212691c2"
            ]
        ]
    },
    {
        "id": "15a2c8dd212691c2",
        "type": "function",
        "z": "e1a756fd8363adc2",
        "name": "Laser - Retrieve Active Windows This Side",
        "func": "//SQLite results; number of active windows in this building, on this side\n\nvar totalActiveWindowsThisSide = msg.payload[0].WindowsActiveThisSide;\n\nmsg.payload = totalActiveWindowsThisSide\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 160,
        "wires": [
            [
                "9da197977bc771a0"
            ]
        ]
    },
    {
        "id": "9da197977bc771a0",
        "type": "switch",
        "z": "e1a756fd8363adc2",
        "name": "Active Windows",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1140,
        "y": 160,
        "wires": [
            [
                "b180819e3b9213c6"
            ],
            [
                "907711875876e4f6"
            ]
        ]
    },
    {
        "id": "b180819e3b9213c6",
        "type": "function",
        "z": "e1a756fd8363adc2",
        "name": "SQL - Laser - activeWindows = 0",
        "func": "//Number of active windows was already zero FOR THIS SIDE. Thus, for completeness,\n//we updated the number of hits to zero FOR THIS SIDE.\n//Since this is a laser building, we use the side that was hit as provided via MQTT\n//SQL statement to do the above\n\nvar matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\nvar sideid = msg.side_id;\n\nmsg.topic = \"UPDATE BuildingWindowStatus SET NUM_HITS = 0 WHERE (((BuildingWindowStatus.MATCH_NUM)=\" + matchid + \") AND ((BuildingWindowStatus.BUILDING_NAME)='\" + nodeid + \"') AND ((BuildingWindowStatus.BUILDING_SIDE)=\" + sideid + \"))\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 140,
        "wires": [
            [
                "32c2b5c059f36a0a"
            ]
        ]
    },
    {
        "id": "32c2b5c059f36a0a",
        "type": "sqlite",
        "z": "e1a756fd8363adc2",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL act 0",
        "x": 1600,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "907711875876e4f6",
        "type": "function",
        "z": "e1a756fd8363adc2",
        "name": "SQL - Laser - activeWindows > 0",
        "func": "//building has at least one active window, ON THIS SIDE\n//Time to keep track of the hits\n//This SQL will retrieve the current number of carryover hits ON THIS SIDE from the database\n//This value will be used with the additional incoming hit value\n//to determine a totaly number of hits for later evaluation\n\nvar matchid = global.get(\"matchnum\");\nvar nodeid = msg.building_name;\nvar sideid = msg.side_id;\nmsg.activewindowsthisside = msg.payload\n\nmsg.topic = \"SELECT Sum(BuildingWindowStatus.NUM_HITS) AS SumOfNUM_HITS FROM BuildingWindowStatus WHERE (((BuildingWindowStatus.MATCH_NUM)=\" + matchid + \") AND ((BuildingWindowStatus.BUILDING_NAME)='\" + nodeid + \"') AND ((BuildingWindowStatus.BUILDING_SIDE)=\" + sideid + \"))\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 180,
        "wires": [
            [
                "5f2509c20a465828"
            ]
        ]
    },
    {
        "id": "5f2509c20a465828",
        "type": "sqlite",
        "z": "e1a756fd8363adc2",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQL",
        "x": 1590,
        "y": 180,
        "wires": [
            [
                "7ae2217a9f645817"
            ]
        ]
    },
    {
        "id": "7ae2217a9f645817",
        "type": "function",
        "z": "e1a756fd8363adc2",
        "name": "Laser - Retrieve updatedActiveWindows",
        "func": "//Laser code\n//SQLite results; We now have the current number of hits on this side from the database\n//We take that value and add the additional incoming hits\n//This new total of hits is now used to determine how many windows\n//can be deactivated ON THIS SIDE\n//Since this is a Laser building, then two (2) hits will deactivate one\n//window ON THIS SIDE. Any leftover hits will be stored back into the database\n//for FOR THIS SIDE for later use if needed\n\nvar building_name = msg.building_name;\nvar SumOfWindowsActive = msg.activewindowsthisside; //from database. Current active windows this building FOR THIS SIDE\nvar carryover_hits = msg.payload[0].SumOfNUM_HITS; //from database. Hits ON THIS SIDE that were extra beyond two\nvar inc_hits = msg.inc_hits; //from mqtt. Hit total that just came in FOR THIS SIDE\n\n\nvar SumTheTwo = carryover_hits + inc_hits; // incoming hits added to carryover hits\nvar DivideByTwo = SumTheTwo/2; // window require four balls to register\nvar WindowsToExtinguish = Math.floor(DivideByTwo) // rounding down to nearest whole integer. this is the window total to extinguish\nvar ActiveWindowsNow = SumOfWindowsActive - WindowsToExtinguish // subtract the windows to extinguish from the current active window count\nif (ActiveWindowsNow <= 0) {\n    ActiveWindowsNow = 0;\n}\n\nvar MultByTwo = WindowsToExtinguish * 2 // totaling the sum of whole \"every two\" hits\nvar UpdCarryoverHits = SumTheTwo - MultByTwo // this is carryover FOR THIS SIDE to be saved in database\n\nmsg.payload = \"LASER PreviousActiveWindowsTHISSIDE:\" + SumOfWindowsActive + \"  WindowsActiveNowTHISSIDE:\" + ActiveWindowsNow + \" with leftover hits this side:\" + UpdCarryoverHits;\nmsg.active_windows_now = ActiveWindowsNow;\nmsg.updated_num_hits = UpdCarryoverHits;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 240,
        "wires": [
            [
                "3186aed41caae2d3"
            ]
        ]
    },
    {
        "id": "3186aed41caae2d3",
        "type": "debug",
        "z": "e1a756fd8363adc2",
        "name": "What Is Happeining",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 240,
        "wires": []
    }
]