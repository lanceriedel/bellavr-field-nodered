[
    {
        "id": "3d42d3194c2552f8",
        "type": "tab",
        "label": "MQTT Output to Field",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8d38dc412a73d987",
        "type": "tab",
        "label": "MQTT Input From Field Game Flows",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "dc5996c16196eba2",
        "type": "tab",
        "label": "Manual Game Flows",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f74b301e4f22310f",
        "type": "tab",
        "label": "Game Data Access Flows",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8b4b6895c0ec29ec",
        "type": "tab",
        "label": "Storage Management",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f3ec5d556e86f8d0",
        "type": "tab",
        "label": "Field Config",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5999f1d09afe1039",
        "type": "mqtt-broker",
        "name": "mqtt-node-main",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6f6f2d0bf9d4b5e3",
        "type": "sqlitedb",
        "db": "/home/pi/sqlite-storage/sqlite",
        "mode": "RWC"
    },
    {
        "id": "675e506f8cc3e3c6",
        "type": "mqtt out",
        "z": "3d42d3194c2552f8",
        "name": "window-off-mqtt",
        "topic": "windowoff",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 790,
        "y": 160,
        "wires": []
    },
    {
        "id": "c11317ac5ddaf481",
        "type": "switch",
        "z": "3d42d3194c2552f8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 140,
        "wires": [
            [
                "2e5f3a887f317523"
            ],
            [
                "675e506f8cc3e3c6"
            ]
        ]
    },
    {
        "id": "4f1f03d9ace5b214",
        "type": "mqtt out",
        "z": "3d42d3194c2552f8",
        "name": "window-on-mqtt",
        "topic": "windowon",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 790,
        "y": 100,
        "wires": []
    },
    {
        "id": "456171329783d919",
        "type": "debug",
        "z": "3d42d3194c2552f8",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 400,
        "wires": []
    },
    {
        "id": "6a3261bd5d1634ff",
        "type": "inject",
        "z": "3d42d3194c2552f8",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "7956c7f15c937519"
            ]
        ]
    },
    {
        "id": "7956c7f15c937519",
        "type": "function",
        "z": "3d42d3194c2552f8",
        "name": "Create flip/flop",
        "func": "var count = context.get(\"counter\") || 0;\ncount = (count + 1) % 2;\ncontext.set(\"counter\", count);\nmsg.payload = count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "if (context.get(\"counter\") === undefined) {\n    context.set(\"counter\", 0)\n}",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 140,
        "wires": [
            [
                "c11317ac5ddaf481"
            ]
        ]
    },
    {
        "id": "2e5f3a887f317523",
        "type": "change",
        "z": "3d42d3194c2552f8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ONMORETIME",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 100,
        "wires": [
            [
                "4f1f03d9ace5b214"
            ]
        ]
    },
    {
        "id": "a983e99d613458db",
        "type": "comment",
        "z": "3d42d3194c2552f8",
        "name": "Heartbeat - sending 1/0 flip flop",
        "info": "",
        "x": 170,
        "y": 60,
        "wires": []
    },
    {
        "id": "1d8b42fd0952e51b",
        "type": "link in",
        "z": "3d42d3194c2552f8",
        "name": "Game Reset Message - MQTT Out",
        "links": [
            "3f00803b0fe3404d"
        ],
        "x": 95,
        "y": 400,
        "wires": [
            [
                "2c24dc53b6049b78"
            ]
        ]
    },
    {
        "id": "2c24dc53b6049b78",
        "type": "mqtt out",
        "z": "3d42d3194c2552f8",
        "name": "edgenode/gamereset",
        "topic": "edgenode/gamereset",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 320,
        "y": 400,
        "wires": []
    },
    {
        "id": "6cddfd33ec05b6b7",
        "type": "mqtt in",
        "z": "8d38dc412a73d987",
        "name": "edgenode/laserhit/#",
        "topic": "edgenode/laserhit/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "5999f1d09afe1039",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 140,
        "wires": [
            [
                "515a805e2750f3bd",
                "372b9594ce982517"
            ]
        ]
    },
    {
        "id": "515a805e2750f3bd",
        "type": "link out",
        "z": "8d38dc412a73d987",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "af55cd6eb001ec61"
        ],
        "x": 415,
        "y": 140,
        "wires": []
    },
    {
        "id": "372b9594ce982517",
        "type": "debug",
        "z": "8d38dc412a73d987",
        "name": "MQTT Input From Field Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 280,
        "wires": []
    },
    {
        "id": "bfe3c6c9b8f1ea94",
        "type": "comment",
        "z": "8d38dc412a73d987",
        "name": "Game Field input messages over mqtt",
        "info": "",
        "x": 170,
        "y": 60,
        "wires": []
    },
    {
        "id": "f4c1c11a188f5c23",
        "type": "inject",
        "z": "dc5996c16196eba2",
        "name": "Increment Fire Score +1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"firescore\":1,\"timestamp\":1000000}",
        "payloadType": "json",
        "x": 180,
        "y": 600,
        "wires": [
            [
                "5eca71e17e525b35"
            ]
        ]
    },
    {
        "id": "5eca71e17e525b35",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "21d3a1c330d6a65e",
            "b49a77ff09745d6d",
            "af55cd6eb001ec61"
        ],
        "x": 375,
        "y": 600,
        "wires": []
    },
    {
        "id": "bcef7098b2bcab87",
        "type": "inject",
        "z": "dc5996c16196eba2",
        "name": "New Match",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "4eb277af36ef1fe2"
            ]
        ]
    },
    {
        "id": "4eb277af36ef1fe2",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "a5a1bd31c468f86b"
        ],
        "x": 285,
        "y": 160,
        "wires": []
    },
    {
        "id": "e68d02821b10c9fd",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "48af91ab4809047a"
        ],
        "x": 915,
        "y": 160,
        "wires": []
    },
    {
        "id": "c2285509eb863856",
        "type": "inject",
        "z": "dc5996c16196eba2",
        "name": "Current Global.Matchnum",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "matchnum",
        "payloadType": "global",
        "x": 190,
        "y": 340,
        "wires": [
            [
                "e7fdc24bcd360c08"
            ]
        ]
    },
    {
        "id": "e7fdc24bcd360c08",
        "type": "debug",
        "z": "dc5996c16196eba2",
        "name": "Debug Manual Game Flows",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 340,
        "wires": []
    },
    {
        "id": "372c7a6bec7d1005",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Game Control Flows that can be triggered manually",
        "info": "",
        "x": 250,
        "y": 40,
        "wires": []
    },
    {
        "id": "58e0133d504974b2",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Start a new match ",
        "info": "Creates a new match in the Game table\nSets the global matchnum for all flows to use",
        "x": 150,
        "y": 120,
        "wires": []
    },
    {
        "id": "5eef5dc3824c88f6",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Dump to Debug the Current match num",
        "info": "",
        "x": 210,
        "y": 300,
        "wires": []
    },
    {
        "id": "63b6bb6097222b63",
        "type": "inject",
        "z": "dc5996c16196eba2",
        "name": "Dump to Debug Latest Match",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 440,
        "wires": [
            [
                "c30231dee65db09d"
            ]
        ]
    },
    {
        "id": "c30231dee65db09d",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "18a554bcaa2360e7"
        ],
        "x": 425,
        "y": 440,
        "wires": []
    },
    {
        "id": "1f2c1fa133c6065f",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Dump to Debug the Current match num",
        "info": "",
        "x": 210,
        "y": 400,
        "wires": []
    },
    {
        "id": "ed83cb16654dd159",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Increment Scores for latest Match ",
        "info": "",
        "x": 200,
        "y": 540,
        "wires": []
    },
    {
        "id": "5017a08295e5843b",
        "type": "inject",
        "z": "dc5996c16196eba2",
        "name": "Increment Lase Hit Score +1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"hits\":1,\"timestamp\":1000000}",
        "payloadType": "json",
        "x": 200,
        "y": 660,
        "wires": [
            [
                "64800c16d9ae1ca4"
            ]
        ]
    },
    {
        "id": "64800c16d9ae1ca4",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 11",
        "mode": "link",
        "links": [
            "af55cd6eb001ec61"
        ],
        "x": 375,
        "y": 660,
        "wires": []
    },
    {
        "id": "3f00803b0fe3404d",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "1d8b42fd0952e51b"
        ],
        "x": 915,
        "y": 220,
        "wires": []
    },
    {
        "id": "5a0caa59c0804229",
        "type": "link in",
        "z": "dc5996c16196eba2",
        "name": "Callback Finished New Match DB",
        "links": [
            "7d1c946cf1d71468"
        ],
        "x": 465,
        "y": 160,
        "wires": [
            [
                "cf8c03fdd1d44ae3"
            ]
        ]
    },
    {
        "id": "cf8c03fdd1d44ae3",
        "type": "change",
        "z": "dc5996c16196eba2",
        "name": "Set Debug Complete New Match",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Call Back Complete for New Match",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 160,
        "wires": [
            [
                "e68d02821b10c9fd",
                "e7fdc24bcd360c08"
            ]
        ]
    },
    {
        "id": "5f48dcd9ce58c49a",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "New Match Call backs to set global.matchnum and notify field",
        "info": "Creates a new match in the Game table\nSets the global matchnum for all flows to use",
        "x": 660,
        "y": 120,
        "wires": []
    },
    {
        "id": "9d2b1fca46f9be8c",
        "type": "link in",
        "z": "dc5996c16196eba2",
        "name": "Callback Finished Set global.matchnum",
        "links": [
            "50a7d4620d30956a"
        ],
        "x": 465,
        "y": 220,
        "wires": [
            [
                "32cd111d9a2a3113"
            ]
        ]
    },
    {
        "id": "32cd111d9a2a3113",
        "type": "change",
        "z": "dc5996c16196eba2",
        "name": "Set Debug Notify Field",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Call Back Complete for Notify field",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 220,
        "wires": [
            [
                "3f00803b0fe3404d",
                "e7fdc24bcd360c08"
            ]
        ]
    },
    {
        "id": "0143496e1011b5b9",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Update Fire Score (ADD)",
        "func": "var matchid = global.get(\"matchnum\");\nvar o = msg.payload;\nvar fs = o.firescore;\nvar newMsg = {\n    \"topic\": \"UPDATE GAMETEST SET FIRE_SCORE = FIRE_SCORE + \" + fs + \" WHERE MATCH_NUM = \" + matchid + \";\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 160,
        "wires": [
            [
                "3a4b12e5b9609b0d",
                "54b2cad8c9c66ea5"
            ]
        ]
    },
    {
        "id": "3a4b12e5b9609b0d",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "43ddc5a441c4fd3f"
        ],
        "x": 915,
        "y": 160,
        "wires": []
    },
    {
        "id": "07b0e9426f57711a",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Increment Fire Score for latest match",
        "info": "",
        "x": 210,
        "y": 120,
        "wires": []
    },
    {
        "id": "a4fbec13a30337cd",
        "type": "json",
        "z": "f74b301e4f22310f",
        "name": "Parse Incoming",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 420,
        "y": 160,
        "wires": [
            [
                "0143496e1011b5b9"
            ]
        ]
    },
    {
        "id": "b49a77ff09745d6d",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Input Firescore",
        "links": [
            "5eca71e17e525b35"
        ],
        "x": 205,
        "y": 160,
        "wires": [
            [
                "a4fbec13a30337cd"
            ]
        ]
    },
    {
        "id": "be446f7474a7a970",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - New Match",
        "func": "//CREATE TABLE GAMETEST(TIMESTAMP INT PRIMARY KEY NOT NULL, MATCH_NUM INT NOT NULL, FIRE_SCORE INT NOT NULL, NUM_TREES INT NOT NULL);  )\n\nvar timestamp = msg.payload;\nvar newMsg = {\n    \"topic\": \"INSERT INTO GAMETEST (FIRE_SCORE,NUM_TREES, NUM_HITS, TIMEOFMATCH) VALUES ( \"  + 0 + \", \" + 0 + \", \" + 0 + \", \"+ timestamp + \")\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 600,
        "wires": [
            [
                "54b2cad8c9c66ea5",
                "1b1e8fd5cb5d35c6"
            ]
        ]
    },
    {
        "id": "54b2cad8c9c66ea5",
        "type": "debug",
        "z": "f74b301e4f22310f",
        "name": "Game Storage Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 360,
        "wires": []
    },
    {
        "id": "a5a1bd31c468f86b",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "New Match Creation",
        "links": [
            "4eb277af36ef1fe2"
        ],
        "x": 185,
        "y": 600,
        "wires": [
            [
                "be446f7474a7a970"
            ]
        ]
    },
    {
        "id": "2a673ebfd70ddc64",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Create a new empty match (set global.matchnum to new matchnum)",
        "info": "",
        "x": 280,
        "y": 540,
        "wires": []
    },
    {
        "id": "540954cda7540f43",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "Select All Game Table",
        "func": "var newMsg = {\n    \"topic\": \"select * from GAMETEST ORDER BY TIMEOFMATCH DESC;\"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 680,
        "wires": [
            [
                "27094e97daa3234a"
            ]
        ]
    },
    {
        "id": "27094e97daa3234a",
        "type": "sqlite",
        "z": "f74b301e4f22310f",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 530,
        "y": 680,
        "wires": [
            [
                "786da311f9d1e2af"
            ]
        ]
    },
    {
        "id": "786da311f9d1e2af",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "Result match_num",
        "func": "var matchid = msg.payload[0].MATCH_NUM;\nmsg.payload = matchid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 680,
        "wires": [
            [
                "a4cca78582b0aa97"
            ]
        ]
    },
    {
        "id": "a4cca78582b0aa97",
        "type": "change",
        "z": "f74b301e4f22310f",
        "name": "set global",
        "rules": [
            {
                "t": "set",
                "p": "matchnum",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 680,
        "wires": [
            [
                "50a7d4620d30956a"
            ]
        ]
    },
    {
        "id": "48af91ab4809047a",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Set Latest Matchnum to Global",
        "links": [
            "e68d02821b10c9fd"
        ],
        "x": 105,
        "y": 680,
        "wires": [
            [
                "540954cda7540f43"
            ]
        ]
    },
    {
        "id": "553a13c0223b7873",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Sets Global.matchnum to latest match in DB",
        "info": "",
        "x": 210,
        "y": 640,
        "wires": []
    },
    {
        "id": "4bfad19cc46d0966",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "Latest Match Table Dump",
        "func": "\n\nvar matchid = global.get(\"matchnum\");\nvar newMsg = {\n    \"topic\": \"SELECT * FROM GAMETEST WHERE MATCH_NUM = \" + matchid + \";\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 840,
        "wires": [
            [
                "397f10dd3ab3a997"
            ]
        ]
    },
    {
        "id": "5954b430a79f7b3e",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "Result Dump",
        "func": "//CREATE TABLE GAMETEST(MATCH_NUM INTEGER PRIMARY KEY AUTOINCREMENT, BUILDING_ID VARCHAR(32), FIRE_SCORE INT NOT NULL, NUM_TREES INT NOT NULL, TIMEOFMATCH INT NOT NULL);  \n\n\nvar str = \"match: \" + msg.payload[0].MATCH_NUM + \" trees:\" + msg.payload[0].NUM_TREES + \" FIRE:\" + msg.payload[0].FIRE_SCORE + \" LASER HITS:\" + msg.payload[0].NUM_HITS;\nmsg.payload = str;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 840,
        "wires": [
            [
                "54b2cad8c9c66ea5"
            ]
        ]
    },
    {
        "id": "397f10dd3ab3a997",
        "type": "sqlite",
        "z": "f74b301e4f22310f",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 570,
        "y": 840,
        "wires": [
            [
                "5954b430a79f7b3e"
            ]
        ]
    },
    {
        "id": "953a1664303952cf",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Data Access Flows for the Game Storage",
        "info": "Flows that access the DB and upddate and or read various game states\nThese can be accessed via Manual Game Flows and/or nodered flows which are triggered via mqtt",
        "x": 220,
        "y": 40,
        "wires": []
    },
    {
        "id": "18a554bcaa2360e7",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Dump to Debug Latest Match",
        "links": [
            "c30231dee65db09d"
        ],
        "x": 105,
        "y": 840,
        "wires": [
            [
                "4bfad19cc46d0966"
            ]
        ]
    },
    {
        "id": "761720674f178020",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Dump to Debug the latest match data",
        "info": "",
        "x": 190,
        "y": 780,
        "wires": []
    },
    {
        "id": "d1689404d7efa6f4",
        "type": "debug",
        "z": "f74b301e4f22310f",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 960,
        "wires": []
    },
    {
        "id": "ee723854cfa1c6f1",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Update Laser Hit (ADD)",
        "func": "var matchid = global.get(\"matchnum\");\nvar o = msg.payload;\nvar hits = o.hits;\nvar newMsg = {\n    \"topic\": \"UPDATE GAMETEST SET NUM_HITS = NUM_HITS + \" + hits + \" WHERE MATCH_NUM = \" + matchid + \";\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 260,
        "wires": [
            [
                "d527904ed8723b40"
            ]
        ]
    },
    {
        "id": "ad8d8a3973c7761a",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Increment Laser Hit for latest match",
        "info": "",
        "x": 200,
        "y": 220,
        "wires": []
    },
    {
        "id": "473384a40d04fd99",
        "type": "json",
        "z": "f74b301e4f22310f",
        "name": "Parse Incoming",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 420,
        "y": 260,
        "wires": [
            [
                "ee723854cfa1c6f1"
            ]
        ]
    },
    {
        "id": "af55cd6eb001ec61",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Input Laser Hit",
        "links": [
            "5eca71e17e525b35",
            "64800c16d9ae1ca4",
            "515a805e2750f3bd"
        ],
        "x": 205,
        "y": 260,
        "wires": [
            [
                "473384a40d04fd99"
            ]
        ]
    },
    {
        "id": "d527904ed8723b40",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "43ddc5a441c4fd3f"
        ],
        "x": 915,
        "y": 260,
        "wires": []
    },
    {
        "id": "1b1e8fd5cb5d35c6",
        "type": "sqlite",
        "z": "f74b301e4f22310f",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "New Match Create",
        "x": 750,
        "y": 600,
        "wires": [
            [
                "54b2cad8c9c66ea5",
                "7d1c946cf1d71468"
            ]
        ]
    },
    {
        "id": "7d1c946cf1d71468",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "New Match DB Entry Complete",
        "mode": "link",
        "links": [
            "5a0caa59c0804229"
        ],
        "x": 945,
        "y": 600,
        "wires": []
    },
    {
        "id": "50a7d4620d30956a",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "New Match DB Entry Complete",
        "mode": "link",
        "links": [
            "9d2b1fca46f9be8c"
        ],
        "x": 1025,
        "y": 680,
        "wires": []
    },
    {
        "id": "890050b7a3592bf1",
        "type": "inject",
        "z": "8b4b6895c0ec29ec",
        "name": "Create Game Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "6b73945a30a3b156"
            ]
        ]
    },
    {
        "id": "6b73945a30a3b156",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE GAMETEST(MATCH_NUM INTEGER PRIMARY KEY AUTOINCREMENT, FIRE_SCORE INT NOT NULL, NUM_TREES INT NOT NULL, NUM_HITS INT NOT NULL, TIMEOFMATCH INT NOT NULL);  ",
        "name": "Create Game Table - SqlLiteGameStorage",
        "x": 620,
        "y": 140,
        "wires": [
            [
                "544ae34808a17523"
            ]
        ]
    },
    {
        "id": "323e92765149313d",
        "type": "inject",
        "z": "8b4b6895c0ec29ec",
        "name": "INSERT New Match  with Random Game Event",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 380,
        "wires": [
            [
                "deb6a8cb5bd78b0e"
            ]
        ]
    },
    {
        "id": "d7e91528f5c8f1d6",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 330,
        "y": 540,
        "wires": [
            [
                "f406a76e56b92d05"
            ]
        ]
    },
    {
        "id": "deb6a8cb5bd78b0e",
        "type": "function",
        "z": "8b4b6895c0ec29ec",
        "name": "Create Sql Random Game Event",
        "func": "//CREATE TABLE GAMETEST(TIMESTAMP INT PRIMARY KEY NOT NULL, MATCH_NUM INT NOT NULL, BUILDING_ID VARCHAR(32), FIRE_SCORE INT NOT NULL, NUM_TREES INT NOT NULL);  )\n\nvar fireScore = Math.round(Math.random() * 10);\nvar numTrees = Math.round(Math.random() * 10);\nvar numHits = Math.round(Math.random() * 10);\n\nvar buildingId = \"LM1\";\n//could read last match num and send to this? or enter\nvar timestamp = msg.payload;\nvar newMsg = {\n    \"topic\": \"INSERT INTO GAMETEST (FIRE_SCORE,NUM_TREES, NUM_HITS, TIMEOFMATCH) VALUES ( \" + fireScore + \", \" + numTrees + \", \" + numHits + \", \"+ timestamp + \")\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 380,
        "wires": [
            [
                "f17cfb3701f218bb"
            ]
        ]
    },
    {
        "id": "f406a76e56b92d05",
        "type": "debug",
        "z": "8b4b6895c0ec29ec",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 540,
        "wires": []
    },
    {
        "id": "43ddc5a441c4fd3f",
        "type": "link in",
        "z": "8b4b6895c0ec29ec",
        "name": "genericSql",
        "links": [
            "cdb9035ee521bb85",
            "3e88982af6e3f40a",
            "b495418c6c4b995b",
            "3a4b12e5b9609b0d",
            "36875745f8a09dcd",
            "d527904ed8723b40"
        ],
        "x": 175,
        "y": 540,
        "wires": [
            [
                "d7e91528f5c8f1d6"
            ]
        ]
    },
    {
        "id": "205cfd1b6882a75f",
        "type": "inject",
        "z": "8b4b6895c0ec29ec",
        "name": "Drop Game Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "3472ec7018175754"
            ]
        ]
    },
    {
        "id": "3472ec7018175754",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "DROP TABLE IF EXISTS GAMETEST;",
        "name": "Drop Game Table",
        "x": 550,
        "y": 60,
        "wires": [
            [
                "544ae34808a17523"
            ]
        ]
    },
    {
        "id": "544ae34808a17523",
        "type": "debug",
        "z": "8b4b6895c0ec29ec",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 20,
        "wires": []
    },
    {
        "id": "d68e0db08f5b39fe",
        "type": "comment",
        "z": "8b4b6895c0ec29ec",
        "name": "SQL-Lite Management and installation notes",
        "info": "We could distribute an image with the sqlite node alreaduy installed -- but this is the instructions to install it:\n\nTo install:\n cd ~/.node-red/\n npm i --unsafe-perm node-red-node-sqlite\n\nCreate this directory (to store the database):\nmkdir /home/pi/sqlite-storage\n\nThe database is configured in node red with the file:\n/home/pi/sqlite-storage/sqlite\n\nNote that the first time you create a table, it will automatically create the file in the directory and start writing to it.\n\n Then just run the following injections to create the table:\n \"Create Game Table\"\n\n if you want to drop the table and start over:\n \"Drop Game Table\"\n\n There are several other injections that allow to test everything out.\n",
        "x": 230,
        "y": 20,
        "wires": []
    },
    {
        "id": "f17cfb3701f218bb",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 890,
        "y": 380,
        "wires": [
            [
                "d8a5d35c8d38a3d3",
                "bb20e976f6f77ed1"
            ]
        ]
    },
    {
        "id": "d8a5d35c8d38a3d3",
        "type": "debug",
        "z": "8b4b6895c0ec29ec",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 380,
        "wires": []
    },
    {
        "id": "bb20e976f6f77ed1",
        "type": "link out",
        "z": "8b4b6895c0ec29ec",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "6864183a6d7d2b25"
        ],
        "x": 1105,
        "y": 260,
        "wires": []
    },
    {
        "id": "c940c00eb130609a",
        "type": "comment",
        "z": "8b4b6895c0ec29ec",
        "name": "Insert New Match - TEST MATCH (For Testing only)",
        "info": "",
        "x": 250,
        "y": 320,
        "wires": []
    },
    {
        "id": "92a4b7e1ddc01aaf",
        "type": "comment",
        "z": "8b4b6895c0ec29ec",
        "name": "Generic SQL Access for Writes",
        "info": "",
        "x": 190,
        "y": 480,
        "wires": []
    },
    {
        "id": "f4b7c4c243db620d",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Read Config Node ID",
        "x": 780,
        "y": 420,
        "wires": [
            [
                "2bcc56e6d241c3d9",
                "495420fab0112b70"
            ]
        ]
    },
    {
        "id": "837b88b53ec5549a",
        "type": "mqtt in",
        "z": "f3ec5d556e86f8d0",
        "name": "edgenode/initialization",
        "topic": "edgenode/initialization",
        "qos": "2",
        "datatype": "utf8",
        "broker": "5999f1d09afe1039",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 420,
        "wires": [
            [
                "0faf666bf00276e9"
            ]
        ]
    },
    {
        "id": "5bdc6b89364fd15a",
        "type": "comment",
        "z": "f3ec5d556e86f8d0",
        "name": "Config Setup Instructions",
        "info": "Config for the field contains the mapping of UUID (as written to each arduino board) and the node id as defined in the field diagram (containing LBO, RBO, etc)\n\n1. Write a text file in the following format:\nEDGE_UUID,EDGE_NODE_ID\n7452C441,LBO\n7452C442,LBM\n...\n\n2. Place on the raspberry pi in this location:\n/home/pi/field-config.csv\n\n3. Create and/or drop then create the \"Create Config Table and import\"\n\n",
        "x": 210,
        "y": 40,
        "wires": []
    },
    {
        "id": "9bca7655eb1d89cf",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE FIELD_CONFIG (\n  EDGE_UUID TEXT PRIMARY KEY,\n  EDGE_NODE_ID TEXT\n)",
        "name": "Create Config Table",
        "x": 570,
        "y": 140,
        "wires": [
            [
                "cf58eb77138066b2"
            ]
        ]
    },
    {
        "id": "c7fe99b0e0506601",
        "type": "inject",
        "z": "f3ec5d556e86f8d0",
        "name": "Load Config File into Config Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 220,
        "wires": [
            [
                "8c0e6a2a0a04fcd7"
            ]
        ],
        "info": "See instructions on top -- but file is:\n/home/pi/field-config.csv"
    },
    {
        "id": "8c0e6a2a0a04fcd7",
        "type": "file in",
        "z": "f3ec5d556e86f8d0",
        "name": "Read Field Config",
        "filename": "/home/pi/field-config.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 350,
        "y": 260,
        "wires": [
            [
                "340a8ade18808c45"
            ]
        ]
    },
    {
        "id": "340a8ade18808c45",
        "type": "csv",
        "z": "f3ec5d556e86f8d0",
        "name": "CSV Parse Field Config",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 570,
        "y": 260,
        "wires": [
            [
                "c58252a4cb097661"
            ]
        ]
    },
    {
        "id": "cf58eb77138066b2",
        "type": "debug",
        "z": "f3ec5d556e86f8d0",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 160,
        "wires": []
    },
    {
        "id": "9dd0a2d0ffb6a743",
        "type": "inject",
        "z": "f3ec5d556e86f8d0",
        "name": "Create Config Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "9bca7655eb1d89cf"
            ]
        ]
    },
    {
        "id": "4215a3196c228639",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SqlLite Commands",
        "x": 970,
        "y": 260,
        "wires": [
            [
                "cf58eb77138066b2"
            ]
        ]
    },
    {
        "id": "c58252a4cb097661",
        "type": "function",
        "z": "f3ec5d556e86f8d0",
        "name": "Construct SQL",
        "func": "var o = msg.payload;\nvar sql = \"INSERT INTO \\\"FIELD_CONFIG\\\"(EDGE_UUID, EDGE_NODE_ID) VALUES(\\\"\"+o.EDGE_UUID+\"\\\", \\\"\"+o.EDGE_NODE_ID+\"\\\") ON CONFLICT(EDGE_UUID) DO UPDATE SET EDGE_NODE_ID = excluded.EDGE_NODE_ID;\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 260,
        "wires": [
            [
                "4215a3196c228639"
            ]
        ]
    },
    {
        "id": "579c8c19ccab0937",
        "type": "inject",
        "z": "f3ec5d556e86f8d0",
        "name": "Drop Config Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "a74d42b7ae961652"
            ]
        ]
    },
    {
        "id": "a74d42b7ae961652",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "DROP TABLE IF EXISTS FIELD_CONFIG;",
        "name": "Drop Field Config Table",
        "x": 590,
        "y": 100,
        "wires": [
            [
                "cf58eb77138066b2"
            ]
        ]
    },
    {
        "id": "ac6ab4bb77d73dc4",
        "type": "function",
        "z": "f3ec5d556e86f8d0",
        "name": "Construct SQL",
        "func": "var o = msg.payload;\nvar sql = \"SELECT EDGE_NODE_ID, EDGE_UUID FROM FIELD_CONFIG WHERE EDGE_UUID='\" + o.uuid+ \"'\" ;\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 420,
        "wires": [
            [
                "f4b7c4c243db620d"
            ]
        ]
    },
    {
        "id": "0faf666bf00276e9",
        "type": "json",
        "z": "f3ec5d556e86f8d0",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 420,
        "wires": [
            [
                "ac6ab4bb77d73dc4"
            ]
        ]
    },
    {
        "id": "a3176cef58e51260",
        "type": "debug",
        "z": "f3ec5d556e86f8d0",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 540,
        "wires": []
    },
    {
        "id": "2bcc56e6d241c3d9",
        "type": "function",
        "z": "f3ec5d556e86f8d0",
        "name": "extract nodeid",
        "func": "\nvar nodeid = msg.payload[0].EDGE_NODE_ID;\nvar nodeuuid = msg.payload[0].EDGE_UUID;\nmsg.payload = nodeid;\nmsg.topic = \"nodered/initialization/\" + nodeuuid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 420,
        "wires": [
            [
                "feddd1768611c551",
                "a3176cef58e51260",
                "495420fab0112b70"
            ]
        ]
    },
    {
        "id": "feddd1768611c551",
        "type": "mqtt out",
        "z": "f3ec5d556e86f8d0",
        "name": "return node id",
        "topic": "nodered/initialization",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 1220,
        "y": 420,
        "wires": []
    },
    {
        "id": "495420fab0112b70",
        "type": "debug",
        "z": "f3ec5d556e86f8d0",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 600,
        "wires": []
    },
    {
        "id": "b111193564f5a7a0",
        "type": "comment",
        "z": "f3ec5d556e86f8d0",
        "name": "Initialize Edge Nodes ",
        "info": "Edge nodes report in when they come online with a UUID\nUUID is accessed from the DB, and returned as a Node ID (as defined by our field layout/diagram)\n\nSee Load Config File into Config Table flow for how to edit this\n\nEach Arduino needs a unique id written into eeprom using -> https://github.com/lanceriedel/burn-uuid-eeprom\n",
        "x": 200,
        "y": 360,
        "wires": []
    }
]