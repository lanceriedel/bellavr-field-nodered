[
    {
        "id": "3d42d3194c2552f8",
        "type": "tab",
        "label": "MQTT Output to Field",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8d38dc412a73d987",
        "type": "tab",
        "label": "MQTT Input From Field Game Flows",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0661e4588e011b72",
        "type": "tab",
        "label": "Game Logic Flows",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "dc5996c16196eba2",
        "type": "tab",
        "label": "Manual Game Flows",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7ebbc29c647c58ec",
        "type": "tab",
        "label": "Dashboard - Manual Game Flow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f74b301e4f22310f",
        "type": "tab",
        "label": "Game Data Access Flows",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8b4b6895c0ec29ec",
        "type": "tab",
        "label": "Storage Management",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f3ec5d556e86f8d0",
        "type": "tab",
        "label": "Field Config",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "829ad5255d8cf01f",
        "type": "tab",
        "label": "Dashboard - Field Config",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5999f1d09afe1039",
        "type": "mqtt-broker",
        "name": "mqtt-node-main",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6f6f2d0bf9d4b5e3",
        "type": "sqlitedb",
        "db": "/home/pi/sqlite-storage/sqlite",
        "mode": "RWC"
    },
    {
        "id": "24769b923875c2f1",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ffee29fff6f243e7",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "df6f4c796677e729",
        "type": "ui_group",
        "name": "Manual Game Controls",
        "tab": "24769b923875c2f1",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "efa02099cf2bc4a1",
        "type": "ui_group",
        "name": "Debug Screen",
        "tab": "24769b923875c2f1",
        "order": 2,
        "disp": true,
        "width": "17",
        "collapse": true,
        "className": ""
    },
    {
        "id": "abd82126ad566563",
        "type": "ui_spacer",
        "z": "7ebbc29c647c58ec",
        "name": "spacer",
        "group": "efa02099cf2bc4a1",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "8cc3fd17a6d665c5",
        "type": "ui_tab",
        "name": "Field Config",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a5991f3b10b51e7c",
        "type": "ui_group",
        "name": "Default",
        "tab": "8cc3fd17a6d665c5",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "675e506f8cc3e3c6",
        "type": "mqtt out",
        "z": "3d42d3194c2552f8",
        "name": "window-off-mqtt",
        "topic": "windowoff",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 790,
        "y": 160,
        "wires": []
    },
    {
        "id": "c11317ac5ddaf481",
        "type": "switch",
        "z": "3d42d3194c2552f8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 140,
        "wires": [
            [
                "2e5f3a887f317523"
            ],
            [
                "675e506f8cc3e3c6"
            ]
        ]
    },
    {
        "id": "4f1f03d9ace5b214",
        "type": "mqtt out",
        "z": "3d42d3194c2552f8",
        "name": "window-on-mqtt",
        "topic": "windowon",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 790,
        "y": 100,
        "wires": []
    },
    {
        "id": "456171329783d919",
        "type": "debug",
        "z": "3d42d3194c2552f8",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 420,
        "wires": []
    },
    {
        "id": "6a3261bd5d1634ff",
        "type": "inject",
        "z": "3d42d3194c2552f8",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "7956c7f15c937519"
            ]
        ]
    },
    {
        "id": "7956c7f15c937519",
        "type": "function",
        "z": "3d42d3194c2552f8",
        "name": "Create flip/flop",
        "func": "var count = context.get(\"counter\") || 0;\ncount = (count + 1) % 2;\ncontext.set(\"counter\", count);\nmsg.payload = count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "if (context.get(\"counter\") === undefined) {\n    context.set(\"counter\", 0)\n}",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 140,
        "wires": [
            [
                "c11317ac5ddaf481"
            ]
        ]
    },
    {
        "id": "2e5f3a887f317523",
        "type": "change",
        "z": "3d42d3194c2552f8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ONMORETIME",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 100,
        "wires": [
            [
                "4f1f03d9ace5b214"
            ]
        ]
    },
    {
        "id": "a983e99d613458db",
        "type": "comment",
        "z": "3d42d3194c2552f8",
        "name": "Heartbeat - sending 1/0 flip flop",
        "info": "",
        "x": 170,
        "y": 60,
        "wires": []
    },
    {
        "id": "1d8b42fd0952e51b",
        "type": "link in",
        "z": "3d42d3194c2552f8",
        "name": "Game Reset Message - MQTT Out",
        "links": [],
        "x": 65,
        "y": 420,
        "wires": [
            [
                "2c24dc53b6049b78"
            ]
        ]
    },
    {
        "id": "2c24dc53b6049b78",
        "type": "mqtt out",
        "z": "3d42d3194c2552f8",
        "name": "nodered/reset/match",
        "topic": "nodered/reset/match",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 290,
        "y": 420,
        "wires": []
    },
    {
        "id": "3a4f65d2f43899bf",
        "type": "link in",
        "z": "3d42d3194c2552f8",
        "name": "MQTT Send Firescore to Node",
        "links": [
            "3f00803b0fe3404d",
            "9225979b748b64fa",
            "530bf25ea8a65ce6"
        ],
        "x": 65,
        "y": 280,
        "wires": [
            [
                "5cacabc8f9cd5606"
            ]
        ]
    },
    {
        "id": "1e0fd409ba1a6b71",
        "type": "mqtt out",
        "z": "3d42d3194c2552f8",
        "name": "msg.topic = \"nodered/firescore/\"+nodeid;",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 660,
        "y": 280,
        "wires": []
    },
    {
        "id": "5cacabc8f9cd5606",
        "type": "json",
        "z": "3d42d3194c2552f8",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 190,
        "y": 280,
        "wires": [
            [
                "1e0fd409ba1a6b71"
            ]
        ]
    },
    {
        "id": "31536652b0e65c1c",
        "type": "comment",
        "z": "3d42d3194c2552f8",
        "name": "Publish Fire score to a Node",
        "info": "",
        "x": 160,
        "y": 220,
        "wires": []
    },
    {
        "id": "3327ecc679f21bed",
        "type": "comment",
        "z": "3d42d3194c2552f8",
        "name": "Publish New Match to All",
        "info": "",
        "x": 150,
        "y": 360,
        "wires": []
    },
    {
        "id": "6cddfd33ec05b6b7",
        "type": "mqtt in",
        "z": "8d38dc412a73d987",
        "name": "edgenode/laserhit/#",
        "topic": "edgenode/laserhit/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "5999f1d09afe1039",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 140,
        "wires": [
            [
                "515a805e2750f3bd",
                "372b9594ce982517"
            ]
        ]
    },
    {
        "id": "515a805e2750f3bd",
        "type": "link out",
        "z": "8d38dc412a73d987",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "af55cd6eb001ec61",
            "63f807f3f36abd11"
        ],
        "x": 415,
        "y": 140,
        "wires": []
    },
    {
        "id": "372b9594ce982517",
        "type": "debug",
        "z": "8d38dc412a73d987",
        "name": "MQTT Input From Field Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 280,
        "wires": []
    },
    {
        "id": "bfe3c6c9b8f1ea94",
        "type": "comment",
        "z": "8d38dc412a73d987",
        "name": "Game Field input messages over mqtt",
        "info": "",
        "x": 170,
        "y": 60,
        "wires": []
    },
    {
        "id": "dc294b3548567c18",
        "type": "comment",
        "z": "8d38dc412a73d987",
        "name": "NOTE: Config input from Field is handled in Field Config flows tab",
        "info": "",
        "x": 260,
        "y": 540,
        "wires": []
    },
    {
        "id": "5329a59e7e76c7c0",
        "type": "link in",
        "z": "0661e4588e011b72",
        "name": "Publish Latest Fire Score to Node",
        "links": [
            "9225979b748b64fa"
        ],
        "x": 125,
        "y": 120,
        "wires": [
            [
                "ed62e9e4477e7eed"
            ]
        ]
    },
    {
        "id": "ddad0b88779e31bf",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "Latest Match Table Dump",
        "func": "\nvar o = msg.payload;\nvar matchid = global.get(\"matchnum\");\nvar nodeid = o.node_id;\nvar newMsg = {\n    \"topic\": \"SELECT FIRE_SCORE FROM GAME_SCORES WHERE MATCH_NUM = \" + matchid + \" AND NODE_ID='\" + nodeid+\"';\",\n    \"nodeid\":nodeid\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 120,
        "wires": [
            [
                "3bf9e0f865abb5b8"
            ]
        ]
    },
    {
        "id": "3bf9e0f865abb5b8",
        "type": "sqlite",
        "z": "0661e4588e011b72",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 730,
        "y": 120,
        "wires": [
            [
                "e84e140d4b501f18"
            ]
        ]
    },
    {
        "id": "ed62e9e4477e7eed",
        "type": "json",
        "z": "0661e4588e011b72",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 230,
        "y": 120,
        "wires": [
            [
                "ddad0b88779e31bf"
            ]
        ]
    },
    {
        "id": "d150d876ca04a688",
        "type": "debug",
        "z": "0661e4588e011b72",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 120,
        "wires": []
    },
    {
        "id": "e84e140d4b501f18",
        "type": "function",
        "z": "0661e4588e011b72",
        "name": "function 2",
        "func": "var o = msg.payload\nvar firescore = o[0].FIRE_SCORE;\nvar nodeid = msg.nodeid;\nvar t = \"{ \\\"nodeid\\\": \\\"\" + nodeid + \"\\\", \\\"firescore\\\": \" + firescore + \", \\\"timestamp\\\": \" + 1000 + \"}\";\nmsg.payload = t;\n//nodered/firescore/[node id]\nmsg.topic = \"nodered/firescore/\" + nodeid;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 120,
        "wires": [
            [
                "d150d876ca04a688",
                "530bf25ea8a65ce6"
            ]
        ]
    },
    {
        "id": "530bf25ea8a65ce6",
        "type": "link out",
        "z": "0661e4588e011b72",
        "name": "link out 35",
        "mode": "link",
        "links": [
            "3a4f65d2f43899bf"
        ],
        "x": 1045,
        "y": 180,
        "wires": []
    },
    {
        "id": "f4c1c11a188f5c23",
        "type": "inject",
        "z": "dc5996c16196eba2",
        "name": "Increment Fire Score +1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodeid\":\"LTO\",\"firescore\":1,\"timestamp\":1000000}",
        "payloadType": "json",
        "x": 180,
        "y": 600,
        "wires": [
            [
                "5eca71e17e525b35"
            ]
        ]
    },
    {
        "id": "5eca71e17e525b35",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "21d3a1c330d6a65e",
            "b49a77ff09745d6d",
            "af55cd6eb001ec61",
            "63f807f3f36abd11"
        ],
        "x": 375,
        "y": 600,
        "wires": []
    },
    {
        "id": "bcef7098b2bcab87",
        "type": "inject",
        "z": "dc5996c16196eba2",
        "name": "New Match",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "4eb277af36ef1fe2"
            ]
        ]
    },
    {
        "id": "4eb277af36ef1fe2",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "a5a1bd31c468f86b"
        ],
        "x": 285,
        "y": 160,
        "wires": []
    },
    {
        "id": "e68d02821b10c9fd",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "48af91ab4809047a"
        ],
        "x": 915,
        "y": 160,
        "wires": []
    },
    {
        "id": "c2285509eb863856",
        "type": "inject",
        "z": "dc5996c16196eba2",
        "name": "Current Global.Matchnum",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "matchnum",
        "payloadType": "global",
        "x": 190,
        "y": 340,
        "wires": [
            [
                "e7fdc24bcd360c08"
            ]
        ]
    },
    {
        "id": "e7fdc24bcd360c08",
        "type": "debug",
        "z": "dc5996c16196eba2",
        "name": "Debug Manual Game Flows",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 520,
        "wires": []
    },
    {
        "id": "372c7a6bec7d1005",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Game Control Flows that can be triggered manually",
        "info": "",
        "x": 250,
        "y": 40,
        "wires": []
    },
    {
        "id": "58e0133d504974b2",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Start a new match ",
        "info": "Creates a new match in the Game table\nSets the global matchnum for all flows to use",
        "x": 150,
        "y": 120,
        "wires": []
    },
    {
        "id": "5eef5dc3824c88f6",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Dump to Debug the Current match num",
        "info": "",
        "x": 210,
        "y": 300,
        "wires": []
    },
    {
        "id": "63b6bb6097222b63",
        "type": "inject",
        "z": "dc5996c16196eba2",
        "name": "Dump to Debug Latest Match",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 440,
        "wires": [
            [
                "c30231dee65db09d"
            ]
        ]
    },
    {
        "id": "c30231dee65db09d",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "18a554bcaa2360e7"
        ],
        "x": 425,
        "y": 440,
        "wires": []
    },
    {
        "id": "1f2c1fa133c6065f",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Dump to Debug the Current match num",
        "info": "",
        "x": 210,
        "y": 400,
        "wires": []
    },
    {
        "id": "ed83cb16654dd159",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "Increment Scores for latest Match ",
        "info": "",
        "x": 200,
        "y": 540,
        "wires": []
    },
    {
        "id": "5017a08295e5843b",
        "type": "inject",
        "z": "dc5996c16196eba2",
        "name": "Increment Lase Hit Score +1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodeid\":\"LTO\",\"hits\":1,\"timestamp\":1000000}",
        "payloadType": "json",
        "x": 200,
        "y": 660,
        "wires": [
            [
                "64800c16d9ae1ca4"
            ]
        ]
    },
    {
        "id": "64800c16d9ae1ca4",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 11",
        "mode": "link",
        "links": [
            "af55cd6eb001ec61",
            "63f807f3f36abd11"
        ],
        "x": 375,
        "y": 660,
        "wires": []
    },
    {
        "id": "3f00803b0fe3404d",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "3a4f65d2f43899bf"
        ],
        "x": 915,
        "y": 240,
        "wires": []
    },
    {
        "id": "5a0caa59c0804229",
        "type": "link in",
        "z": "dc5996c16196eba2",
        "name": "Callback Finished New Match DB",
        "links": [
            "7d1c946cf1d71468"
        ],
        "x": 465,
        "y": 160,
        "wires": [
            [
                "cf8c03fdd1d44ae3"
            ]
        ]
    },
    {
        "id": "cf8c03fdd1d44ae3",
        "type": "change",
        "z": "dc5996c16196eba2",
        "name": "Set Debug Complete New Match",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Call Back Complete for New Match",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 160,
        "wires": [
            [
                "e68d02821b10c9fd",
                "e7fdc24bcd360c08"
            ]
        ]
    },
    {
        "id": "5f48dcd9ce58c49a",
        "type": "comment",
        "z": "dc5996c16196eba2",
        "name": "New Match Call backs to set global.matchnum and notify field",
        "info": "Creates a new match in the Game table\nSets the global matchnum for all flows to use",
        "x": 660,
        "y": 120,
        "wires": []
    },
    {
        "id": "9d2b1fca46f9be8c",
        "type": "link in",
        "z": "dc5996c16196eba2",
        "name": "Callback Finished Set global.matchnum",
        "links": [
            "50a7d4620d30956a"
        ],
        "x": 465,
        "y": 240,
        "wires": [
            [
                "32cd111d9a2a3113"
            ]
        ]
    },
    {
        "id": "32cd111d9a2a3113",
        "type": "change",
        "z": "dc5996c16196eba2",
        "name": "Set Notify Field",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 240,
        "wires": [
            [
                "3f00803b0fe3404d",
                "e7fdc24bcd360c08",
                "21363eb3f939b961"
            ]
        ]
    },
    {
        "id": "21363eb3f939b961",
        "type": "link out",
        "z": "dc5996c16196eba2",
        "name": "link out 17",
        "mode": "link",
        "links": [
            "4c16c39c21c351b0"
        ],
        "x": 915,
        "y": 280,
        "wires": []
    },
    {
        "id": "b199686f052fe77f",
        "type": "comment",
        "z": "7ebbc29c647c58ec",
        "name": "Publish Firescore To Specific Node -- this is on the Dashboard ",
        "info": "",
        "x": 280,
        "y": 240,
        "wires": []
    },
    {
        "id": "f1896d48a659a2cb",
        "type": "ui_form",
        "z": "7ebbc29c647c58ec",
        "name": "UpdateFireScore",
        "label": "Update Firescore to Node (Node ID = RBO, LBO, etc)",
        "group": "df6f4c796677e729",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Node ID",
                "value": "node_id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Fire Score",
                "value": "fire_score",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "node_id": "",
            "fire_score": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "payload",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "a29505e70d7b9ece"
            ]
        ]
    },
    {
        "id": "c870ec8282153101",
        "type": "ui_text",
        "z": "7ebbc29c647c58ec",
        "group": "efa02099cf2bc4a1",
        "order": 1,
        "width": "6",
        "height": "5",
        "name": "FullRecordGame",
        "label": "Debug ",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 870,
        "y": 240,
        "wires": []
    },
    {
        "id": "a29505e70d7b9ece",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 22",
        "mode": "link",
        "links": [
            "c5098de218c47d8f"
        ],
        "x": 385,
        "y": 280,
        "wires": []
    },
    {
        "id": "70c33d06c1d6b167",
        "type": "ui_button",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "group": "df6f4c796677e729",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "View Latest Match",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 200,
        "wires": [
            [
                "277d12403d6f9f63"
            ]
        ]
    },
    {
        "id": "28eb2bc55dcddb70",
        "type": "link in",
        "z": "7ebbc29c647c58ec",
        "name": "Dashboard Full Dump",
        "links": [
            "fa60c2b1c4bd6432"
        ],
        "x": 695,
        "y": 240,
        "wires": [
            [
                "c870ec8282153101"
            ]
        ]
    },
    {
        "id": "277d12403d6f9f63",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 23",
        "mode": "link",
        "links": [
            "18a554bcaa2360e7"
        ],
        "x": 335,
        "y": 200,
        "wires": []
    },
    {
        "id": "8c392ecc9a35c3eb",
        "type": "ui_form",
        "z": "7ebbc29c647c58ec",
        "name": "Increment Laser Hit",
        "label": "Increment Laser Hit",
        "group": "df6f4c796677e729",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Node ID",
                "value": "node_id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "node_id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "payload",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "628745f67dade8c1"
            ]
        ]
    },
    {
        "id": "a9c50f46b67e9896",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 24",
        "mode": "link",
        "links": [
            "63f807f3f36abd11",
            "af55cd6eb001ec61"
        ],
        "x": 675,
        "y": 420,
        "wires": []
    },
    {
        "id": "628745f67dade8c1",
        "type": "json",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 420,
        "wires": [
            [
                "a17a899f16b9d084"
            ]
        ]
    },
    {
        "id": "a17a899f16b9d084",
        "type": "function",
        "z": "7ebbc29c647c58ec",
        "name": "add numhits 1",
        "func": "var o = msg.payload;\no['num_hits'] = 1;\nmsg.payload = o;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 420,
        "wires": [
            [
                "a9c50f46b67e9896",
                "84a25c5ebff798fb"
            ]
        ]
    },
    {
        "id": "d12eb5d4f1efff54",
        "type": "ui_form",
        "z": "7ebbc29c647c58ec",
        "name": "Increment Ball Drop",
        "label": "Increment Ball Drop Hit",
        "group": "df6f4c796677e729",
        "order": 6,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Node ID",
                "value": "node_id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "node_id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "payload",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 160,
        "y": 500,
        "wires": [
            [
                "04f926d3d2ee0cd5"
            ]
        ]
    },
    {
        "id": "75c5f224f591b111",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 25",
        "mode": "link",
        "links": [
            "63f807f3f36abd11"
        ],
        "x": 675,
        "y": 500,
        "wires": []
    },
    {
        "id": "04f926d3d2ee0cd5",
        "type": "json",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 500,
        "wires": [
            [
                "ec3ec501f79d3d62"
            ]
        ]
    },
    {
        "id": "ec3ec501f79d3d62",
        "type": "function",
        "z": "7ebbc29c647c58ec",
        "name": "add drops 1",
        "func": "var o = msg.payload;\no['drops'] = 1;\nmsg.payload = o;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 500,
        "wires": [
            [
                "75c5f224f591b111",
                "84a25c5ebff798fb"
            ]
        ]
    },
    {
        "id": "11e4b52900aedf18",
        "type": "ui_form",
        "z": "7ebbc29c647c58ec",
        "name": "Increment Fire Score",
        "label": "Increment Fire Score",
        "group": "df6f4c796677e729",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Node ID",
                "value": "node_id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "node_id": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "payload",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 160,
        "y": 340,
        "wires": [
            [
                "e2b1eeb7b8ba3724"
            ]
        ]
    },
    {
        "id": "37c9658f21fde304",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 26",
        "mode": "link",
        "links": [
            "63f807f3f36abd11",
            "b49a77ff09745d6d"
        ],
        "x": 675,
        "y": 340,
        "wires": []
    },
    {
        "id": "e2b1eeb7b8ba3724",
        "type": "json",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 340,
        "wires": [
            [
                "445fcf6390a71317"
            ]
        ]
    },
    {
        "id": "445fcf6390a71317",
        "type": "function",
        "z": "7ebbc29c647c58ec",
        "name": "add firescore 1",
        "func": "var o = msg.payload;\no['fire_score'] = 1;\nmsg.payload = o;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 340,
        "wires": [
            [
                "37c9658f21fde304",
                "84a25c5ebff798fb",
                "cc9c7da6d3ec6e77"
            ]
        ]
    },
    {
        "id": "2cf306418f5ec1a7",
        "type": "ui_button",
        "z": "7ebbc29c647c58ec",
        "name": "StartNewMatch",
        "group": "df6f4c796677e729",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Start New Match",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "6243bfa8703f32ca"
            ]
        ]
    },
    {
        "id": "6243bfa8703f32ca",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 27",
        "mode": "link",
        "links": [
            "a5a1bd31c468f86b"
        ],
        "x": 335,
        "y": 140,
        "wires": []
    },
    {
        "id": "8f1d410dda1e4f81",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 32",
        "mode": "link",
        "links": [
            "18a554bcaa2360e7"
        ],
        "x": 935,
        "y": 400,
        "wires": []
    },
    {
        "id": "84a25c5ebff798fb",
        "type": "delay",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 800,
        "y": 400,
        "wires": [
            [
                "8f1d410dda1e4f81",
                "1fba5de08a2e1d6f"
            ]
        ]
    },
    {
        "id": "71a84d7f0e04039b",
        "type": "ui_ui_control",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "events": "change",
        "x": 1040,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "1fba5de08a2e1d6f",
        "type": "delay",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 800,
        "y": 460,
        "wires": [
            [
                "28b06e0ed349f7f2"
            ]
        ]
    },
    {
        "id": "28b06e0ed349f7f2",
        "type": "change",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 520,
        "wires": [
            [
                "71a84d7f0e04039b"
            ]
        ]
    },
    {
        "id": "cc9c7da6d3ec6e77",
        "type": "delay",
        "z": "7ebbc29c647c58ec",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 800,
        "y": 300,
        "wires": [
            [
                "9225979b748b64fa",
                "25c048ee2a191abb"
            ]
        ]
    },
    {
        "id": "9225979b748b64fa",
        "type": "link out",
        "z": "7ebbc29c647c58ec",
        "name": "link out 34",
        "mode": "link",
        "links": [
            "3a4f65d2f43899bf",
            "5329a59e7e76c7c0"
        ],
        "x": 945,
        "y": 300,
        "wires": []
    },
    {
        "id": "25c048ee2a191abb",
        "type": "debug",
        "z": "7ebbc29c647c58ec",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 340,
        "wires": []
    },
    {
        "id": "0143496e1011b5b9",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Update Fire Score (ADD)",
        "func": "var matchid = global.get(\"matchnum\");\nvar o = msg.payload;\nvar fs = o.fire_score;\nvar nodeid = o.node_id;\nvar newMsg = {\n    \"topic\": \"UPDATE GAME_SCORES SET FIRE_SCORE = FIRE_SCORE + \" + fs + \" WHERE MATCH_NUM = \" + matchid + \" AND NODE_ID='\" + nodeid+ \"';\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 160,
        "wires": [
            [
                "3a4b12e5b9609b0d",
                "54b2cad8c9c66ea5"
            ]
        ]
    },
    {
        "id": "3a4b12e5b9609b0d",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "43ddc5a441c4fd3f"
        ],
        "x": 915,
        "y": 160,
        "wires": []
    },
    {
        "id": "07b0e9426f57711a",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Increment/Set Fire Score for latest match",
        "info": "",
        "x": 200,
        "y": 120,
        "wires": []
    },
    {
        "id": "a4fbec13a30337cd",
        "type": "json",
        "z": "f74b301e4f22310f",
        "name": "Parse Incoming",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 420,
        "y": 160,
        "wires": [
            [
                "0143496e1011b5b9"
            ]
        ]
    },
    {
        "id": "b49a77ff09745d6d",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Increment Firescore",
        "links": [
            "5eca71e17e525b35",
            "6c398839cd14285d",
            "37c9658f21fde304"
        ],
        "x": 205,
        "y": 160,
        "wires": [
            [
                "a4fbec13a30337cd"
            ]
        ]
    },
    {
        "id": "be446f7474a7a970",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - New Match",
        "func": "\nvar timestamp = msg.payload;\nvar newMsg = {\n    \"topic\": \"INSERT INTO MATCH_STATE (TIMEOFMATCH) VALUES (  \"+ timestamp + \");\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 600,
        "wires": [
            [
                "54b2cad8c9c66ea5",
                "2df386bd76ec52e3"
            ]
        ]
    },
    {
        "id": "54b2cad8c9c66ea5",
        "type": "debug",
        "z": "f74b301e4f22310f",
        "name": "Game Storage Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 360,
        "wires": []
    },
    {
        "id": "a5a1bd31c468f86b",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "New Match Creation",
        "links": [
            "4eb277af36ef1fe2",
            "6243bfa8703f32ca"
        ],
        "x": 185,
        "y": 600,
        "wires": [
            [
                "72bcba239803d115"
            ]
        ]
    },
    {
        "id": "2a673ebfd70ddc64",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Create a new empty match (set global.matchnum to new matchnum)",
        "info": "",
        "x": 280,
        "y": 540,
        "wires": []
    },
    {
        "id": "540954cda7540f43",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "Select All Game Table",
        "func": "var newMsg = {\n    \"topic\": \"select * from MATCH_STATE ORDER BY TIMEOFMATCH DESC;\"\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 760,
        "wires": [
            [
                "27094e97daa3234a"
            ]
        ]
    },
    {
        "id": "27094e97daa3234a",
        "type": "sqlite",
        "z": "f74b301e4f22310f",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 530,
        "y": 760,
        "wires": [
            [
                "786da311f9d1e2af"
            ]
        ]
    },
    {
        "id": "786da311f9d1e2af",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "Result match_num",
        "func": "var matchid = msg.payload[0].MATCH_NUM;\nmsg.payload = matchid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 760,
        "wires": [
            [
                "a4cca78582b0aa97"
            ]
        ]
    },
    {
        "id": "a4cca78582b0aa97",
        "type": "change",
        "z": "f74b301e4f22310f",
        "name": "set global",
        "rules": [
            {
                "t": "set",
                "p": "matchnum",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 760,
        "wires": [
            [
                "50a7d4620d30956a"
            ]
        ]
    },
    {
        "id": "48af91ab4809047a",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Set Latest Matchnum to Global",
        "links": [
            "e68d02821b10c9fd"
        ],
        "x": 105,
        "y": 760,
        "wires": [
            [
                "540954cda7540f43"
            ]
        ]
    },
    {
        "id": "553a13c0223b7873",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Sets Global.matchnum to latest match in DB",
        "info": "",
        "x": 210,
        "y": 700,
        "wires": []
    },
    {
        "id": "4bfad19cc46d0966",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "Latest Match Table Dump",
        "func": "\n\nvar matchid = global.get(\"matchnum\");\nvar newMsg = {\n    \"topic\": \"SELECT * FROM GAME_SCORES WHERE MATCH_NUM = \" + matchid + \";\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 980,
        "wires": [
            [
                "397f10dd3ab3a997"
            ]
        ]
    },
    {
        "id": "5954b430a79f7b3e",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "Result Dump",
        "func": "//CREATE TABLE GAMETEST(MATCH_NUM INTEGER PRIMARY KEY AUTOINCREMENT, BUILDING_ID VARCHAR(32), FIRE_SCORE INT NOT NULL, NUM_TREES INT NOT NULL, TIMEOFMATCH INT NOT NULL);  \n\n\n//var str = \"match: \" + msg.payload[0].MATCH_NUM + \" trees:\" + msg.payload[0].NUM_TREES + \" FIRE:\" + msg.payload[0].FIRE_SCORE + \" LASER HITS:\" + msg.payload[0].NUM_HITS;\n//msg.payload = str;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 980,
        "wires": [
            [
                "54b2cad8c9c66ea5",
                "fa60c2b1c4bd6432"
            ]
        ]
    },
    {
        "id": "397f10dd3ab3a997",
        "type": "sqlite",
        "z": "f74b301e4f22310f",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 570,
        "y": 980,
        "wires": [
            [
                "5954b430a79f7b3e",
                "4d6a7eeb34e791e7"
            ]
        ]
    },
    {
        "id": "953a1664303952cf",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Data Access Flows for the Game Storage",
        "info": "Flows that access the DB and upddate and or read various game states\nThese can be accessed via Manual Game Flows and/or nodered flows which are triggered via mqtt",
        "x": 220,
        "y": 40,
        "wires": []
    },
    {
        "id": "18a554bcaa2360e7",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Dump to Debug Latest Match",
        "links": [
            "c30231dee65db09d",
            "d9bb129180d8b9cf",
            "277d12403d6f9f63",
            "8f1d410dda1e4f81"
        ],
        "x": 105,
        "y": 980,
        "wires": [
            [
                "4bfad19cc46d0966"
            ]
        ]
    },
    {
        "id": "761720674f178020",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Dump to Debug the latest match data",
        "info": "",
        "x": 190,
        "y": 920,
        "wires": []
    },
    {
        "id": "ee723854cfa1c6f1",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Update Laser Hit (ADD)",
        "func": "var matchid = global.get(\"matchnum\");\nvar o = msg.payload;\nvar hits = o.num_hits;\nvar nodeid = o.node_id;\nvar newMsg = {\n    \"topic\": \"UPDATE GAME_SCORES SET NUM_HITS = NUM_HITS + \" + hits + \" WHERE MATCH_NUM = \" + matchid + \" AND NODE_ID='\" + nodeid + \"';\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 300,
        "wires": [
            [
                "d527904ed8723b40",
                "54b2cad8c9c66ea5"
            ]
        ]
    },
    {
        "id": "ad8d8a3973c7761a",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Increment/Set Laser Hit for latest match",
        "info": "",
        "x": 190,
        "y": 260,
        "wires": []
    },
    {
        "id": "473384a40d04fd99",
        "type": "json",
        "z": "f74b301e4f22310f",
        "name": "Parse Incoming",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 420,
        "y": 300,
        "wires": [
            [
                "ee723854cfa1c6f1",
                "54b2cad8c9c66ea5"
            ]
        ]
    },
    {
        "id": "af55cd6eb001ec61",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Increment Laser Hit",
        "links": [
            "515a805e2750f3bd",
            "5eca71e17e525b35",
            "64800c16d9ae1ca4",
            "dd142b5915f31846",
            "a9c50f46b67e9896"
        ],
        "x": 205,
        "y": 300,
        "wires": [
            [
                "473384a40d04fd99"
            ]
        ]
    },
    {
        "id": "d527904ed8723b40",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "43ddc5a441c4fd3f"
        ],
        "x": 915,
        "y": 300,
        "wires": []
    },
    {
        "id": "7d1c946cf1d71468",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "New Match DB Entry Complete",
        "mode": "link",
        "links": [
            "5a0caa59c0804229"
        ],
        "x": 945,
        "y": 600,
        "wires": []
    },
    {
        "id": "50a7d4620d30956a",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "New Match DB Entry Complete",
        "mode": "link",
        "links": [
            "9d2b1fca46f9be8c"
        ],
        "x": 1025,
        "y": 760,
        "wires": []
    },
    {
        "id": "594538fb122fa8a1",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Update Laser Hit (SET)",
        "func": "var matchid = global.get(\"matchnum\");\nvar o = msg.payload;\nvar hits = o.num_hits;\nvar nodeid = o.node_id;\nvar newMsg = {\n    \"topic\": \"UPDATE GAME_SCORES SET NUM_HITS = \" + hits + \" WHERE MATCH_NUM = \" + matchid + \" AND NODE_ID='\" + nodeid + \"';\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 340,
        "wires": [
            [
                "d527904ed8723b40",
                "54b2cad8c9c66ea5"
            ]
        ]
    },
    {
        "id": "2e8cd63f45daf40d",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Set Laser Hit",
        "links": [],
        "x": 205,
        "y": 340,
        "wires": [
            [
                "221e289248744137"
            ]
        ]
    },
    {
        "id": "221e289248744137",
        "type": "json",
        "z": "f74b301e4f22310f",
        "name": "Parse Incoming",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 420,
        "y": 340,
        "wires": [
            [
                "594538fb122fa8a1"
            ]
        ]
    },
    {
        "id": "9a98401250929d20",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Update Fire Score (SET)",
        "func": "var matchid = global.get(\"matchnum\");\nvar o = msg.payload;\nvar fs = o.fire_score;\nvar nodeid = o.node_id;\nvar newMsg = {\n    \"topic\": \"UPDATE GAME_SCORES SET FIRE_SCORE = \" + fs + \" WHERE MATCH_NUM = \" + matchid + \" AND NODE_ID='\" + nodeid + \"';\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 200,
        "wires": [
            [
                "3a4b12e5b9609b0d",
                "54b2cad8c9c66ea5"
            ]
        ]
    },
    {
        "id": "7046ccf0cab73df5",
        "type": "json",
        "z": "f74b301e4f22310f",
        "name": "Parse Incoming",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 420,
        "y": 200,
        "wires": [
            [
                "9a98401250929d20",
                "54b2cad8c9c66ea5"
            ]
        ]
    },
    {
        "id": "c5098de218c47d8f",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Set Firescore",
        "links": [
            "a2bcb79fedaca272",
            "a29505e70d7b9ece"
        ],
        "x": 205,
        "y": 200,
        "wires": [
            [
                "7046ccf0cab73df5"
            ]
        ]
    },
    {
        "id": "fa60c2b1c4bd6432",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "link out 15",
        "mode": "link",
        "links": [
            "c5b51aa2f4863b48",
            "28eb2bc55dcddb70"
        ],
        "x": 945,
        "y": 980,
        "wires": []
    },
    {
        "id": "4d6a7eeb34e791e7",
        "type": "debug",
        "z": "f74b301e4f22310f",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 920,
        "wires": []
    },
    {
        "id": "2df386bd76ec52e3",
        "type": "sqlite",
        "z": "f74b301e4f22310f",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Match Create",
        "x": 740,
        "y": 600,
        "wires": [
            [
                "7d1c946cf1d71468"
            ]
        ]
    },
    {
        "id": "4c16c39c21c351b0",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Create Empty Game Records",
        "links": [
            "21363eb3f939b961"
        ],
        "x": 105,
        "y": 840,
        "wires": [
            [
                "fc55610d6c9105b3"
            ]
        ]
    },
    {
        "id": "fc55610d6c9105b3",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - New Game_score entries for new Match",
        "func": "\nvar timestamp = 100000;\nvar matchnum = global.get(\"matchnum\");\n/*\n MATCH_NUM INT NOT NULL,\n  NODE_ID VARCHAR[32],\n  BALLS_DROPPED INT NOT NULL,\n  FIRE_SCORE INT NOT NULL,\n  NUM_TREES INT NOT NULL,\n  NUM_HITS INT NOT NULL,\n  TIMEOFMATCH INT NOT NULL,\n  PRIMARY KEY (MATCH_NUM, NODE_ID)\n  */\nvar newMsg = {\n    \"topic\": \"\\\n    INSERT INTO GAME_SCORES (MATCH_NUM,\tNODE_ID, FIRE_SCORE, NUM_TREES, NUM_HITS, NUM_DROPS, TIMEOFMATCH) VALUES(\"+matchnum+\",'LTO', 0,0,0,0, \"+ timestamp + \"); \\\n    INSERT INTO GAME_SCORES (MATCH_NUM, NODE_ID, FIRE_SCORE, NUM_TREES, NUM_HITS, NUM_DROPS, TIMEOFMATCH) VALUES(\"+ matchnum +\",'LTM', 0,0,0,0, \"+ timestamp + \"); \\\n    INSERT INTO GAME_SCORES (MATCH_NUM, NODE_ID, FIRE_SCORE, NUM_TREES, NUM_HITS, NUM_DROPS, TIMEOFMATCH) VALUES(\"+ matchnum +\",'LTI', 0,0,0,0, \"+ timestamp + \"); \\\n    INSERT INTO GAME_SCORES (MATCH_NUM, NODE_ID, FIRE_SCORE, NUM_TREES, NUM_HITS, NUM_DROPS, TIMEOFMATCH) VALUES(\"+ matchnum +\",'RTO', 0,0,0,0, \"+ timestamp + \"); \\\n    INSERT INTO GAME_SCORES (MATCH_NUM, NODE_ID, FIRE_SCORE, NUM_TREES, NUM_HITS, NUM_DROPS, TIMEOFMATCH) VALUES(\"+ matchnum +\",'RTM', 0,0,0,0, \"+ timestamp + \"); \\\n    INSERT INTO GAME_SCORES (MATCH_NUM, NODE_ID, FIRE_SCORE, NUM_TREES, NUM_HITS, NUM_DROPS, TIMEOFMATCH) VALUES(\"+ matchnum +\",'RTI', 0,0,0,0, \"+ timestamp + \"); \\\n    INSERT INTO GAME_SCORES (MATCH_NUM, NODE_ID, FIRE_SCORE, NUM_TREES, NUM_HITS, NUM_DROPS, TIMEOFMATCH) VALUES(\"+ matchnum +\",'LBO', 0,0,0,0, \"+ timestamp + \"); \\\n    INSERT INTO GAME_SCORES (MATCH_NUM, NODE_ID, FIRE_SCORE, NUM_TREES, NUM_HITS, NUM_DROPS, TIMEOFMATCH) VALUES(\"+ matchnum +\",'LBM', 0,0,0,0, \"+ timestamp + \"); \\\n    INSERT INTO GAME_SCORES (MATCH_NUM, NODE_ID, FIRE_SCORE, NUM_TREES, NUM_HITS, NUM_DROPS, TIMEOFMATCH) VALUES(\"+ matchnum +\",'LBI', 0,0,0,0, \"+ timestamp + \"); \\\n    INSERT INTO GAME_SCORES (MATCH_NUM, NODE_ID, FIRE_SCORE, NUM_TREES, NUM_HITS, NUM_DROPS, TIMEOFMATCH) VALUES(\"+ matchnum +\",'RBO', 0,0,0,0, \"+ timestamp + \"); \\\n    INSERT INTO GAME_SCORES (MATCH_NUM, NODE_ID, FIRE_SCORE, NUM_TREES, NUM_HITS, NUM_DROPS, TIMEOFMATCH) VALUES(\"+ matchnum +\",'RBM', 0,0,0,0, \"+ timestamp + \"); \\\n    INSERT INTO GAME_SCORES (MATCH_NUM, NODE_ID, FIRE_SCORE, NUM_TREES, NUM_HITS, NUM_DROPS, TIMEOFMATCH) VALUES(\"+ matchnum +\",'RBI', 0,0,0,0, \"+ timestamp + \"); \\\n\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 840,
        "wires": [
            [
                "12b7849527a8f3d3",
                "4d6a7eeb34e791e7"
            ]
        ]
    },
    {
        "id": "12b7849527a8f3d3",
        "type": "sqlite",
        "z": "f74b301e4f22310f",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "batch",
        "sql": "",
        "name": "Game Node Records for Match Create",
        "x": 770,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "2ce44170d41d852c",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Update Laser Hit (ADD)",
        "func": "var matchid = global.get(\"matchnum\");\nvar o = msg.payload;\nvar num_drops = o.drops;\nvar nodeid = o.node_id;\nvar newMsg = {\n    \"topic\": \"UPDATE GAME_SCORES SET NUM_DROPS = NUM_DROPS + \" + num_drops + \" WHERE MATCH_NUM = \" + matchid + \" AND NODE_ID='\" + nodeid + \"';\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 420,
        "wires": [
            [
                "91eeec4cfa6d85ca"
            ]
        ]
    },
    {
        "id": "9e904570325a5f04",
        "type": "comment",
        "z": "f74b301e4f22310f",
        "name": "Increment/Set Ball Drop for latest match",
        "info": "",
        "x": 200,
        "y": 380,
        "wires": []
    },
    {
        "id": "0cb41cd8c25bd380",
        "type": "json",
        "z": "f74b301e4f22310f",
        "name": "Parse Incoming",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 420,
        "y": 420,
        "wires": [
            [
                "2ce44170d41d852c"
            ]
        ]
    },
    {
        "id": "63f807f3f36abd11",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Increment Ball Drop",
        "links": [
            "2e9480f054445e4b",
            "515a805e2750f3bd",
            "5eca71e17e525b35",
            "64800c16d9ae1ca4",
            "6c398839cd14285d",
            "dd142b5915f31846",
            "a9c50f46b67e9896",
            "75c5f224f591b111",
            "37c9658f21fde304"
        ],
        "x": 205,
        "y": 420,
        "wires": [
            [
                "0cb41cd8c25bd380"
            ]
        ]
    },
    {
        "id": "91eeec4cfa6d85ca",
        "type": "link out",
        "z": "f74b301e4f22310f",
        "name": "link out 20",
        "mode": "link",
        "links": [
            "43ddc5a441c4fd3f"
        ],
        "x": 915,
        "y": 420,
        "wires": []
    },
    {
        "id": "4d52cd46f08add7f",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "SQL - Update Laser Hit (SET)",
        "func": "var matchid = global.get(\"matchnum\");\nvar o = msg.payload;\nvar num_drops = o.drops;\nvar nodeid = o.node_id;\nvar newMsg = {\n    \"topic\": \"UPDATE GAME_SCORES SET NUM_DROPS = \" + num_drops + \" WHERE MATCH_NUM = \" + matchid + \" AND NODE_ID='\" + nodeid + \"';\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 460,
        "wires": [
            [
                "91eeec4cfa6d85ca"
            ]
        ]
    },
    {
        "id": "1fe8b5ccb6bce22f",
        "type": "link in",
        "z": "f74b301e4f22310f",
        "name": "Set Ball Drop Count",
        "links": [],
        "x": 205,
        "y": 460,
        "wires": [
            [
                "2f1658364fc5719b"
            ]
        ]
    },
    {
        "id": "2f1658364fc5719b",
        "type": "json",
        "z": "f74b301e4f22310f",
        "name": "Parse Incoming",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 420,
        "y": 460,
        "wires": [
            [
                "4d52cd46f08add7f"
            ]
        ]
    },
    {
        "id": "72bcba239803d115",
        "type": "function",
        "z": "f74b301e4f22310f",
        "name": "function 1",
        "func": "var d = new Date();\nvar time1 = d.getTime();\nmsg.payload = time1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 600,
        "wires": [
            [
                "be446f7474a7a970"
            ]
        ]
    },
    {
        "id": "890050b7a3592bf1",
        "type": "inject",
        "z": "8b4b6895c0ec29ec",
        "name": "Create Game Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "6b73945a30a3b156"
            ]
        ]
    },
    {
        "id": "6b73945a30a3b156",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE MATCH_STATE(\nMATCH_NUM INTEGER PRIMARY KEY AUTOINCREMENT,\nTIMEOFMATCH INT NOT NULL);  \n",
        "name": "Create Match Table",
        "x": 550,
        "y": 140,
        "wires": [
            [
                "544ae34808a17523",
                "1c0c1219794c876a"
            ]
        ]
    },
    {
        "id": "323e92765149313d",
        "type": "inject",
        "z": "8b4b6895c0ec29ec",
        "name": "INSERT New Match  with Random Game Event",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 380,
        "wires": [
            [
                "deb6a8cb5bd78b0e"
            ]
        ]
    },
    {
        "id": "d7e91528f5c8f1d6",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 330,
        "y": 540,
        "wires": [
            [
                "f406a76e56b92d05"
            ]
        ]
    },
    {
        "id": "deb6a8cb5bd78b0e",
        "type": "function",
        "z": "8b4b6895c0ec29ec",
        "name": "Create Sql Random Game Event",
        "func": "//CREATE TABLE GAMETEST(TIMESTAMP INT PRIMARY KEY NOT NULL, MATCH_NUM INT NOT NULL, BUILDING_ID VARCHAR(32), FIRE_SCORE INT NOT NULL, NUM_TREES INT NOT NULL);  )\n\nvar fireScore = Math.round(Math.random() * 10);\nvar numTrees = Math.round(Math.random() * 10);\nvar numHits = Math.round(Math.random() * 10);\n\nvar buildingId = \"LM1\";\n//could read last match num and send to this? or enter\nvar timestamp = msg.payload;\nvar newMsg = {\n    \"topic\": \"INSERT INTO GAMETEST (FIRE_SCORE,NUM_TREES, NUM_HITS, TIMEOFMATCH) VALUES ( \" + fireScore + \", \" + numTrees + \", \" + numHits + \", \"+ timestamp + \")\"\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 380,
        "wires": [
            [
                "f17cfb3701f218bb"
            ]
        ]
    },
    {
        "id": "f406a76e56b92d05",
        "type": "debug",
        "z": "8b4b6895c0ec29ec",
        "name": "SQL Write Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 540,
        "wires": []
    },
    {
        "id": "43ddc5a441c4fd3f",
        "type": "link in",
        "z": "8b4b6895c0ec29ec",
        "name": "genericSql",
        "links": [
            "cdb9035ee521bb85",
            "3e88982af6e3f40a",
            "b495418c6c4b995b",
            "3a4b12e5b9609b0d",
            "36875745f8a09dcd",
            "d527904ed8723b40",
            "91eeec4cfa6d85ca"
        ],
        "x": 175,
        "y": 540,
        "wires": [
            [
                "d7e91528f5c8f1d6"
            ]
        ]
    },
    {
        "id": "205cfd1b6882a75f",
        "type": "inject",
        "z": "8b4b6895c0ec29ec",
        "name": "Drop Game Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "3472ec7018175754"
            ]
        ]
    },
    {
        "id": "3472ec7018175754",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "DROP TABLE IF EXISTS MATCH_STATE;",
        "name": "Drop MATCH table",
        "x": 550,
        "y": 60,
        "wires": [
            [
                "82f12a1e14f33b59"
            ]
        ]
    },
    {
        "id": "544ae34808a17523",
        "type": "debug",
        "z": "8b4b6895c0ec29ec",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 20,
        "wires": []
    },
    {
        "id": "d68e0db08f5b39fe",
        "type": "comment",
        "z": "8b4b6895c0ec29ec",
        "name": "SQL-Lite Management and installation notes",
        "info": "We could distribute an image with the sqlite node alreaduy installed -- but this is the instructions to install it:\n\nTo install:\n cd ~/.node-red/\n npm i --unsafe-perm node-red-node-sqlite\n\nCreate this directory (to store the database):\nmkdir /home/pi/sqlite-storage\n\nThe database is configured in node red with the file:\n/home/pi/sqlite-storage/sqlite\n\nNote that the first time you create a table, it will automatically create the file in the directory and start writing to it.\n\n Then just run the following injections to create the table:\n \"Create Game Table\"\n\n if you want to drop the table and start over:\n \"Drop Game Table\"\n\n There are several other injections that allow to test everything out.\n",
        "x": 230,
        "y": 20,
        "wires": []
    },
    {
        "id": "f17cfb3701f218bb",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLLiteGenericAccess",
        "x": 890,
        "y": 380,
        "wires": [
            [
                "d8a5d35c8d38a3d3",
                "bb20e976f6f77ed1"
            ]
        ]
    },
    {
        "id": "d8a5d35c8d38a3d3",
        "type": "debug",
        "z": "8b4b6895c0ec29ec",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 380,
        "wires": []
    },
    {
        "id": "bb20e976f6f77ed1",
        "type": "link out",
        "z": "8b4b6895c0ec29ec",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "6864183a6d7d2b25"
        ],
        "x": 1105,
        "y": 260,
        "wires": []
    },
    {
        "id": "c940c00eb130609a",
        "type": "comment",
        "z": "8b4b6895c0ec29ec",
        "name": "Insert New Match - TEST MATCH (For Testing only)",
        "info": "",
        "x": 250,
        "y": 320,
        "wires": []
    },
    {
        "id": "92a4b7e1ddc01aaf",
        "type": "comment",
        "z": "8b4b6895c0ec29ec",
        "name": "Generic SQL Access for Writes",
        "info": "",
        "x": 190,
        "y": 480,
        "wires": []
    },
    {
        "id": "1c0c1219794c876a",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE GAME_SCORES (\nMATCH_NUM INT NOT NULL,\nNODE_ID VARCHAR[32],\nFIRE_SCORE INT NOT NULL,\nNUM_TREES INT NOT NULL, \nNUM_HITS INT NOT NULL,\nNUM_DROPS INT NOT NULL, \nTIMEOFMATCH INT NOT NULL,\nPRIMARY KEY (MATCH_NUM, NODE_ID));",
        "name": "Create Game Score table",
        "x": 950,
        "y": 140,
        "wires": [
            [
                "544ae34808a17523"
            ]
        ]
    },
    {
        "id": "82f12a1e14f33b59",
        "type": "sqlite",
        "z": "8b4b6895c0ec29ec",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "DROP TABLE IF EXISTS GAME_SCORES;",
        "name": "Drop Game Table",
        "x": 770,
        "y": 60,
        "wires": [
            [
                "544ae34808a17523"
            ]
        ]
    },
    {
        "id": "f4b7c4c243db620d",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Read Config Node ID",
        "x": 360,
        "y": 700,
        "wires": [
            [
                "2bcc56e6d241c3d9"
            ]
        ]
    },
    {
        "id": "837b88b53ec5549a",
        "type": "mqtt in",
        "z": "f3ec5d556e86f8d0",
        "name": "edgenode/initialization",
        "topic": "edgenode/initialization",
        "qos": "2",
        "datatype": "utf8",
        "broker": "5999f1d09afe1039",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 620,
        "wires": [
            [
                "0faf666bf00276e9"
            ]
        ]
    },
    {
        "id": "5bdc6b89364fd15a",
        "type": "comment",
        "z": "f3ec5d556e86f8d0",
        "name": "Config Setup Instructions",
        "info": "Config for the field contains the mapping of UUID (as written to each arduino board) and the node id as defined in the field diagram (containing LBO, RBO, etc)\n\n1. Write a text file in the following format:\nEDGE_UUID,EDGE_NODE_ID\n7452C441,LBO\n7452C442,LBM\n...\n\n2. Place on the raspberry pi in this location:\n/home/pi/field-config.csv\n    2.a -- emergency option, you can force a config down in the \"Write config to file\"  flow below -- see instructions there\n\n3. Create and/or drop then create the \"Create Config Table and import\"\n\n",
        "x": 210,
        "y": 40,
        "wires": []
    },
    {
        "id": "9bca7655eb1d89cf",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE FIELD_CONFIG (\n  EDGE_UUID TEXT PRIMARY KEY,\n  EDGE_NODE_ID TEXT\n)",
        "name": "Create Config Table",
        "x": 570,
        "y": 140,
        "wires": [
            [
                "cf58eb77138066b2"
            ]
        ]
    },
    {
        "id": "c7fe99b0e0506601",
        "type": "inject",
        "z": "f3ec5d556e86f8d0",
        "name": "Load Config File into Config Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 220,
        "wires": [
            [
                "8c0e6a2a0a04fcd7"
            ]
        ],
        "info": "See instructions on top -- but file is:\n/home/pi/field-config.csv"
    },
    {
        "id": "8c0e6a2a0a04fcd7",
        "type": "file in",
        "z": "f3ec5d556e86f8d0",
        "name": "Read Field Config",
        "filename": "/home/pi/field-config.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 350,
        "y": 260,
        "wires": [
            [
                "340a8ade18808c45"
            ]
        ]
    },
    {
        "id": "340a8ade18808c45",
        "type": "csv",
        "z": "f3ec5d556e86f8d0",
        "name": "CSV Parse Field Config",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 570,
        "y": 260,
        "wires": [
            [
                "c58252a4cb097661"
            ]
        ]
    },
    {
        "id": "cf58eb77138066b2",
        "type": "debug",
        "z": "f3ec5d556e86f8d0",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 160,
        "wires": []
    },
    {
        "id": "9dd0a2d0ffb6a743",
        "type": "inject",
        "z": "f3ec5d556e86f8d0",
        "name": "Create Config Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "9bca7655eb1d89cf"
            ]
        ]
    },
    {
        "id": "4215a3196c228639",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SqlLite Commands",
        "x": 970,
        "y": 260,
        "wires": [
            [
                "cf58eb77138066b2"
            ]
        ]
    },
    {
        "id": "c58252a4cb097661",
        "type": "function",
        "z": "f3ec5d556e86f8d0",
        "name": "Construct SQL",
        "func": "var o = msg.payload;\nvar sql = \"INSERT INTO \\\"FIELD_CONFIG\\\"(EDGE_UUID, EDGE_NODE_ID) VALUES(\\\"\"+o.EDGE_UUID+\"\\\", \\\"\"+o.EDGE_NODE_ID+\"\\\") ON CONFLICT(EDGE_UUID) DO UPDATE SET EDGE_NODE_ID = excluded.EDGE_NODE_ID;\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 260,
        "wires": [
            [
                "4215a3196c228639"
            ]
        ]
    },
    {
        "id": "579c8c19ccab0937",
        "type": "inject",
        "z": "f3ec5d556e86f8d0",
        "name": "Drop Config Table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "a74d42b7ae961652"
            ]
        ]
    },
    {
        "id": "a74d42b7ae961652",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "DROP TABLE IF EXISTS FIELD_CONFIG;",
        "name": "Drop Field Config Table",
        "x": 590,
        "y": 100,
        "wires": [
            [
                "cf58eb77138066b2"
            ]
        ]
    },
    {
        "id": "ac6ab4bb77d73dc4",
        "type": "function",
        "z": "f3ec5d556e86f8d0",
        "name": "Construct SQL",
        "func": "var o = msg.payload;\nvar sql = \"SELECT EDGE_NODE_ID, EDGE_UUID FROM FIELD_CONFIG WHERE EDGE_UUID='\" + o.uuid+ \"'\" ;\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 620,
        "wires": [
            [
                "f4b7c4c243db620d"
            ]
        ]
    },
    {
        "id": "0faf666bf00276e9",
        "type": "json",
        "z": "f3ec5d556e86f8d0",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 620,
        "wires": [
            [
                "ac6ab4bb77d73dc4"
            ]
        ]
    },
    {
        "id": "2bcc56e6d241c3d9",
        "type": "function",
        "z": "f3ec5d556e86f8d0",
        "name": "extract nodeid",
        "func": "\nvar nodeid = msg.payload[0].EDGE_NODE_ID;\nvar nodeuuid = msg.payload[0].EDGE_UUID;\nmsg.payload = nodeid;\nmsg.topic = \"nodered/initialization/\" + nodeuuid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 700,
        "wires": [
            [
                "feddd1768611c551"
            ]
        ]
    },
    {
        "id": "feddd1768611c551",
        "type": "mqtt out",
        "z": "f3ec5d556e86f8d0",
        "name": "Publish Node ID to edge Node",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5999f1d09afe1039",
        "x": 850,
        "y": 700,
        "wires": []
    },
    {
        "id": "b111193564f5a7a0",
        "type": "comment",
        "z": "f3ec5d556e86f8d0",
        "name": "Initialize Edge Nodes ",
        "info": "Edge nodes report in when they come online with a UUID\nUUID is accessed from the DB, and returned as a Node ID (as defined by our field layout/diagram)\n\nSee Load Config File into Config Table flow for how to edit this\n\nEach Arduino needs a unique id written into eeprom using -> https://github.com/lanceriedel/burn-uuid-eeprom\n",
        "x": 200,
        "y": 560,
        "wires": []
    },
    {
        "id": "97e2f252303bfcf3",
        "type": "inject",
        "z": "f3ec5d556e86f8d0",
        "name": "Write config to file",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[69,68,71,69,95,85,85,73,68,44,69,68,71,69,95,78,79,68,69,95,73,68,10,55,52,53,50,67,52,52,49,44,76,66,79,10,55,52,53,50,67,52,52,50,44,76,66,77,10,55,66,68,56,51,65,49,51,44,82,66,77,10,55,48,57,67,68,66,70,70,44,82,66,79]",
        "payloadType": "bin",
        "x": 150,
        "y": 840,
        "wires": [
            [
                "a1e6f1282aa6e63a"
            ]
        ],
        "info": "If you can't access the raspberry pi file system -- you can put the config here and force write it\nBUT -- you have to send as binary so that it retains the newlines\n\nFor example:\nEDGE_UUID,EDGE_NODE_ID\n7452C441,LBO\n7452C442,LBM\n7BD83A13,RBM\n709CDBFF,RBO\n\n\nBe sure to hit the elipses ...  so that you can see what you are typing.  \nAlso note that it will change to binary as soon as you send -- but it will work fine"
    },
    {
        "id": "a1e6f1282aa6e63a",
        "type": "file",
        "z": "f3ec5d556e86f8d0",
        "name": "",
        "filename": "/home/pi/field-config.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 410,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "b70ae83c222fa7da",
        "type": "comment",
        "z": "f3ec5d556e86f8d0",
        "name": "Emergency Use! Write config -  (you need to load it after)",
        "info": "If you can't access the raspberry pi file system -- you can put the config here and force write it\nBUT -- you have to send as binary so that it retains the newlines\nFor example:\nEDGE_UUID,EDGE_NODE_ID\n7452C441,LBO\n7452C442,LBM\n7BD83A13,RBM\n709CDBFF,RBO\n\n\n\n\nBe sure to hit the elipses ...  so that you can see what you are typing.  \nAlso note that it will change to binary as soon as you send -- but it will work fine",
        "x": 240,
        "y": 800,
        "wires": []
    },
    {
        "id": "3dd25f169354ef22",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "fixed",
        "sql": "Select * from FIELD_CONFIG;",
        "name": "Read Config",
        "x": 270,
        "y": 380,
        "wires": [
            [
                "ad34ea44766153db"
            ]
        ]
    },
    {
        "id": "6f32fc52a4d53df8",
        "type": "link in",
        "z": "f3ec5d556e86f8d0",
        "name": "Read Config",
        "links": [
            "5870cb8ac8846724",
            "f03d05829f9254f9"
        ],
        "x": 85,
        "y": 380,
        "wires": [
            [
                "3dd25f169354ef22"
            ]
        ]
    },
    {
        "id": "ad34ea44766153db",
        "type": "link out",
        "z": "f3ec5d556e86f8d0",
        "name": "link out 29",
        "mode": "link",
        "links": [
            "4369b98b6d58fe86"
        ],
        "x": 435,
        "y": 380,
        "wires": []
    },
    {
        "id": "161f3cee4bd60724",
        "type": "link in",
        "z": "f3ec5d556e86f8d0",
        "name": "Insert UUI Entry",
        "links": [
            "99f3e6c97f2c0d2b"
        ],
        "x": 95,
        "y": 480,
        "wires": [
            [
                "b1e8ab6feba986c9"
            ]
        ]
    },
    {
        "id": "b1e8ab6feba986c9",
        "type": "function",
        "z": "f3ec5d556e86f8d0",
        "name": "Construct SQL",
        "func": "var o = msg.payload;\nvar sql = \"INSERT INTO \\\"FIELD_CONFIG\\\"(EDGE_UUID, EDGE_NODE_ID) VALUES(\\\"\"+o.EDGE_UUID+\"\\\", \\\"\"+o.EDGE_NODE_ID+\"\\\") ON CONFLICT(EDGE_UUID) DO UPDATE SET EDGE_NODE_ID = excluded.EDGE_NODE_ID;\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 480,
        "wires": [
            [
                "4b72a159e1e82517"
            ]
        ]
    },
    {
        "id": "4b72a159e1e82517",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SqlLite Commands",
        "x": 430,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "c79cb601a8c0ab17",
        "type": "comment",
        "z": "f3ec5d556e86f8d0",
        "name": "Add Single Edge Node",
        "info": "Update single node entry",
        "x": 180,
        "y": 440,
        "wires": []
    },
    {
        "id": "9f34def0af02efeb",
        "type": "function",
        "z": "f3ec5d556e86f8d0",
        "name": "Construct SQL",
        "func": "var o = msg.payload;\nvar sql = \"DELETE FROM \\\"FIELD_CONFIG\\\" WHERE EDGE_UUID=\\\"\"+o.EDGE_UUID+\"\\\";\";\nmsg.topic = sql;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 480,
        "wires": [
            [
                "80e1d2d095f19693"
            ]
        ]
    },
    {
        "id": "80e1d2d095f19693",
        "type": "sqlite",
        "z": "f3ec5d556e86f8d0",
        "mydb": "6f6f2d0bf9d4b5e3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SqlLite Commands",
        "x": 990,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "ac5d35d999fc40b9",
        "type": "comment",
        "z": "f3ec5d556e86f8d0",
        "name": "Remove Single Edge Node",
        "info": "Update single node entry",
        "x": 730,
        "y": 440,
        "wires": []
    },
    {
        "id": "cd811a5da6dea1c9",
        "type": "link in",
        "z": "f3ec5d556e86f8d0",
        "name": "Delete UUI Entry",
        "links": [
            "9e93acca6dde891c"
        ],
        "x": 635,
        "y": 480,
        "wires": [
            [
                "9f34def0af02efeb"
            ]
        ]
    },
    {
        "id": "f8aa15da571b3aae",
        "type": "ui_text",
        "z": "829ad5255d8cf01f",
        "group": "a5991f3b10b51e7c",
        "order": 6,
        "width": "6",
        "height": "4",
        "name": "Loaded Values",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 580,
        "y": 160,
        "wires": []
    },
    {
        "id": "dfeaa41a75adbf51",
        "type": "ui_button",
        "z": "829ad5255d8cf01f",
        "name": "Submit",
        "group": "a5991f3b10b51e7c",
        "order": 7,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Current Config Dump",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 160,
        "wires": [
            [
                "5870cb8ac8846724",
                "a11c3ee5796d07f2"
            ]
        ]
    },
    {
        "id": "f4c6348e4bde4c20",
        "type": "ui_form",
        "z": "829ad5255d8cf01f",
        "name": "",
        "label": "Add UUID Mapping",
        "group": "a5991f3b10b51e7c",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Arduino UUID",
                "value": "EDGE_UUID",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Node ID",
                "value": "EDGE_NODE_ID",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "EDGE_UUID": "",
            "EDGE_NODE_ID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "99f3e6c97f2c0d2b",
                "a11c3ee5796d07f2"
            ]
        ]
    },
    {
        "id": "5870cb8ac8846724",
        "type": "link out",
        "z": "829ad5255d8cf01f",
        "name": "link out 28",
        "mode": "link",
        "links": [
            "6f32fc52a4d53df8"
        ],
        "x": 305,
        "y": 160,
        "wires": []
    },
    {
        "id": "4369b98b6d58fe86",
        "type": "link in",
        "z": "829ad5255d8cf01f",
        "name": "Config Display",
        "links": [
            "ad34ea44766153db"
        ],
        "x": 435,
        "y": 160,
        "wires": [
            [
                "f8aa15da571b3aae"
            ]
        ]
    },
    {
        "id": "99f3e6c97f2c0d2b",
        "type": "link out",
        "z": "829ad5255d8cf01f",
        "name": "link out 30",
        "mode": "link",
        "links": [
            "161f3cee4bd60724"
        ],
        "x": 385,
        "y": 260,
        "wires": []
    },
    {
        "id": "02673478ac90323a",
        "type": "comment",
        "z": "829ad5255d8cf01f",
        "name": "Dump Current Config",
        "info": "",
        "x": 200,
        "y": 100,
        "wires": []
    },
    {
        "id": "1dfa349788a1a948",
        "type": "ui_form",
        "z": "829ad5255d8cf01f",
        "name": "",
        "label": "Remove UUID Mapping",
        "group": "a5991f3b10b51e7c",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Arduino UUID",
                "value": "EDGE_UUID",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "EDGE_UUID": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 210,
        "y": 340,
        "wires": [
            [
                "9e93acca6dde891c",
                "a11c3ee5796d07f2"
            ]
        ]
    },
    {
        "id": "9e93acca6dde891c",
        "type": "link out",
        "z": "829ad5255d8cf01f",
        "name": "link out 31",
        "mode": "link",
        "links": [
            "cd811a5da6dea1c9"
        ],
        "x": 415,
        "y": 340,
        "wires": []
    },
    {
        "id": "a11c3ee5796d07f2",
        "type": "delay",
        "z": "829ad5255d8cf01f",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 220,
        "wires": [
            [
                "f03d05829f9254f9"
            ]
        ]
    },
    {
        "id": "f03d05829f9254f9",
        "type": "link out",
        "z": "829ad5255d8cf01f",
        "name": "link out 33",
        "mode": "link",
        "links": [
            "6f32fc52a4d53df8"
        ],
        "x": 635,
        "y": 220,
        "wires": []
    }
]